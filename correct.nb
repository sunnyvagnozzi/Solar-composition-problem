(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    646576,      12858]
NotebookOptionsPosition[    636159,      12558]
NotebookOutlinePosition[    636496,      12573]
CellTagsIndexPosition[    636453,      12570]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "IMPORT", " ", "LOGARITHMIC", " ", "DERIVATIVES", " ", "OF", " ", 
     "OPACITY"}], ",", " ", 
    RowBox[{
    "INTERPOLATE", " ", "THEM", " ", "AND", " ", "FIND", " ", "CHANGE", " ", 
     "IN", " ", "OPACITY"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Import", " ", "logarithmic", " ", "derivative", " ", "of", " ", "opacity",
     " ", "with", " ", "respect", " ", "to", " ", "individual", " ", 
    "elemental", " ", "abundances", " ", "and", " ", "total", " ", 
    "metallicity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.664796937937256*^9, 3.664796981969309*^9}, {
  3.664797380760983*^9, 3.664797382517408*^9}, {3.664797532535124*^9, 
  3.66479753548636*^9}, {3.664801264643611*^9, 3.664801265445731*^9}, {
  3.664801790156945*^9, 3.664801821568136*^9}, {3.664899300792557*^9, 
  3.664899306786201*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/c.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/n.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"o", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/o.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ne", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/ne.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mg", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/mg.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"si", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/si.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/s.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fe", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/fe.dat\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.66479701632897*^9, 3.664797070728175*^9}, {
   3.664797112026363*^9, 3.664797163855538*^9}, 3.6647974427994757`*^9, {
   3.664797514081121*^9, 3.664797525274414*^9}, {3.66492545463367*^9, 
   3.664925454641905*^9}, {3.6649254924952793`*^9, 3.664925492502294*^9}, {
   3.664926173292145*^9, 3.6649263308171177`*^9}, {3.688361048876691*^9, 
   3.6883610493079348`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Interpolate", " ", "data", " ", "points", " ", "for", " ", "logarithmic", 
   " ", "derivatives", " ", "of", " ", "opacity"}], "*)"}]], "Input",
 CellChangeTimes->{{3.66479753901235*^9, 3.66479754896356*^9}, {
  3.664801833639627*^9, 3.6648018371076717`*^9}, {3.688361021724531*^9, 
  3.688361022660679*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fc", "=", 
   RowBox[{"Interpolation", "[", "c", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fn", "=", 
   RowBox[{"Interpolation", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fo", "=", 
   RowBox[{"Interpolation", "[", "o", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fne", "=", 
   RowBox[{"Interpolation", "[", "ne", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fmg", "=", 
   RowBox[{"Interpolation", "[", "mg", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fsi", "=", 
   RowBox[{"Interpolation", "[", "si", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Interpolation", "[", "s", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ffe", "=", 
   RowBox[{"Interpolation", "[", "fe", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.664797556190544*^9, 3.664797630479417*^9}, {
  3.688361053668455*^9, 3.6883610563635607`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Plot", " ", "logarithmic", " ", "derivatives", " ", "of", " ", 
    "opacity"}], ",", " ", 
   RowBox[{"reproduce", " ", 
    RowBox[{"Fig", ".", " ", "10"}], " ", "in", " ", "1312.3885", " ", "and", 
    " ", "blue", " ", "curve", " ", "in", " ", "left", " ", "panel", " ", 
    "of", " ", 
    RowBox[{"Fig", ".", " ", "2"}], " ", "of", " ", "0912.4696"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6647976335837603`*^9, 3.664797642824731*^9}, {
  3.664797738208345*^9, 3.6647977419405737`*^9}, {3.6647977855613728`*^9, 
  3.664797810081105*^9}, {3.664801842845489*^9, 3.664801855243184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Fc", "[", "r", "]"}], ",", 
      RowBox[{"Fn", "[", "r", "]"}], ",", 
      RowBox[{"Fo", "[", "r", "]"}], ",", 
      RowBox[{"Fne", "[", "r", "]"}], ",", 
      RowBox[{"Fmg", "[", "r", "]"}], ",", 
      RowBox[{"Fsi", "[", "r", "]"}], ",", 
      RowBox[{"Fs", "[", "r", "]"}], ",", 
      RowBox[{"Ffe", "[", "r", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.35"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664797812813015*^9, 3.664797901322425*^9}, {
  3.6647980143029737`*^9, 3.664798015729889*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
eZ/DYmJGwej/d7JGtxL/A/uBj0E=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
AfbHI6LnPNrxHz5rQ5E=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
TZfuSqfjY2FrbGIiH8z+NYZBw2n4Pye89no=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k4lF8bB3Bp0aayJUtEQva0kMpXpQWRItl+JaUQkkiUSMnWggiDscuW
fauQZYaUSrLNEBVmxppUylLe8/5jrs91HmfOuc993+cZKdtLx+24ubi4VpI/
//9MGX7m/jbwmLbm5oCmYVMK7m7iLy0SVIP2XdVTZSYU8O/2TH8oqIPMlfKH
wo9TcMbOboIucRj8BsW+149RYN6Ytf6moDHWtQgt9DCmgKtnw/5YEVMcUYhs
9jlKwZOJaPsSCXMYctw6o4womF1Zb+EhaAP+12epP45QYBR9c5Rb2BbLV8wb
7yROkdLyDRM5B7XhleoPDCiYyvnFJyF+HhumPuye1KdAf0dhWo6EPVyrIpzs
iKk1Tho7pRzx7N2jSrYeBZP68q8bNjohpkJE3ov4YHu/tamsC1KXOWSLEL/N
f//bVdAVbsYN2k2HyfzuyrXlQpeRLHb1cyDxBq3QkH9r3dAwXRlyglh/nmNy
YN0V3PTq01QndqcdXH9PxB2nN0uz1hNTg9NYraIe4I5pur+O+JURd4GI+FVw
m4oqShNPCth42az3xNSI+TMtYnFG1b4nEtdwbbxpqy3xQarYynFJL0gPF0bF
ELue9WrfJuWNUOcTzE/EFPlO6nXp6zDimZ7bQtZPG9tmX7fxBhYd/PInkni8
KGLLsk0+0K043rSExGPdtYmZo7I3kT0a7hBIvG+PEe2xnC+aL/e3rSXx3LGg
o8FF0A8HOkKXlBK/6b+jyB/lh7zM99NnSPxtGraGlQrdQpLnj6z1hhT8yvz6
0/zxLRR/2MXPIQ4JDbeYW+sP/wNjyrXkPCVddKoTo/2ReubIn0xy3iXG36T3
r7uNopIEp0SSD71ChqPBIncwu3OzTgXJnyt/Zo2VKXdgHzwaxST5tbQ7u7RF
NAAy+iX+K05QoJ601FdY/C7+WJxdFXuSggAFGl+6RBCeG7x0sP2PAlHeK1cP
JwbBpXrTjz+nKMj7JtU9IhkMLeHSsQQbCrpKfNPUpUIQWGqzUeAcBUrYpVGz
8R7S9lxcmX2Rglqp4bizaffw1SuGUuxMgdmiWC6eTfexiE/A/c0lCvyappoM
ZR/geAj31CZ3CoY3W+Q5C4aha69+YYAPyRf7VbbylmHQKHyipOFHAXdmvVB/
Yhj4ZZiHpv0pEJFV8TFXDIcPLfFAfhAFh6UXHtm/LwLDtYzSL5EUmJ6pmP8b
GIFxiRWBwjEk3knOxRVvIzDZ19b4XxwFnhJdoioWj7BVW8BPLIWCDNGnQ+tc
I+G854K0VQEFRRa2CR9LI6F0L7BRoISC6hjhYw9mI3ExcWFuTzkF7Wv9KxYG
RuFp/YRo4ksKFgmcDBxPeIwl7a/Zg+8psF2xYBPtTQwssnqmPH5Q4KJf1nWT
LxZNbMVq1T8UeAdfvLfzZCyqc/47Nz1HQThPx4+8r7G44a6/vXJJHGoW5tTF
TlOwvNtdZ140DhJzpjaX5BJQHXKx1ONgHJyvthner01CJattYDozDq9s2Kpi
X5OgWvfTVD0/DjIGM3xZ3MkY/nblh2dpHHokN3TQ9ifD5uvYE4W6OBxpunhq
jp4Mgzun7ZR74qAgvvDSxdcp0KKVsFL548Gq3RKm9zENEh7zGerB8diXq+vW
+SMN4YpnbXjC40F9fNLUTjAd7tsFcjgx8Thx0WfdrRPpKOov/dySGQ+aYFNS
RWc6lq6I2q/RFI+UCzaFcj0Z0Ly/Pf7kygSc5n3YungwE8eTOnfT4hKgLXVS
a2JRFmQe0q5NpiVAYrtkClMmC6b9G9SV8hLQa51/Of9cFtTOPlleV5OAU7nv
11gMZOGcqcOHqyxigzVHc/uzoRz7NItrGxXWweFvjn/NReHDeBmPTiqecut/
fX+pAFIZCZKXJJOwyi/ATPJWASSCDisMbkqCy9+a1y4RBXCs36R3RikJKn80
inlLC5DrkVl+cWcSCsY23TGYKcD3tXKLm0ySUNS1QLbxTiE0qt40pwQnoSzv
mUN1bBEeSDScq55OQo3l5u+59SXYd1bMfmI4GWG8/Dxxbyvg1nKs68BgKjzi
O9VFVKrQ6bOlSsAkA9+Uk5cLVtXgvKXFt9kfmeDeZTW/sboOvyMuxx9wycGG
soXz14dpELbgP2q2Nw91jmtuxU7SsCH2/tbCI3k4J7l+YfkMDcriIR385nnI
DNrBM7mcjsuqNd7DLnlQs3JYba9Ih8WFLaqj8XkA13tJUyc6QrjzP+vM5OGU
PkVHaZwORyEjBafn+eCaz6jTm6JjRXFeQX5DPlKKi3Uv/KMjqMRyxWxrPlji
bw+nrGqAqpyRTdZIPly+zRuvU23A74+MqqJVBfCJtDuzyLUBgf98g7bsLUB8
r5p/z/cG2EcM7zbPKkDip+xNH6YbMMX8I9mbX4CUHpkm+oJG8K4LNrAvK0Am
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
IZzzUzmo456D/wFh1Fwj
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3k8VG8UxkUoISnJElkq0Z4WbU+kDSEUSlJJoiKlQiGKSKXBLPZ9y5Yo
RkkoVPYZu8LcMShLSLbqd3//zHy+n+d9733POc859/MqnXMyucDPx8c3l/z5
/z9+oPBGtf+xvSaRtu7nhGjwWymZn7tkI3a9+3XkO8mSu28lPV2yD23Lcz97
CtNw9sKFkQ8KhxFNU/srP48Gi4q05Z5LjPF7Qd+3DyTzdazYz5Axg9FJLye3
+TSkjNDs8xQssPTc3efbRWiYES2zdF1igzS5fmXWAhoMaZ4/+KXPwTjoxqlc
URrilXZ6BcvYYrlm/M4IMRr0tr1IfK5gj65kRV7QQhqqs2t/Oy9xxtKA/XXD
i2mYuLHu/WupaxhXvielIkXDip2PAv8udYHdcPMvm6U03Cg/uDxI5gbeR4n6
zC6jQb71rU6Kwm1YlmyOzVWg4WC0nOiQohsI67awnStocD7vxtZUcoeLhqRc
tRIN5YOa9qUqd2D25UrNopU0bJvT9PHqEm+si3LNkVlLw2fOfQ3JMG90ymH6
1zoabD5uCc6Xuoc55QsrOzbQEPjomeXsUh9YivMPVG2h4avU0R8BMvdhPPNJ
QXk3DdcnZ4zXhd9H9NarNiZ7aZjXnp5fJ/sANaFPZR/vo2Fz7DwvaXk/PMLD
UaUDNDxQL1+UpPAQ3q9+zqsypEFW7PrNwzEPwfFf1WtwjIasYaX274oBoLkZ
b2w3paElzytxs1IgUne9E5S2pGEtdm0vUQmCe3pq0AJbGgbWWGZdWRKM2dys
il4PMp/24ufUTgbjMOPL2eNeNPCnlklxYoKRJ+alVOdDg8yq9XctNJ5B2fiw
yEAADYeVBQz261DQJzhzNJtOQ7JsZv8y51DcCTDn9yygIdfyXFRjfihs2w7K
ZL2hoZgufezJTCiO3rywY6CEBvZSnwIB/zBY723296uiYe5ic/+hKCrmtcnt
MGqn4dyCOSvLP9PRGhKjoziHjqt6r1o8FzHgu1yUb6EQHe4BjkFa5gxIZuuk
iiyg45lw01hWDwNSjLwXK6XoKBF4XsqYCgdMd7oOrKFDYdbMxml1FALy9qtk
Hqfjyk3W0cfvYzG3hg8ir+iotOFtkOuJxXhQTZzQGzpU9acXpfHHoUjIcKtY
KR0diiuayvfH4XusXd+OGjoMqhytZz/E4Xn68uMiPDrU5QWcHD/Fw3EgcipE
loHe95uCjzQmor0ua2J7AAM6GbouzWOJeKjUGXArmIFoqrnZhSVJ4P/atfw9
jYHjjneX3TueBA+JKzouyQyUL6mKLWhOwmnqa1ODcgbiL9q8WN2RjMhZ8cNf
54TjjNjTBkFuKqb6wv5dvR+OvUrmO0fmpqFW74zE+6BwKGxVjG9TTcPuNwHB
8mHh+GqVfS3bNg2rE6xbh5PCYZ1RK2FJpEHzBOWCcCXJ+hJGGZx0/J10Wjsl
FgGrgGefTXoy0OvkRu2MjUAmv15PrVMOXKSdhk/2RELc+8EJxXs5aF7v9pMY
jMTVPyWfrlJyEDlmn+A2FYn1k9tfiuXnwNChYmGZRBRyBlfe15/OwUMjpRY2
opDbMmdVxf0X+CFpGjoVE4VXWYWXihm5eKr3T3mdfTRKTq75mVGWhyEXvqHh
BbF49Mc7jdWYh4y1oaWBkrE4EdtydpaTh66n/qLqMrEY5Po36M/Nh0lC7B/X
VbGQvdb7ckA3H3WbVfbt147FDf+Em2of8/GblhCfeysWannLZxMqX0GJYf3u
Gy8WwWKSwhHVBdhov8pOjx0H18jmzTLr3+Loq8pBZclEDK+LE1nytgSsNnXn
ouBk8O869U+luBS7em9Fj21Mw4pXAv88Bsrh9yf4oKxOBiK/bvTp+PkRH50a
Pr45ko1TMTk2gsOVKDitlXlt5wuo1ijo3ZT+DMsytQbDf7nQT1/0eli2GgOO
opFDtDzcHR9d/+JILS6nFVvKrH4FN8fF95a/roOiQVxV1t3XOPfSKaP3VT12
XS26p0EtgPWcLWd3F9Uj46WEYU94AU4aTUhR3tXDXLBUixpTgGPf73jtqazH
2lUxp36lFmCfSqBJaGs9bn9euC+4qAAKIYmT2rP1qF+0XkezqwCtLq26UdoN
2Pjb7avk6kKwSiKnRg80YEklR9pWoxB14jZZh/UakOrY0fhiQyEq03ulx00a
8MK3653OjkK86hkb0LNtAGHL903rSCFCTcSfTfo1YJEl/8hth0IYb97fafql
AWtd1CWWpRciOUAs4UxdAxw8qjOzMgvxp6vZ3pHVgNIlZQXaLwqR/vTyuE9H
A1S68oVOFxRi7mDYgtwfDTDWXLPY/mMhXqf0aUmINSI05f21L92FUFj+hPrl
aCM6zwefzZVi4sYNC6uWY43w+Kf1s2YZE58/KysTxxux52r+VZ4cE7fdX2fO
nG7E08xNKqLKTDQ0d5WrX22EmHg2v+p6JvwoW8YePmlEgcYOxcADTAwKtxod
qG1Es+/JgcXXmFixuzAppbERVvxjxp3XmTBxZszMb2lE3/Any7ibTBS0WKbU
dDXikMboHpk7TPiktf01H21EeNq60go/Jpbqd2Q6SLFweJKlJxfBxGGvNwLV
MixcT1niGhTFhMfLSMsNCiy4S94e+R3DRJfcacHxVSyYbDj/8W0iE+k/Oq3u
7mAhUqTNZm4WE3uffFsQfIqFYx4fu26/Y8K59N3Z0TMseKmNvgl6z0TCRMxr
M1sWznxdyQgvY2LeGZvzMldYcLhlvSexgox/Qzcz3pMFJa5KytVaJubavpcQ
9GXB1Drm17F6JrbT4+wu+rOQIBQmt6GRiUi+c5Jrg1mo+Z3S2tTEhF19z6X8
OBYqejyC2zuZoAuWvZNOZuHEqRbRx9/I/GslSLmns3B5jdKOHd1MbIw//37v
SxYutG709yCYmHYhllWWs/BP3MItf4CJp0t6K9p4LPjO1dk7+ouJ0cE7WWo/
WHD9xTm+7TcTJyoWh90cYWHJ95fzbkwyIe+ufU5yijzPmcy1HdNMeJm2HLb5
w0Jy5N5QoVkmetY6bciaw0acZbWv+h8mDggJLZ0VZCPa9fHEob9MpH6LnD0i
woZbbS7P+h8TCwq3cGjibEgevGbixFeEq5RPVVxJNjbtbzzKIrne8WzOFmk2
mkyHrq2bUwTNA5PUe3JsSOxZpeJNMk3h6d1aRTa0ntmd/0Ly9O+VtstV2cjs
CdeU5C/C6fo3eo5qbJSXZdGPkVySbrqpcC0b7R8fPwskWeX+gLTwJjb0PVWU
3pLsd/reX7OtbDjfOXWkn+T+bcu48VpsJJgqiS4UKIKBRPbnkT1sgGrjuJ7k
7P4DuXt12IhpmnvpEMmSZR30oINsKKRMCZ0k2TXyulebHhtS4eqH7EhucRWx
UzNio0vbV+MyybuM4gxumrLRunE435HkaLUdW8rN2Tg1ZdlnS/Ic/loZSSs2
StZll5uTbNt+gc/Gho1zNm0GuiRX5M32ZtqSk1+lwkedZPUnIdUz9mx8nn/W
XoTkJxfV845cYeNgUsg/DhnPz33vw2nX2LB/qKf3mmQzWYt7XFc2nhy4pnef
5IKxoYtb3Mn8Oo3N0SdZrvqB4T1PNvRob1wWkOyZLL+11ocNmnFB9Acy391e
L+WW+7NhvK7B341kXUs9fsdHbNS9+7VhNckiordrhULZeGY078P/9b3CFX9l
RmfD71pNvgjJdcVJkfGRZL0oBldiSD9QrzVe2pvExrSc4o5XpF+m9ByMg9LY
YKfqGe0g2Up1zva2TDYMPDs080h/KTevn3vzFRu3DLpdGKT/HuR8GChjkvm9
pFHLT3JfgFX9ondsGMkEzrGbYSJrd2B0ZgUb6be2jMiQ/l20VOnBzGey/vrH
cxymyHk2/NrxSB0bVtNahvmk33fGc3dwyS/rDs1p9R1kP0R53FHc0slGISfj
ivMEE3zHFwvd62ZjSUFdWDzZPx+FtRvlB0i/LZONHh9jwvRK5BWzGTZGi26V
G40wIWG884LFPzZEdLk69sNM1GxusbISaMJB/gxPjyEm9CYXG9guaIIW9Z4m
5QcTOr6P1G/INcHAaLzcu498n90a5duKTWAVNVg68ZgoPlwhc0elCWGHfQss
epnQEheYf1+jCdXbaa1yZL9vZLjzQnY1wTJ2U9N5cj4MeSz7RkMTRrQPc9W+
MpFh/aopYj/5vMG0T30dTKxWHf2QoN+Ep62BCpZtTChkX0p8eaoJYpoOS2dZ
TIh+sDjb6NEEm6ctCQZVTHxKmbBo9mrCaFB+wztyvj0MDDVu923ClH3tyLqP
TAgY14HzqAnXNk3wzZSS86ftkMJYBBnv9teRFm+Y6B/Z1i75pgn5OfsUVcj5
+lFe6rjJbBOE1+7dyfeECZuOyo4Mvmboz9KPJj0i90fcsRUWbMbJfXYpugFM
rJcjrr8Ra4Z1nd42l/tMhMm8pKxSbEZhxdfJh+5M2C49Vjet3QzP+kM1yReY
4Jd4rJ/g34wgfIl/sZ2cr7X7Gv88aoag3BzrBE0mtj0dP2kR3IyHNXtinm5i
wkHcykGM0YydDu+LzDWYqBfVCLiV3ow/GqGhyQpMxM6v+qhf3Yxq6l2ffXPJ
74OAoM64ZAtafovtuP65EJu/vGubK92C23YO05MVhVgd5n5dSq4FpT/G1rmX
F0Ji9UjiNpUW+B8UGr76thAcvXZhty0t6LN0FlLOLsRDyovqP6YtoN85vQLP
CtGgZG0pHNYChZWRZXuNCnFh32tnWelW8v4guv1vcQECs9TCl8q1YmvX0IQZ
swA58uFlkoqtUCzcqpmaX4DpyTtLF6xuRQN7aqtuRgGevNB5M7OtFdMZ0e9M
GAV4rVwj3HmiFd9tXbZWuxRgviA3OobaCqHgvzPHVAqQWSVZrbq0DRm3n7hf
8XiNmQDu+kb1diQ2j2H5UD4mY90bBNd1ILT7H7PULQ/TQ34eHbqdsD73Ked6
Yy6WB+w2oZl/xSGrAyXXpF5gxC3Pocn8G3b+NbT1888CUXesvGNbF5xlg7fV
3U6HWrD6jeCCLsjOlP5+vCwFd38173y1vRsLvsTYOa9IhNnEvrlZ77tB0W5z
vLg+DoKKA99zyrpx5eJIrIJqHF4dCml8+aEbjLnnLrXLxEGawY0vrOqG5+2d
5RcE49C2K1D7Q303QheOSxR3xMLmXqNnR3c3zHTVvL2DYnFZ1G5KhL+HvMeL
C9Z3xcBX+dHQRZ0eVIk0bUiiRyFeCwpU3R7QPS8NCfpFocR47Gj5wR5MC6de
cr0ehb+epzJX6Pfg4+6Yx96GUXBv17jcatqDA5blRocEo+Ac+qVf70IPil+c
/BbqGgkrIXHuuoc9YHnqQOlsBDQHgtvHqnsQetc02v88A3x+lYv/1PagnnXx
+f3jDHxR4jMQauhBSvwquSeHGLC1dHqzrKkH4uq5ch81GAirPBq152sP9Ml0
fRqnYyJZ5Iz/UA9Eulw4ygF0FJy/3yO7kIPYKL8qoSIa7v8rklVdxMG/mLGa
oCwajCPGTNYt5uC6hdc/hXga+hrOlUGag956PeuL5H1VRkc70VaRgzvW8hu9
zWlwX/H3QtYGDjxfWO4QmKBiT+etfm1jDh6aSvPu7qYi/rPIwD4TDhiZxfcD
N1EhxIwagBkHHj4LoxJWUVFDLfu+x4KDigl+8xkJKmyMFw5p2XBwy9svTrs3
DPfLkkc3OZPPq3sutyEkDJ/S2DNKwRy8Vq2eKpwIxXq6/ewKCgeHfWY2nRsM
RYjfzKxiKAefNDyzpYlQWJ1X+ruczkHLG3ZIen0oBuWv8MnGciBlqPLSOTMU
EsFzBSVzOFDlcpp8L4bC/OYWcf46DrqTLeaNckOgblp/Ym0DBz61HJ30zhDM
bnCKOcHiINWsYP51dghi+9M3Pm/hYHwXxWrbhxAMWCmbmnVzwBo9OXU/KQRv
tEoiPDkctF/3uV0aFYKnS62JVC4Hx7siyyWoIdCsY7j+6edAbf8/zje/EHju
X0RPHuWga+lrp/pLITBekd1VN86BcFTbfe3zIVD5Y7BmZoLMx+b6kjKrEFS+
esg0muHAoOfWo79GIZBU5+ucFCBg/PKKl8H2ECRJDCvpSxFwXSjurTM/BLcH
gxxcpQnU5/4QqxcIgd4n9ZcxMgSUS2J2XftLwZCvne74cgLaTmVmvWMU7Pjd
aRe1isDE3bJn8d8oEGF5ZFeoEXCqFd78to2CzhyZyZ/qBFR3xK3vZ1Pg43A8
4OAGAoNJi+Vcv1DwpfPL8+HtBNyPFbJOMSmIZjqMy+wkYFtk78j3ioJrtHl7
dHcTYPUPyr56QcHSY7o19H0ExgcK483SKLApLxrRPkIgq0P20mkGBWPp6VtD
TxLY47LYiXqHAhfRL34MKwK/b17z9XajYPTKYHO0NQHN9VuF3W6SvHGje9o5
AiJDd7XDnEl+lV9c7EDg3SGh924XyP3LmheWXyag5eob3HSO1N0mbaquEmio
9KNr21Dwc/cuAZYLgXXyOdt0TlEwUlpyqN+dwPJ5Xt9/HKPAWbWHPnSHwMoZ
hXdMI1J/IDAw5kmg1/9CKPUoBcOHDwb99SFglXpT7fYRCq6mX+wUeEBgyiKg
9e4hMt8LAtbP9ycg29ng/OwAyTWf6xY/IvCaEb6tR5tcv3FQSeYxAZlhG3PF
faT+TPy6wlMC1ceGdBz2kmx2TGpNCBn/7SHrNbsoGGxrstwbQeBHj+uA/lYK
Lu+eTN8fReDmdru4iS0U/IiSmT0cQ+C76N4fWZtJtrGKNk0gcPaGpvLhjeT6
0rvDFkkE9FQi/qltIHWVmH3WKeT6ILfj0utJ7u3usX9O+uXTOiP5teT6wwKa
VzMJRDH1uZs1SD1N9cH1bALRMddaTqiT+oKDTbdfEKD5lyk9XEPB98sXV3u+
JDDjfYH5UY0Ch5qHt33zyXqGe0RIkjywIb3q4WsCdd1rih1Xk/qzz7JPCgmo
2YXKNawi9dEfjiFFBAq2fss4QLKDmfhb+lsCY9brHT+uJPX8DeLR7wgYjCQZ
mZHsIH3sTMJ7AtsmL5kOq1LQf9slJ7WMrNeDaCcayfZtIXOyPhAISroYZUBy
3658k5cVBL5e7GeL/69HNSUUVBF40nZI8qsKqf/9Pf72MwEJ0RR9Jsn2NjIH
y6oJNIloeCT8r7/fSausJWDK/c1g/K+rWPVV1xOYTdsUF/m/fv+uVmMjgf0X
ZwMy/td7owNb2AQiNO4crfpfP1TS3tlM4LYgmxj9X0/rXstpJeMR0DiyhjwP
T0TAs6+dwKMt8dcvk8w6uUFa5iuBRfnZsWUkl6afyjnSRSCNo/52DRl/zrT/
Efcesr/ULUuiSY7Wy+tJJwgsmfCKUybzFxTe5dHeS/olhzDPJ9l9QFRKtJ9A
x8cvbSfI/Nvv1Mra/Z2AXcJdJWGyPicCLxy6MkhALHe3yv/102171hU1TMDE
2qg5hKzvZvVit5qfpH8Xz2g6k/UX+7Q0Y8ME2Q+HtnwyI/0yLbP/gM0kgbwo
vRGrdWS8l5y+Bk+T502XiLpO+qt8fqXE6F8CC+nFF7+Qfsy1HE9TnsOFr9Gm
G+KkX2PTVuw3FeBi5WV7wpr0850jbq55wlxM+2hVq28j681IEufO52KjmbVm
8nYKLPrrU6REuYjYcbpjgxYFWwLU225KcLG0/+/nK7spWNF64nqKJBdrgtby
K5P9JL7GV7RlCRduI0dOECD9VNm+V0uGC1b6pa0h+ymIn/c4YUaJi6RUVhtd
n4Jgi8Lda1W5+CS9TPQt2e+eqVy21SoudiTelBom58HJw3vnFauT5ysNf3zH
jIJFD4cve2/hQrttqeJuawr+NssJvdjKRe+vT/I15Lz5sfpwTPd2LjiBHzKu
nKegsiK2Xmc3F4M1CTZsewpeSVc7XN/LxR8zyetRjhQkXpwSSNzHxWX+znGX
qxR4C5tsEzzABTEmV2Rwg5wf5p61Ww9xsf7IGb3UWxRYpaTb2x3hwl969LuE
BwXbDwlEVBzlgue1dfV8H3Ke+OX9CzhB7lf2+hgSTMFpIekqcXsuUqrdBwRy
KCBSo9W3OnAx/5V3jVQemW/9VUGnLnOhEbHw5JYCCm4GbzVKdebil5j52mcl
FDyRNWNru3Fh7np9eVM9BcXrn3XfCORC4ojMptsTZP7NF0y3ZXBxcLROOv9Q
CJKnKKfmZHNxqmqJsuLREKyNlH27+gUXahvMJykmIdjRvcb7Rj4Xay3tqmmn
Q3DM8bCQeDEXz4TC3JbcCIGP1wNJ7Vou/ModWr/Eh4BI+aee8pMLsaLsnHqh
UCyrFQlLHePCivCd5ImGQn9C6l/aLy4C59StEVwcilzdtY0ZU1ycy326zEwx
FN7dFh65c3pRtGaApbMjFPJyuZ/fLuqF4tFfOy0dQ2H2xPYya1MvrM1f6ks1
haLsRlXmHJdeTB4NOy2cFQbbwG9n1t/oRak+ddtIbhiEYn8tOnWzF2Jr72v0
vA6D3melm3nuvfhWLPig530Y6pTc91707UWOBbPQqikMHTXqtV9CyfWvmTqu
c6jwJPbdm6L2Yv+3HIVFwlQoTp/YsorRi1+hEn5MUSrOrfSleUX1gtr4XXL7
Mir6PNrPbE7uBV+VRt/XDVSMqwWN0F73wnUonrH6HBXUvfHx5YW9WPDTwvmt
PRXbzQrMfhb1Qn7tL+0LTlS4exEFeiW9cL/57uf3O1TwNe2+96eyF+b++Qc7
6VSI+g4uOt/Wi5Cxya+PWVRk0QXKn3b0wttbK9W2gwqjLJmbb772oneko/0Y
QQWl9UCbFKcXP5I1op3HqVi2MTq+8nsvloTwm1RI0aDaabhl/Z9eVH64+FT6
NA3Xb/UNbv3Xi4abe1Y1XaChdJFP6p45PFCPYkXGVRpsDuYvPyrIw+XcD6ox
3jREZMvNuyzGg6JufUlKEg2SPn0dact5sPvq88V1nIaz8j60F4o8pCvzUj78
pSHnlZxJoRIPyknOPhvn02H43bCiciUPNek/5SwU6Agwy3/BW8fDQELMpl9H
6OBb7eO3ci8PvxP0nBjJdBi9l9Net48HWYFaw7xcOqJP5c9o6vDwo+Ba1WAx
HbuD+5x1D/Lw5qrErbfNdNyaMjx13pCHtsHkuU0iDAx9ltsYZ81DYFToQzNP
BvbY5Q+k2vCw9G9106knDATxGSXlnONBQjOg+0E0A+pbfWRL7HgYlh+x1nnH
gF1039xvV3ko/nT5pDV/ODqd81vlvXgYb314at3TcJSfTreSvcdD3rr9R0Xi
wpGhF/NN2peHAPvuc/NfhsNdNYAr6c+D3za9NVebw7G0xernvKc89KQfc2pU
ioAx5s7/Fc3Dg+endKXfRqBUzHRHdTEPXcVuW5rFopA2fajoUwm5XpgvcaFq
FIJ5u/dWlvIwfcwpz3FnFKzfr9It+8jD66AA4snFKMzcmDYqrOFhy+JNNT5l
UdDsiLuY9JUHU1lnDQ2faCSnj1Dv/uVhYc8Fmr1YLGYejJxN5utD0aNdGkNy
sTA+O7K2lr8PnXIENUCd1KVHSlcI96FcQWAJ/2FSfzA8VLawDy+nvrhN+8Zi
6szQQRGlPryz3ExdyBcHA6kfE9T9fXBxOrGab3484ka+v393oA/NVZ/tjGTj
MfH5e1DfoT7E33/rnK9B6j7flXca9OGFniP/R0NSHx4w7DTrw67zuj+nwuIR
86k/WcWO1OWexrxUS8CoF+9EzsM+zDNnmCacScT4Nwf1vEDyfftXvPdyScRv
DP15HdQH55/Frc4PEjH7bzzxXXAfpj/0qT57ngghb/6xGnofrN661H6aTISc
9/Kng6l98NP1bV1NS4Kut2mFelUfGjJf9LzkJONgV1P4+s995NzcmrBpKhlH
9p28urm6D6PJM43l4ikw5DsrtbO+D8WWI9EaO1Ng4X31/JHWPiBIwH/mWQqu
eAf8u9jfB/n74wLpB1JB9X63PWl+P0IL5Bouv03DmVaV+dwF/bjdrSd0qyUN
apsftqmK90PxkWpf5FgamBzju4mS/ahoUWzepZ6Obwd7ShPk+jEveZNJBZ28
z4sJGsav68c3/cjd8h7PUcTQs4051g8q50z3lFkm7o9mbf1m2g+9o1MXAq9n
wlB/sbDiiX6cmvRO307JRNdse1r0yX5YByaE9dVmYq7NleGo8/2o691IJBpk
wXBVsHukaz8MPhzseaKfDWmvcf2OW/34eVzHYdgxG13NFsvl3fuxZp7hritB
2XAJUCIvZP24eORrW0l1Nmg/cgUj/PtRXzbkRajlwOaAdHNbQD85F9RtArVy
oB7tkSob1A+XzduFoZeDN0a6+uHB/fDh62WyHHPwIDVVvo3Sj3Zn2br8Ozkw
nCM2JBPWD5nk/W+THudA+uS1d5a0fuzJTvdLjM5BVy47mMEg442gb8zNzsF/
u67nYQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WX8b/ZD02Dz8D9FDRrg=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 0.7999999836734695}, {0, 0.35}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Fc", "(", "r", ")"}], 
       RowBox[{"Fn", "(", "r", ")"}], 
       RowBox[{"Fo", "(", "r", ")"}], 
       RowBox[{"Fne", "(", "r", ")"}], 
       RowBox[{"Fmg", "(", "r", ")"}], 
       RowBox[{"Fsi", "(", "r", ")"}], 
       RowBox[{"Fs", "(", "r", ")"}], 
       RowBox[{"Ffe", "(", "r", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.664797863617687*^9, 3.6647978696927834`*^9}, 
   3.664797902512615*^9, 3.664798016333744*^9, 3.66479857827269*^9, 
   3.664814421877924*^9, 3.664879861742765*^9, 3.664880019201501*^9, 
   3.6648904141566067`*^9, 3.664926131839246*^9, 3.664926194572709*^9, 
   3.664926252839951*^9, 3.664926335925074*^9, 3.664926612538953*^9, 
   3.664927355718211*^9, 3.664927780307734*^9, 3.6649280225645447`*^9, 
   3.664967635433172*^9, 3.665074640158939*^9, 3.665109372604081*^9, 
   3.66510974257559*^9, 3.665251093587205*^9, 3.665260836200844*^9, 
   3.67410363768716*^9, 3.674104121486816*^9, 3.688109788649832*^9, 
   3.688206659325791*^9, 3.688208004875841*^9, 3.688208047905755*^9, 
   3.688294396500807*^9, 3.688295284243712*^9, 3.68829554224588*^9, 
   3.688360640054719*^9, 3.688361192598073*^9, 3.688375330138672*^9, 
   3.688377098825601*^9, 3.688377183717598*^9, 3.688382780699581*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Export", " ", "logarithmic", " ", "derivatives", " ", "of", " ", 
    "opacity"}], ",", " ", 
   RowBox[{"plot", " ", "using", " ", "kziplotter"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6647980758631287`*^9, 3.6647980835205107`*^9}, {
  3.66480186329314*^9, 3.664801866323709*^9}, {3.6649115008350573`*^9, 
  3.664911508885806*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kzi", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/kzi.dat\>\"", 
     ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664798217324092*^9, 3.664798226774308*^9}, {
   3.664798306883643*^9, 3.6647983196980333`*^9}, 3.6649254546745157`*^9, 
   3.664925492513011*^9, 3.6649266247519712`*^9, {3.6649277925599403`*^9, 
   3.6649277942691174`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"kzi", ",", 
       RowBox[{"0.01", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fc", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fn", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fo", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fne", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fmg", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fsi", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fs", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Ffe", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fz", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}]}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "80"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664798335642558*^9, 3.664798337006959*^9}, {
  3.664798373946999*^9, 3.664798442371483*^9}, {3.664798499832267*^9, 
  3.664798564181862*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "kzi", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.664798584956871*^9, 3.6647985876620417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "IMPORT", " ", "LOGARITHMIC", " ", "DERIVATIVES", " ", "OF", " ", "SOUND", 
    " ", "SPEED", " ", "AND", " ", "INTERPOLATE", " ", "THEM"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Import", " ", "logarithmic", " ", "derivatives", " ", "of", " ", "sound", 
    " ", "speed", " ", "with", " ", "respect", " ", "to", " ", "individual", 
    " ", "elemental", " ", "abundances"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.664801241428515*^9, 3.6648012590493402`*^9}, {
  3.664801810121705*^9, 3.6648018159536667`*^9}, {3.664801872732892*^9, 
  3.664801876616593*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"uc", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/uc.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"un", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/un.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uo", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/uo.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"une", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/une.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"umg", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/umg.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"usi", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/usi.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"us", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/us.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ufe", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/ufe.dat\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.664801402769281*^9, 3.664801446498514*^9}, {
  3.664925454687887*^9, 3.6649254546949472`*^9}, {3.664925492523816*^9, 
  3.664925492530645*^9}, {3.66492666029424*^9, 3.664926724283683*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Interpolate", " ", "data", " ", "points", " ", "for", " ", "logarithmic", 
   " ", "derivatives", " ", "of", " ", "sound", " ", "speed"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664801638121879*^9, 3.664801645180582*^9}, {
  3.664801880483124*^9, 3.66480188462534*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fuc", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"uc", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"un", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fuo", "=", 
   RowBox[{"Interpolation", "[", "uo", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fune", "=", 
   RowBox[{"Interpolation", "[", "une", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fumg", "=", 
   RowBox[{"Interpolation", "[", "umg", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fusi", "=", 
   RowBox[{"Interpolation", "[", "usi", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fus", "=", 
   RowBox[{"Interpolation", "[", "us", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fufe", "=", 
   RowBox[{"Interpolation", "[", "ufe", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6648016602449617`*^9, 3.6648017285540943`*^9}, {
  3.664802303534006*^9, 3.6648023076509657`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Plot", " ", "logarithmic", " ", "derivatives", " ", "of", " ", "sound", 
    " ", "speed"}], ",", " ", 
   RowBox[{"reproduce", " ", 
    RowBox[{"Fig", ".", " ", "4"}], " ", "in", " ", "1312.3885"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664802057870165*^9, 3.6648020715998507`*^9}, {
  3.664802104199338*^9, 3.664802117448118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Fuc", "[", "r", "]"}], ",", 
      RowBox[{"Fun", "[", "r", "]"}], ",", 
      RowBox[{"Fuo", "[", "r", "]"}], ",", 
      RowBox[{"Fune", "[", "r", "]"}], ",", 
      RowBox[{"Fumg", "[", "r", "]"}], ",", 
      RowBox[{"Fusi", "[", "r", "]"}], ",", 
      RowBox[{"Fus", "[", "r", "]"}], ",", 
      RowBox[{"Fufe", "[", "r", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01"}], ",", "0.015"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6648021264857197`*^9, 3.664802131934464*^9}, {
  3.66480219381894*^9, 3.664802220052104*^9}, {3.664802257324535*^9, 
  3.664802286925428*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Jjv6H+Keut0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
TbKTnen1IS9f9qG5sVfngREH+T8eNn5v
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
JPIh+lJSGshc5UhSZuYSpDL88/0+ooH8D0EePEs=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
OIrGCvvik5NpsHK19tQH0aPofxacJ7o=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WVzlXHowXt6T8vgxAy4YUOwStuvD/wBYFWOx
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3k8lN8XlrJVKhLGFqWNqGRJ4pEskT1ZxhotWkgosswgaeFbUkmRJCSV
JGvhtZSlhRalhJgxM+/Ykzai3/v7Z+bzfM655z7nPOee914V3yOOewUFBAQ2
Uj///88eqAx9fdrB6LRD5KnwSj8iYYVkabHUejQP7eq9UeZHSG4Jy70gZQz/
hqxu4rEf4dp0V5EhZY/Sw11v/zzwI6bmN7gdk/LBhxJjFfNsP+L1w7ZfQVJB
kDPf62V6zo/QnfWxMVAqBuwG7/2/XPyIgTVuhQFSyZjhqHptGvQlAo632/xX
l4Wzg5ov6ti7CW/xC++EOPn4IKKb7dflQzwQtGK1HSmCia3RbO9Kb2JBzCnn
pbFFoFuKX58o8iYCp2tfBKYUYTwx3/i/fG9C87feY/HSIiwvFBxsuupNFA2v
iN8xWQS79qgJv+PeRPGnWSub4h+hcYlpl7G2N1FWWHmg5loxvnb9md9T7EVI
r/3RLX6vGAvGK58PFngRx++ud/SsKsack1v+Tmd7EXo5dzb/7SlGc4/FovWX
vIiKa1fmbVZ9jPDBQqlXIV7E0/ijD0oLH+NQ04nkYR0vopa+5tv9hhJY/+ne
vbLGk0icjrnb/r4Ewqv9o5zLPQnnrE+7/7JLoLsypCaxyJMY5px+t2NOKUIa
NvcI3fYk5I5yHw+YlqKY1Zmsf8aTCD19+/jqxlI8r3nUn7fTk4DalKb9x1Io
tr15p2HjScx97cgL45biTbhG9BNzT+KWpKBrk3AZ6l60qnP0PYnWGz76+yzK
oPpiaiJG2ZO4Zlzx7T+XMuQLO7boynkSe9gLC0r3lyFiq2nO+GJPYmo1ISd0
pgwx/eqXokQ8icaX0u/XppVhnFNRaTXLk0gJDEx0yi+DmqzE/KVTHoSnROO2
qIoyNFvEXPoz4UGsLlH8e7u5DMc+hIqoj3kQ352Plbz8VIZw1b39fYMeRM2f
V4e/k2VAAmdfFs+D2IWobhOxchhYnlHS/upBxL3orOmzLIcgxnNLWj2Irt6r
sUtflkMtwiBu/kMPIllcUiT9dQWUiomOglAP4tXyun8KXyuw5HRr+UiQByGy
Oeh35lgFnvbTrfQDPAjGvlZ+9uJKVJ0d02Pt9SAOE+deFbhVwjFfY36siwdh
eXR2yhNOJbJzex36DDwIwQ8TCp3TTxC0sJSWLepBHMvo0KJpVqNeKqTj3QN3
Ithid6AlqtGlLbpd+547ETQ+cPeEfTVSlgYeuprvThzePqPcGVwNm08jTN/b
7oTvhOrC9PJqhB250i52zZ2wtw4eVNhaA9Xfs98nxbsTan/n5yg7EXC78Mq1
z92dWH0n9av9XgKcx8WjTm7uxApHZfnY4wSma6LZTc7uhHL+xpS+NAI75gtd
vefgTsg40WOyuwl8ki9Y5m/hTgh+3KmZsrEWeNcZnKvlToxq3JorVV2L0oot
6oUi7oSqdKiV7PNaBLyx4MsKuROuM+bnFF7XIl8fkrGC7kRt65DYiu5a7P1i
6W85TSdSjmwS052uxXIXzaiKcTrR6DLPcrNQHZb+nCLnj9GJSfScMRKvAy3D
z8JrmE74LYoXtVCsQ32HS8YvHp3QftQm4mpYh8Vi2jOC3XTC/1q2hYdZHVZ8
2WBn2EknMmKPnfaxqcPDA2GyoR10QshRXuSAZx14qes7Pr6lE5s3j5gH7K3D
92y7QsE2OhG4rC7haEAdtM3F69Re0YnsuZcbjx2rg6seBOxa6MTH8X3CEdF1
kGzjuJo10om5X/TNGafqMDB3uvp5HZ0wapifEPdfHXrck4VNqunEnUvFQok3
6rBZQtxMs4ROhGvPzMmorkNramLih1t04r7CW9Os53WI3V6krHODTvTOyYnP
eV2HtHKpm8lpdMLyg+WcB911kMtm0A0u0Am541dm10zXwf/Y7F7vKDpRXb5W
sNewHsbRek2cXXRC0MD93/Kaeqg5RkkMCNGJkS437w+N9RjwnL/OTYBOfGG4
Eglt9bg09DetYdKNKKnfxeT31mPM8f6uc6NuxD4r+3+FsxsweWo68esnN+KF
m9k/fcsGXEjd+ORugRtxMXzdP7v2BtwbNEpssHIjlMtm/4sceAaBUudg42hX
IqNnfVzXt0Yk/DkkMPnamXC/WeQjNNqMPC+6bcGgE6HaqmR1XOYl7CcrPg1l
OxI7CiTKR+VeYyf90Hq+rT0RPTGu+ciyDf7iZs8S7XYQJw4tjlUsf4Prarku
Ws/NCN/HR+5zy97ie1tdsIG+MWGvta1756t3iJvZsLIsZiMxLPLZzqztPdIc
tx6f1aZAXJDiNnXy2tF8wW1by7ASdgZkBDhNfYBJU0fmUNImNCos2eX49yPk
8++UNHmZwWi2kMmE5CekRp5dpbjXHnuNy4PkZD4jwKi8duMZZzxokXytKt2J
KzbvO7t2eGLqLEfzvdoXWI75lbR3+eJ3VsQ7IY0uLPa+kU2L3Y/JkYTILtNu
uNjV1Wf5BUDx7BbHqy49yHX67VhrexRjJ0oOfnT5iiP6B6zO5YWg/43Dsy7d
Xpx3uOT6L/04+jZKXGJv6kWmrD93NO84elLf7B7Y3Iu+Tftudj06jk8edv9+
GfVCb9RWraDpOF6R1psXW/TiihynSfL7cZQKbC+ydOlF652nJrMtw5Cw3iij
LKwXU8fuJjcOheHkpemD1Sd68d91j3+ffoQh5meV/rNIan3b+hD2TBgiqgw6
3jJ7kR4Xmdu7KByB2/Ulh0/34s6jne+jtcPh4qN9ZnlaL155dFnaR4RjdbJa
aHJFL56tq7CvFjiBajOzef896YX05bVfG0RPwHHKO/tsVS9COdlnny06geh9
V97E1fai58PegyXKJ/Bui4DGseZedF7/3WdnTNn5Hzhun3rRrDLaE8ug7Cax
Lst/9yLm1Lzqjb8o+4+OzWV6fVhW6nG0qysCTj+N5xTW9cGQrxCewYuC0NKB
waKGPmzSsh3ZOBqFMotL7x8/74Nt84H25z+jIHONk13Z0ocYqZbUT0LR6DQ4
t/X52z5wKkVjy5dHwyf2PaOrrw/lN5MdLbyicXj+vj9zBVkoXshVkWyNhqLO
wj7xOSzkBruuf9UejVbPiuZFwixYkjN90V+ise7h3DTpuSzYmTp8aCKjMe7w
UHeZJAvm1kNnvgsyEH71d4j+Mha6BQUSU3UYWFN7y32LKgtlOqI2tQYMdJJW
27CSBTEv/o7erQwYbL4haabGwsumm3mCtgzMdG19ZK/FwoOkao/WvQycXJY4
st+EBb5JnVbgJQay9aGUaspC0FzSY/81Bmrtv9s8M2chy6t+386b1HqG+wPl
HSzk3z5yZ/Y9BiK+qB/+vJOFF/I9R9gEA0GXX/Gt9rLgoN18PZHDwIV7MbQT
+1loPSqjNmeAgcJ6bcs7B1jYPicVR0YYGBzLyJ8dSOW/5sOYwi8G9tkE7K86
zoJcpIX0RxEmPIQXcDTOsBAY4VFVtZKJSMV6KY9zLOiurjT0UGPiuvZx03NJ
LNiuWyI1osFEh2/PbW4yCyetmI9JbSYciULfm9dYuFolsl/fhImjH31TXqez
ELxlx+ZDZkwkD0vXT91goUnmp+WF7Uy8lmequGazMN6nI1loy8T2cLveRfdY
6HlpOWZGZ2L/hdmL8IAFmXUl9mKeTCTklSPgIeU/Otxe481EQ/vSmy2PWchJ
PLlFYC8TRhvGPOOqWDivtVyrK5AJz+05/xXVsBBwboK+/igTUd6u1T21VDyT
6fPHQ5io/K9WweA5C/1v/ed/DmNCeyD5y/fXLIxFXBb+yWRCIKF58XQbC4cc
Ui4+iWXilYqAtfA7FgpzJLqCTzKxx+1IlexHFkyKL+bWJDCx/kfehMonFob6
k5c6nmHib3LPWvVOFhadWmD3+SwTV5ptbhj2sBA1E/usPokJ3z2nPpj3siBv
f1xoxXkmNAWqxe1ZLPD+cb5FXGCiUW8tw5dL9dtB7YZZKUykvPcrO0SyIJkp
cVvrEhNeR9JHQgdYsFber+pymYmfeXO9T4+wIC4YPisylYl6E5OryWMsDH/e
4BpxlYnzPSfaro2z4PHNxzwgjQl6xCOR2xMsnImPb9l5jYmV0nzc/8lCRpv8
V43rTIw/Ug4v/c1C44K8+CkK19i4FtVMsqDFyC6vSmfC5VST8tsZFmJ6Rp7S
bjChqvLPtVOAjSoLwzOlFB6r0r3IFmRj4O1kh2kmE1WugS1Dc9jYVJmX30Th
MxO5s34Ks/Fev/aX4U0mnJK79f+JssG90Fh/h8LKa5cEi85j4+avTSJCWUwM
NVkXSIizsfpBav0uClf4xbPkFrJRNOQ1fo3C8f+eyqlKsOE7vujyWwrbp393
1FjMxqFJ9dy/FFbQU0/UXcLGb+N1y+VvMUG+822ADBvagtfnaVC4JPD61HYa
G9YRg+5aFI6Z+26jozwbhznZEuoUts4TO+yuyEY9E2oyFKaZbM3Zs5SN8FPG
t39S8bnd4V0BKmxUa62IaKFw8YkiqbDlbExHyl+PoDBjCWkds4INgYMLRUQo
bPVo6amzq9hI99D7nkDlK23jUp2yho3TNjZ+k1R9WOT5H+nqbDB153nspnCE
8szewnVshHXsmxSj6mtepZNZvoGqb1z43R0ZTEi6Bnys3ciGvbjcRAylz70L
Xebv9dj4nDsR2EjpG64uxezSZ+PInVv5Hyn9TZt2lHMM2OgJbEzupPqja+bJ
qt9gQ1PXm1l9hYn86+Pes0zYiFtjcSGD6q9QXbW0uaZsXGk573OE6r/5gddE
Fbezwf6pSh9LZsKwO4y/1Z4NP+dnGj6JTGS/nDtg7MiG8baaaA7V/8JPbgzA
iY2lr8Q0vKnz0ZraMGjoyobHyX1P151iwsd+4Yi+D7W/ydBicwYTz4yyRzb5
shHasvpLYBQTazR0RvX2sPHwguuKpAiqP8Xcx3T82Thb4OuUc5zSvyFvfEMQ
G/LtH6/toM4/+Uj/+/pgSh9xvx+yh5mwyXr1fV0oG7Wr4391HqDqHT0+oRFO
5fNx1yxDan7c0TX6tSaGjfyWoTsn3Jl4cffDlEoyG3a9qSs/U/NLM83/r3IK
G+Qz/qzv1Hy7lDD1d+llNtzeSr2cZUzNTz+VGcU0NrZtfLZpRp+JYYUAAbks
Ns5/MJwJpublouQ5QpJFbPTus5Kxl6TqybgqJFFM5bcrjftkAROfD6sJLyph
4+WjWYNy86j6WdqLLKhgw/zUr5wns6n5NDtDbG4txd9hBf3EBAMuxzcuEHzD
RuFOvYe/3jOgtvOt89p3bEjcy97u3sbA33VHbjq3s3FqwfWTxS8YyOIXrL/3
iY2+DP6EQR0DAx7Ldjr1sbFk+pSX0wMGGNsk0vLGKb2ebFovHsdA7qJRlR1L
+uHL+fs7Zxn1PRxOOnhMph9y1ebxtgoMWL1Qe3yT1o+pD9Wqw0sYGDm5z3RC
sR/rN3j0i4kxsOlX974bK/sR7xIq2zASjVfdr+6N6vXjVQmpalIRje8FBTqX
6f3YoH95V9+2aATPf5VwzaMf1rtudr3eQn2PA4Y7Mr360Th7X1qxDoXXr4+4
69uPAgajb88qCpeV1tQc7EfbU3OVwLnRGKuvteBH9EPnzbkUpbYoDHd+dDNK
70ee+RVph51R4M2dzSC/9KNX5RE9yykS7fR1MrSeftiey9CvtI5EfYF7kWUv
xeemd36zaSQyrUpYBf39oBkQwS+0I+F8bq9FwHA/0rRX+DtJReKZWPOi8Zl+
xPy6BJe3EcgW/e/2lAoHAsIG3xq2RiDZtXLLWlUOwvNFmfabIsDI53zwWMnB
ds+tp19rRoC+3Ui0Ro2DwoPmpmnyEZA4M3o4ZiMHZeK9iocmTiBGxFFXyIyD
VkO3yi/ZJ+ApLNOywJ8D+oVbfZe+haM/P1NN5yAHskO6MaLccBzcsTLJ/TAH
SYzD1v6d4TierGOXH0TFd2CUkvXhOC/n9GHrCQ7K59+p5aWEQ6r6i65/JAcT
wfn1RQnhuO7tl3Y+moOVaz7G+lH3RWXBwT8lTA4uF6u8+RcQjrycYPcvsRyc
SYlintodjrUWk1Wz4jmwsv60e8IpHMX8WKXVCRws81tpab09HJuSxGJsz3Cg
e6SjsV4vHDWaF/tCz3Hw9+CsOpdl4TB9K7stPYmDw2ltauvEw/EiJCun7jwH
43VP7lv8DsPHiof7F1zioE/r5XXdtjCMmrQO30nn4MnDuf9xmWFQdpk32Xmf
g/0bSjf6Dh5H/51/ane+UfwErDf1j4RCtm3ulfzvHEQrjiwU7gvFjp9L/t39
wYEIrfzS6vehKDZd+/7+Hw5efd1peqg8FDF9rpHFs7h4LNve0swMRYnoHs7j
2VwkpTbHvT0aCt66I3alQlzIuy/a8M4vFLaMU8srxLhwGlonWW4RCgX54pfV
Elw8S3+xb2xBKOxNqnWIxVxceRpqdV0gFCcPNN+sXcLF1nOZhzeOh2CgvCek
gcYFzV9EYt2HECh95Xc/k+fC7uLFvRcaQ+Ag/MOiUZGLozc23OgsD0G8hkBx
01IuImnitxbeDUGF0zyFFhUuGE6hiTo3QzAUKZ3wYjkXHRszZelpIVh6W2Xs
5Qou6h1VN/OSQ+D4Yi399Sou1n/Yf77nTAgSvuk9a13DxaKvLY+3xoTgiew2
zTfqXNAv39suGRaCYdimvdXgQpgWOOgQEAKn83sOt2+g+CvLtau6huBM6ZGP
HzZyUT7w3PmpdQiedkUYd+hw4S3V4dNkHIJl6helOvW5mJEqjDdfFQJnxwzG
FwMuujbqfqmiheDsiTtklyEXVVvztR7OC8FYU3XV161c6D1p9VwwEgzV0eaV
fdu4qDhsFsjoCYaLdHsyy4yL+Zlqf4Jag1GzZ2APx5KLL/Of/2LfD0bSLBnx
QQcuOsU6BzT3BFNzflnY0E4unG/tUem1D8Z3O42+4V1cmHfse65sGAx65rbS
MTculhU6tzlLBWO1QZDnz91c3P550rCh+igaQlsezAr+vz5SsqIzQdhz7qu3
ZigXhaYjW81ZQRDO+iHhfpwL/bwHD5Qag2D1UuV4SQTlf4aXmJcUhDcqEUb7
T3JxrPSimvWSIHS1qrW9uszFOwcl5wiNQEysThq7Wk71yyInafu3B5BqlJ39
rJKLi3Y5HPczB6DnVOH07SmV/2V/S2UcQASzv8KqlgspB1979j1/CHzcEjvd
zMWmI4UDz+P2Y/7JYQm/Ti7EwjZUTKruhWq37UbNaSrfAEHvkSM+CAkjh3X+
cWHy/MK421of1EvE5RvO4iGyLbIj6J03fMxLFW2EeLhln7D/ZbMX0h/Kix4W
54GsJPRs6z0wYFlaH7KQh/T0hqeZ2zywqd82OlKChwUnl2dubHTHR9m48XNL
eDC6Ht/k1kaHZBzZdVeRh3PH8h+yxl2xWyHu6qOlPNDED6y5xXRFUZm8Y6UK
D4VyWZcFF7jCdtC2qXkFD5pvZs50r3PBWafSRzwNHhia7kNGZ3dBYFVcwgoj
HtqEQktEbjjCrk5+q4YxD1FXVvczLR2R6V46pW3Cg17UGXXX3w7YkkwGmZrz
oHC6w8rV0wFhf2zd/Wx5aFats36y2h6Nl8glh+x5SMvz2uJSZAcpzbg3wY48
sNwS8FHCDsW+pWZxzjzMDf3qXdRlg5GX8utvefGoe3/rJ6GUHTDcVzqQ78OD
s7m87V+hHUgSsMst8uWBOywofSPKCmo6cXK1+3hYu/RFav9RS+zLJOd8DeQh
c8BmbVWUBUo3xRHcIB6eJiUI6wpbYM57+YiRYB7kbO+u8E8xR7aI3ej0cR5+
97ar/y02Q3dQ6WcFJg93VnWuklpiimeeBR5ysTwcX31U3adsG+5b3fwqc5IH
WbGIcmf6NkSonuVInubhzOy2ScsCE+yWYPgvOstDEl9iytLZBNtnggfFE3nw
2F6yZGqOCaQ/eXwTvUDxFRNaG3ZwK6afOYQKX+QhWa8gyExlK/ofmf+afYmH
xLCM3S87jfE4cf30TCoPY892dc5xNsb18BUxf9N46MtcfO+pjDHi9srNnrxO
6WkuG7q7ArDHHLEfmTx4ndaxrOg0gt7aP4njWTwUudqlqIcaQYk2smAsm+JT
VBm5erERhITZF4dzeGikH7ItLjfE0HiH1GAeD06q7jtf7TbE+6+vrpL5PBz+
zHx/QsIQT17VyXELeAg2fyNT07gF2ZVlN9j3eSjQ23YgI3YLzubdU+4r5KHu
RNsiWZMtCLqUdbuniIefnw65aItugWvMlZVdxVQ/qCxMmHhvAOrhePdzCQ9Q
LuK45xpgJZ25tqOMB51bZkRAlAHELUIftlfw0BvU6K7hZoCJjQe03j3hIcd9
zZxMAwN8UfYqbaviga+xd1bDcgPUi+/c9LqGh8UlQRk3JQxwd9Li6YtaHk4/
MVHSEzJAMm+LUXM9Dzs/uc5bVr8ZYe0b6p4/o/rVccNTwm4zvOpWmjY08uB+
pSV3skcfZoXyTbXNFH++gvCbI/pYm77IquYFD2evr5QxFNTHVOikXWUrD4v0
rPTeq28Ca/fou7I3PEiU06t+1uvhhW3/rpJ3lP+TBT157npIW93q/vAjdV5D
bdm3LupCu+vW/tweHqRb8v1LF+pAviV1ILuXh01RDuZjxdoQLEsMyGLxsF8w
PO2WizbeXDgWks6l5sND9QSP3I0I2GbJvDhC7Xf77iTHQQt5BWOp0TPU+TKo
ayr9vA5Tp8Z25wmQ8Ap+c4xhvA72u8fWtgmS1Huzvs2uQBNTMmP1yiIkGPP2
GIwlaMD+1OhIw0IScdLbe3b7qSPXZ7RySIKERPTCT3f71DBpMBq/RIqEXSDJ
qfNVQ874iNx+WRJbTnK/mQWswR/vEfO5KiRswirKO7JXwdZgRGLjchKC2o+M
OnVXIUd6pMt9BYnJmwNbQ1+vhO3r4eAHa0jMpukddRRciezNw5n2WiQyzn/x
/nZWFb+WDB84oU0iqYlRyt+gCutvQ9rZuiQetV8cNe5ajl93hl5830yifVrp
+ajeclgvGfqZuo3ESFIE68zcZbg1NlhHmJHQ9N+6vfiZCn6+HEwiLUjs3XJn
clasCm7FDS7bbE3i7+79f379U8ZPz8FhX1sS96JeL02uV4a1/mBFoj2JtGUD
5lqnKfvogG23EwnJ2147wqWVsePlAE3YhcTB/+KFFOqXIitvoF/TjcSKRWT3
MvelsPIciIjxJPF4qHjjuTQl3HzBz1u+j0TQ7GzrjVDERC7/qLU/idurrvQ9
+KYAq1j+lmMHSTx4E1eUckcBE3r8d42BJIo/Ru3xVVSA5WL+jdEgEsPPs6bX
d8sjc4T0lw0h0ec1smlDljy255IzB8JIVBXrzPy3Th43YsiWlBMkhAQstrRO
yWHcnbz8NJLEC/lH8SIv5bBdj/Tujyaxpo35SP2GHG5IkmriMSSi2DUZa4Mp
/2HeD504El9VIpT/WlL+Lbxar3iK/85q6SRVys7kORedIaFfOrehpI+Gia8H
1UrOUfXeGSsh3UjDL4xMlydR+hxh2ty/T6N0P/r26XkSGtXrfh+6QsPffxM5
RDIJreGqFMsYGma8w8MbUih+jxwy9QNomFU7taPpMrV/lWzGeg8a5igzl75M
JRFQu0V8uQ0NwjGC31vTSBwKJIOFjGkQ7T3V+O46iefh5ravtGmYZyx2/WMG
iX0XY5UPq9OwICspoDOThMXBZwc/L6dhkcCirT1ZJDxL9QtFlWhY7HNJipVN
4rLq/MMjNBqka6VJTg5V3wP7VjBlaJBVvv6Un0dCWy/E/aE0DfIxiheG80nE
GnleCKHsSr1Zvt8KSFRssDOppdYrG6vq/rhP4lV9yI+zijQsz7oj9qeQROHt
H2ueL6NhpYB6998iEo4J/3z2raFhtU9hkcBjErkKVfK+G2hQr90QP6eURJas
85f7m2nQVC51ES0nsWHtb2UDMxrWx2xSn19JwlTsdcAsBxq0ep/OLHxK4s3u
fyYTnjToGOPd4moSrbxKFdHDNGwWMD8hX0fhbcECexNp2OLTYr20gTpP0c8F
r2bQgFpr5eXPSby9v2NxVSENpjE7m9RaSPgXp/s9+kCDee/H65ovSdQPPck9
OECDpTE9UOs1CZX+8knyHw22AruXbH5LIvHtjz5hDTlq3gf6WX4m8VBRo/HU
eTkExJz9t59PgqfJGYjZI4+g3vnvDw2S2JXN5q6KkUewcXLekWGK37eDol3p
8ggXuGoT9o3E0FBNreF7ecTF5KQn/CHxrGXVqlxjBcT3rjpyboqEx2XZoBB3
BZw2vmdyfppEwQseb/yYAnVfKOZfmcXHj62v/DvuKiA1htDLFePj11vXNxPz
FOH9ebkYZx4f+5NEVz9coYjVWmc6VRfwoZueO+eSkSKesO2jcyT5sL8+z/lq
gCJObim17Zfi43VUQtvVk4qwvkJTVpXhQyzNsSM2TRFfzVn1t+X5WONpkv6u
RhH5N80vsxWpeH9kPGhvFBH8u2DvcmU+DhZnl4j1KsLAYaGe3zI+3sYa3Lk0
oog5BSGit1X5OONjoHtnShGvBT99Zq3ko8Biyk9bRAmp7lvuLVvDh936di11
CSV4l2RF+arzcX7x0txImhJWiwvZZmvwwRzQrl6irIRvew8sZa3jw7AwMJqv
qoQnNa/HVLT46HFZQXJXKSFeRqt+tzYfEb2P/k2vVoJNUOqlW7p8qG8NaFSi
sHTL5J6+TXyIhhQZ6a9Qot713roqBnysPNJ+0JCKfzeiQWS3IR85mlo28tT+
we9Xfc4CH2kFy8j6hUowWJtU0LuVD1rXjKHqHCXMOTUWqWzKh3HVUod1P6n8
up1sfMz5WGXas7ydo4hU3UqlrO189B++VCH4ntLnguLYVys+ktelSdyrpvQh
Y+uW2vCx7ZTZhupcRYwbc1O87fiYu3+CtiZREU+vWe256cDHktbp1z2UXvHj
hTpfd/Jx5PETu1YbRdjuWCyy1JmP5Yvib/HUFCGTE/bJy5WPfd3Fz+WEFNH7
98vdTDoVXyqrxqVLAXd3GUf2ePDx7kHO+fNFCgguzLFW8uZD7TZt08NYBczx
CRi94cdH+qkK5UA5BbyueFvbvZfiv+fynqE+eaRK6KYo+vPhGm+aKJUnjzUN
M9o3DvMh5H/q3DJVeYzL+wl3B/KRpNS8n+yWQ1VoU4fCUT6i/5hskL0sB9uV
yREZx/jIn2WWcuwHDTLMiR1dYXyMKzM0T2bR0NvhqqgQQfWb5c7aJxY0BJ9V
qU1n8NGQptO6/5wsDFinLn6J4cO5eMK2eoUs5hgM+Mqf5EO/8nHr3yoZXB0q
Fko/zYdcyJX2Pz3S8DGT6eg8S/WD7EHvqwekoZYZmS+XxIfThezxntElqLIz
3XE9mcrvY7bB2lEpnMrPV+hM4ePqNYWfEv5SsJ0lPkK7woe7pFf97q7FkKEf
Jdyu8mG1uTZ7nvVi9BZ/SL52jYo/N+PavzJJ/A/CthkR
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 0.7999999836734695}, {-0.01, 0.015}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Fuc", "(", "r", ")"}], 
       RowBox[{"Fun", "(", "r", ")"}], 
       RowBox[{"Fuo", "(", "r", ")"}], 
       RowBox[{"Fune", "(", "r", ")"}], 
       RowBox[{"Fumg", "(", "r", ")"}], 
       RowBox[{"Fusi", "(", "r", ")"}], 
       RowBox[{"Fus", "(", "r", ")"}], 
       RowBox[{"Fufe", "(", "r", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.664802269907671*^9, 3.66480231048991*^9}, 
   3.6648144222788477`*^9, 3.664879862131118*^9, 3.664880019596094*^9, 
   3.664890414713584*^9, 3.6649261327174664`*^9, 3.66492625429539*^9, 
   3.664926733201288*^9, 3.664927356100315*^9, 3.664927781507413*^9, 
   3.664928022940816*^9, 3.6649676358389874`*^9, 3.6650746405202436`*^9, 
   3.665109373816547*^9, 3.6651097428827963`*^9, 3.665251094736684*^9, 
   3.6652608372011757`*^9, 3.674103638075035*^9, 3.674104121870264*^9, 
   3.6881097897744102`*^9, 3.688206660412154*^9, 3.688208005322925*^9, 
   3.688208048341434*^9, 3.6882943968683977`*^9, 3.688295284624167*^9, 
   3.688295542622199*^9, 3.688360641194572*^9, 3.688361304758298*^9, 
   3.688375330592216*^9, 3.688377099197165*^9, 3.688377184140318*^9, 
   3.68838278169551*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Export", " ", "logarithmic", " ", "derivatives", " ", "of", " ", "sound", 
    " ", "speed"}], ",", " ", 
   RowBox[{"plot", " ", "using", " ", "uziplotter"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6648024176103983`*^9, 3.664802433190135*^9}, {
  3.664911518805966*^9, 3.664911525811824*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uzi", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/uzi.dat\>\"", 
     ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6648027769162617`*^9, 3.664802781413425*^9}, 
   3.6649254547287607`*^9, 3.6649254925467157`*^9, 3.664926751567749*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"uzi", ",", 
       RowBox[{"0.01", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"Fuc", "[", 
           RowBox[{"0.01", "*", "i"}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"Fun", "[", 
           RowBox[{"0.01", "*", "i"}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fuo", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fune", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fumg", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fusi", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"Fus", "[", 
           RowBox[{"0.01", "*", "i"}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Fufe", "[", 
          RowBox[{"0.01", "*", "i"}], "]"}], ",", "2"}], "]"}]}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "80"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664802795261488*^9, 3.664802834288653*^9}, {
  3.664802922282106*^9, 3.6648029314249983`*^9}, {3.664802976421198*^9, 
  3.6648030193667593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "uzi", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.664802838883795*^9, 3.664802843776157*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"OLD", " ", "AND", " ", "NEW", " ", "ABUNDANCES"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Save", " ", "old", " ", "and", " ", "new", " ", "abundances"}], 
    ",", " ", 
    RowBox[{"their", " ", "errors"}], ",", " ", 
    RowBox[{
    "evaluate", " ", "fraction", " ", "change", " ", "and", " ", "errors"}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6648075354381943`*^9, 3.6648075919156237`*^9}, {
  3.664808162521529*^9, 3.6648081661025267`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Save", " ", "old", " ", "abundances"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664809534561458*^9, 3.6648095378900948`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ecold", "=", "8.43"}], ";", " ", 
  RowBox[{"decold", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enold", "=", "7.83"}], ";", " ", 
  RowBox[{"denold", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eoold", "=", "8.69"}], ";", " ", 
  RowBox[{"deoold", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eneold", "=", "7.93"}], ";", " ", 
  RowBox[{"deneold", "=", "0.10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emgold", "=", "7.60"}], ";", 
  RowBox[{"demgold", "=", "0.04"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esiold", "=", "7.51"}], ";", " ", 
  RowBox[{"desiold", "=", "0.03"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esold", "=", "7.12"}], ";", " ", 
  RowBox[{"desold", "=", "0.03"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"efeold", "=", "7.50"}], ";", " ", 
  RowBox[{"defeold", "=", "0.04"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6648081080922537`*^9, 3.664808176776597*^9}, {
  3.664808415998371*^9, 3.664808493050631*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Save", " ", "new", " ", "abundances"}], "*)"}]], "Input",
 CellChangeTimes->{{3.66480954260264*^9, 3.6648095456292677`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ecnew", "=", "8.65"}], ";", " ", 
  RowBox[{"decnew", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ennew", "=", "7.97"}], ";", " ", 
  RowBox[{"dennew", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eonew", "=", "8.82"}], ";", " ", 
  RowBox[{"deonew", "=", "0.11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enenew", "=", "7.79"}], ";", " ", 
  RowBox[{"denenew", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emgnew", "=", "7.85"}], ";", " ", 
  RowBox[{"demgnew", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esinew", "=", "7.82"}], ";", " ", 
  RowBox[{"desinew", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esnew", "=", "7.56"}], ";", " ", 
  RowBox[{"desnew", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"efenew", "=", "7.73"}], ";", " ", 
  RowBox[{"defenew", "=", "0.08"}], ";"}]}], "Input",
 CellChangeTimes->{{3.66480818167528*^9, 3.6648082575316153`*^9}, {
  3.6648084987245607`*^9, 3.664808535882085*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Evaluate", " ", "fractional", " ", "differences", " ", "between", " ", 
   "abundances", " ", "sets"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664809560757741*^9, 3.6648095711046124`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dzc", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"ecnew", "-", "ecold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzn", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"ennew", "-", "enold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzo", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"eonew", "-", "eoold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzne", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"enenew", "-", "eneold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzmg", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"emgnew", "-", "emgold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzsi", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"esinew", "-", "esiold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzs", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"esnew", "-", "esold"}], ")"}]}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzfe", "=", 
   RowBox[{
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"efenew", "-", "efeold"}], ")"}]}], "-", "1"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6648087355046997`*^9, 3.664808834417821*^9}, {
  3.6648095513364887`*^9, 3.6648095533409967`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Evaluate", " ", "or", " ", "save", " ", "errors", " ", "on", " ", 
   "fractional", " ", "differences"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664809574439592*^9, 3.664809582453497*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ddzc", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"decold", "^", "2"}], "+", 
       RowBox[{"decnew", "^", "2"}]}], "]"}], "*", "dzc"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzn", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"denold", "^", "2"}], "+", 
       RowBox[{"dennew", "^", "2"}]}], "]"}], "*", "dzn"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzo", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"deoold", "^", "2"}], "+", 
       RowBox[{"deonew", "^", "2"}]}], "]"}], "*", "dzo"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzne", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"deneold", "^", "2"}], "+", 
       RowBox[{"denenew", "^", "2"}]}], "]"}], "*", "dzne"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzmg", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"demgold", "^", "2"}], "+", 
       RowBox[{"demgnew", "^", "2"}]}], "]"}], "*", "dzmg"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzsi", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"desiold", "^", "2"}], "+", 
       RowBox[{"desinew", "^", "2"}]}], "]"}], "*", "dzsi"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzs", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"desold", "^", "2"}], "+", 
       RowBox[{"desinew", "^", "2"}]}], "]"}], "*", "dzs"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ddzfe", "=", 
    RowBox[{"2.303", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"defeold", "^", "2"}], "+", 
       RowBox[{"defenew", "^", "2"}]}], "]"}], "*", "dzfe"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664809161552978*^9, 3.664809177651751*^9}, {
  3.664809390257558*^9, 3.664809513146228*^9}, {3.664809811207567*^9, 
  3.664809815580418*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ddzc", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzn", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzo", "=", "0.10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzne", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzmg", "=", "0.16"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzsi", "=", "0.21"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzs", "=", "0.35"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddzfe", "=", "0.15"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6648100417413483`*^9, 3.6648100719825077`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"OPACITY", ",", " ", "KERNELS", ",", " ", 
    RowBox[{"AND", " ", "SOUND", " ", "SPEED", " ", "VARIATION"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Import", " ", "opacity", " ", "and", " ", "kernels", " ", "for", " ", 
     "Y_s", " ", "and", " ", "R_b", " ", "from", " ", "Villante"}], ",", " ", 
    
    RowBox[{"including", " ", "intrinsic", " ", "opacity", " ", "change"}], 
    ",", " ", 
    RowBox[{
    "change", " ", "in", " ", "sound", " ", "speed", " ", "and", " ", 
     "calculate", " ", "change", " ", "in", " ", "opacity"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.664810197146449*^9, 3.664810244975491*^9}, {
  3.664816653601482*^9, 3.6648166666836233`*^9}, {3.664899112818262*^9, 
  3.664899119858735*^9}, {3.664899262377439*^9, 3.664899267151155*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kappa", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/kappa.dat\>\"",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kys", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/kys.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"krb", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/krb.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ki", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/ki.dat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"du", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/du.dat\>\"", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6648113030134583`*^9, {3.664811336642337*^9, 3.664811337226535*^9}, {
   3.664811397257031*^9, 3.664811407324461*^9}, {3.664812181293947*^9, 
   3.664812183424612*^9}, {3.664812258337736*^9, 3.664812267512288*^9}, {
   3.664812557703862*^9, 3.66481256480908*^9}, {3.664812651532748*^9, 
   3.6648126530110283`*^9}, {3.664813673732524*^9, 3.6648137015495787`*^9}, {
   3.664814002239745*^9, 3.664814035653318*^9}, {3.664817103289496*^9, 
   3.6648171111745577`*^9}, {3.664925454737458*^9, 3.6649254547404633`*^9}, {
   3.6649254925628433`*^9, 3.664925492568633*^9}, {3.6649267949141006`*^9, 
   3.66492683465539*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Interpolate", " ", "data", " ", "points", " ", "for", " ", "opacity"}], 
   ",", " ", 
   RowBox[{
   "opacity", " ", "kernels", " ", "and", " ", "sound", " ", "speed", " ", 
    "variation"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.664813728760456*^9, 3.664813738836639*^9}, {
  3.664817061434257*^9, 3.664817066765327*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fkappa", "=", 
   RowBox[{"Interpolation", "[", "kappa", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fkys", "=", 
   RowBox[{"Interpolation", "[", "kys", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fkrb", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"krb", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fdu", "=", 
   RowBox[{"Interpolation", "[", "du", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.664812655256958*^9, 3.664812668801497*^9}, {
  3.664813708409564*^9, 3.664813714122979*^9}, {3.664813799024373*^9, 
  3.664813825276519*^9}, {3.664814039645014*^9, 3.6648140459120607`*^9}, {
  3.664817115105424*^9, 3.664817119517358*^9}, {3.688361946265326*^9, 
  3.6883619466656017`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Plot", " ", 
    RowBox[{"Villante", "'"}], "s", " ", "change", " ", "in", " ", 
    "opacity"}], ",", " ", 
   RowBox[{"right", " ", "panel", " ", 
    RowBox[{"Fig", ".", " ", "10"}], " ", "of", " ", 
    RowBox[{"1312.3885", ".", " ", "We"}], " ", 
    RowBox[{"won", "'"}], "t", " ", "need", " ", "it", " ", "anyway"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664812762787323*^9, 3.664812777732774*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Fkappa", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.75"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.35"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664812669850498*^9, 3.664812676830682*^9}, {
  3.6648127082906227`*^9, 3.664812742572371*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/aV0dTppOHPs6jq7Gxxs9Lf8fLyLxC/aXea4GwcB/s+seog3DD1avf0mB5Ev
cs5c6ybx2/JMYvVtDkKuNtT9Jp72SBXlvcOBoOS5ggomDeZ0ylKuJ4n/eVME
sWigitYI1nlz0Esdkr/YQ0NExoBA2AMO5KW9Vi3po0GjU3ZKwZ/k25Byvlc/
6bdWxfc1AjkwqN9vf2OA9LuxE6L7gzhQkzk0az9Iw4TAo63mYRy4uC0KvzJE
Q+amr45hsRzwd1tNeIyQ3z96+5X3NQdCaamntnynQVTkxB3hbDKfjtn+k1M0
8D//IiSVS+IvrXL29g+Sf3kyqjsoHDw/JzWn6SdZz14fW/syDg46K16M/0OD
2HbjT10NHCy2kA6rnU+HQOWo6ycGB+/s6dukFtIxaeAz/0cTB+u0tJucFtHx
0bJo/bJ2DrS8wvk3CNHhHyBtfbCX5EtY2dW85XTM5Y6w88Y4CN+mZWm6ho7v
ofe7nyzth/uh1Ky/2+kwKp1se7q8H38cLu/I0KQja9CyKVS0H9te1lFNdtFh
q6FNj5Hoh5L6Dp4q0MFu/0N5JdOP5QNpEwW6dDSucg3+sKkfl2zXflE/QUdG
vI2eoFE/BkX2e91zpmMhvWP/UuN+0COfrQ9xoePyxMG9oif7UWxwbCbFlY61
+9ZvX322H1ukEhRab9ER2c9Zp2LRD6v4xsaz9+l4uP78HAPHftyjRmyND6HD
8tXRAr+gfiwIdPm8IZ8OOdmiRXYh/dix5cDzPQV09IfJmR0N64e1rp7ruSI6
Lnr+FFgW2Y/36iLlcaV0WB1PPB4eT37/8Mv7czV0XPo59SU+qx+vr9/ITe+g
Y4PdBe27OeT5B5M9FnbTMcSuDb2Y1w9De8oyOxZ5/7q4XesL+tGx+U3pPg4d
V57rPc4o68eKXgNdxVE6ru6PXUep78eFI5mio3NqoVw03y2isR/KIae0Y/hr
MaLqVOf2sR8Xl4V3G82rhe2Kg067Wsn8NwncrV9ci2vD4+XvmP1IPdBCmb+i
FvZP95+rG+nHouN/K56q1cKJORLUt3AAEcVHru22rEXR0z634cUDUKXt58xY
14JXt9X8u9AABpV0UWZTi8DMMtUFywfgptbLNHOsReadIPrGVQOoZAzI8XrX
4rPMdl5PpQFIJFgoz0mqhbn13f+k9AcgqlLQov6lFqkrXU9vOELG967YtuZb
Lb7W22Kz4QDapWI/C0/XwkPjpKCu8QBajoqcFuStQ9R8hbRr5wbw22XhCxux
OrS+rO8tth1AqNCT34V76mDwVcLQ5MkAxOdZNVZE1WHq64IA7YABhK+jrDwV
X4e4sZ8fFJ4O4FxjBe+3lDpMjnccng4ZQM3ftvy9OXWInnx2IDR6APM1c2Y0
aXUY+SmBhvQBZMfcqhyYroMf/0rVffQBWPB4yXy58AF0iZWLleYNgjb+ODlN
tx5Tz71KQj0G4aRhnXF0VSPCbjN+RXkO4uFhg5TwNY3YZiKjmeA9iGbeuX6s
tY1wEXuXn/lgEJP54h8vKzfiux9PVo3/IDwLhvWuaTVi0u1Ows/YQVzT/Mgj
b9aIieO3fc6XDUJ4rvuCtrhGBG36UG35bhBVvGHbOpIasXnJan6bSmIv1vz2
1EY40os9XWoGYRZ5XqwyqxHje2bdAhoGEeI8oylT3ogxlZu273oGcTbm7g85
ViNG57kdW8fDhWy5d/lPMQbGNlVx5/NyUXvtdtS6lQxMmCzxGOHjws1cYZPB
agamXie/zJ3HxZ1T2y4FrGWA5/RHPu0lXFw3fTLNUmNAJFUp31SKi1cXXO4m
HGBA7KOLvrY0F+9Urqbe12NAYvYde50sF7qHwiYsDRiQMjy9ZHQdF5uyNzKW
Hmdg/fS9yzdVuGCI9WRvMmVA8yBrZcQuLkbol5vdnBjY5aiQfXM3F99MUocX
ujBALogHzPaQ7+smBoW5MqAzttBZXoeLl7a2NjG3GTCI0PiQd5iLBbV5Oy/7
MGA+FHiHcZY87+LF7Z+fMWCxrFv0zTkuMs3xeU00A1a71mdEmHJh++5s2NFY
BmwCS9rNLLjYNfGNEp3AgNP2z5u+XOHCjrNi1ehLBh483Ne/0I0LWqjTVtMi
BiqjnhbI3+Tic99o/cViEp/XPX7at7mwTgpQtixlwK3lprq7FxdTLwx+61Yw
YCub9+DTIxIPm8aHaTQGUtV5TQT8uOBRTGy0rWVg4KChmow/F4rhyU7rPzBg
aj/SdjqIC6NQrXDvRgaOFcspUCO5KOhrHapvZcC/wfE3J5qLtA/7Yg+3M0Bn
lzP+xnIhGTukW9ZB4rPgvLtGIhfL5rO0fLsZ8JRMP3I8mYvTrzc6cpgMlKj9
lLV/wUX6yTKrzT0MbDsZWpuSzsWv8pCTeX1k/lc4zytecVH6lLmDy2Yg69Ym
Z9ZrLsQ8rFOF+xlQSPwgKZbHxZLqXd90BxmQHBOwu19M4lEn3ozPDJzmM9aO
L+VCYqdH8rphBkLFEsRKyrkY/6UcOWeEASGt3WWTVVyse3qpMGqUgcOGfsHC
NVzsd/pOO/OFgYeWnZeUaVxEVDbQBL8yMOexi/DFD1ycp1+zPDXGwO6Yqv47
DVyE+m/hjBC7Zy0rjGJw8aj7kJTrOAOUSvMnlCYuVr3NnveTeLI180JTCxeq
m2yD7CcY2Ph5Vv1rGxeJ+92zu4iv/dZbuKiTC7O/3ae0vjHwUvgZS76bi31W
oa4hxINruTnaLJJPHklz+4jXaqj7mPZysfjYou+ykyTf9O6auLO5yO+nbztL
HH2eoRbWT+K/p7/0AXGHwxr+nEEu+GxOe6YSi9271v5hiAubKxvsyoiNwt9m
fPpM1n//iZu1xAEvF3gJjJL48PdG1hHXlZw6IfOVC7yilVUQz2ckK2iNk/U8
sJz5inh//7ffp79xcaKjZOAJsfePvR+dv5P1sqHXWRCXLgxMCfxB6plH874y
8a/VLPeMn1w4JQryDpP5bN+kfJT6i4uPZ3S3xRI767iv7f/NhZfigIgucfYp
6o+/f7m4IDkcyCbx+h/i7D1w
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.7499999846938775}, {0, 0.35}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.688361898056588*^9, 3.6883753311752377`*^9, 
  3.688377099737844*^9, 3.688377184509643*^9, 3.6883827831955357`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Plot", " ", "kernel", " ", "for", " ", "surface", " ", "Helium"}],
    ",", " ", 
   RowBox[{"left", " ", "panel", " ", 
    RowBox[{"Fig", ".", " ", "5"}], " ", "of", " ", "1006.3875"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664812956929706*^9, 3.664812970866007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Fkys", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2"}], ",", "0.6"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6648128585189953`*^9, 3.664812926671424*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.7999999836734695}, {-0.2, 0.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6883619192237673`*^9, 3.688375331225032*^9, 
  3.6883770997860327`*^9, 3.6883771845678596`*^9, 3.688382783351994*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Plot", " ", "kernel", " ", "for", " ", "convective", " ", "radius"}], ",",
    " ", 
   RowBox[{"right", " ", "panel", " ", "of", " ", 
    RowBox[{"Fig", ".", " ", "5"}], " ", "of", " ", "1006.3875"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664813895495434*^9, 3.664813924588071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Fkrb", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6648137837514772`*^9, 3.664813791985169*^9}, {
  3.6648138490404654`*^9, 3.664813867000524*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
+v3KMbpYmCzsC4uNnQaXDaXaV/Sx8D+ZtYZk
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.7999999836734695}, {-4, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.688361933797517*^9, 3.6883619770888777`*^9, 
  3.6883753312779427`*^9, 3.688377099836795*^9, 3.688377184616549*^9, 
  3.688382783491624*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Plot", " ", "change", " ", "in", " ", "sound", " ", "speed"}], 
   ",", " ", 
   RowBox[{
    RowBox[{"Fig", ".", " ", "1"}], " ", "black", " ", "line", " ", "in", " ",
     "1411.6626"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.664817429498644*^9, 3.664817456296668*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Fdu", "[", "r", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.02", ",", "0.9"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.006"}], ",", "0.01"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664817125667033*^9, 3.664817134245059*^9}, {
  3.664817391170223*^9, 3.6648174123308697`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUWHc8le8bLiqhJEnSQkhWiVDJhUqD7CR7O8cKoYw4GlRfKRWiQkhKqZCd
1yYpMo89zzBaKiHxe39/nc/1eZ73ea57Xff9HDGHs8bOHEuWLFFYvmTJ/3/f
uqqGDAfdg4ddzbRH6zqYOjmVp1bcg8Re8aaz3oKYsotZ5rgyFqWNPJF3l69H
jHXZse0GsdgcO72HcWc9dltMRI3EknjeiuUjLIRPZsKf03pjce/s20KdOCF4
mhxZ77Q9Dh7W50u8V23Ac73kR6Ov45Buu/7pzNAGHD/eOJT+Jw6lBoOF3lrC
YB+ZlXTWiEe6z9RJ3wRhRGhLuUlejYe6UlUQz7gwJGGSzfgQDyuOBhMdpY2o
PkCbeiJwH5N6oV/2+G+Eg9pLFZcz91FKO23V92ojlu7tDpJKuY8XvB/zjEc2
IkWRi2Ay7yPd0ow3ZY0IoKDM+VQ+AX79bn4tyiLol7E/6uqXgGUcl5b9MRZB
yI7o/3aUJEBCeV2ziJsINkmUNLGWJqJ0OHbiRJAIikXZ6zKPJSI9ONz93mUR
mG9Zb065Ra57nHRaFiGCPxu1H0p3JGJyu8/403ARxAmdHWRvfoB5PieBqAAR
7F33UOKZ4wO0PXj0/Z2TCNrWvKdQnz+AqVpswgk9Efiumn6x88cDWBlXikFe
BGu5t/8YU32I0tMPH2VyieD1csO9z0Mfwio/Uexez0boc1wMdKt5CMFe5Uq+
ZxvxZeHZO5lVj1CtMnxX0nsjov52LJ0wfgRTZZEsxu6NkJ3h1MlKeIQobdPN
VhPCaPi1+4b7ILnexDUfmywMyg/rT7I7khB17IVNyklhcH29ITDpmYRVm4vM
r/3egIzxArMXeUl4UfBkwSJ+Aw6zRhM9/ibB6vqYk6TSBlwa1Nj+5VoylCNM
q9vNhSDW5+76sikZgjfdmO3D6zHo0diuwpuCK+FvRThc1yOUOrvxj1EKlMfr
eNfZCKLUwST1/EAK9IiveldXCoB3iFrdyfEYyiqlB02d18LClsZUlXqMKO6g
0YJSfsxavpSZ8XiMzNljuiP5fFA5xZV7Ye4xNJWvu+7PW4mI1i3t9C2pKP9+
XHyJCBfajZT/qGml4vshh9vl/svhp29/YDYyFTObT8kkruHAm6MlVYHr06B5
pC5pY/JvDRuZOxmtB9KQsmv1CfmLPzR4VlOvyzukQZT3vfCx/8Y1nFqEDIay
00Azm5tZb9miIWzt233sWDpSbh1IK744URbmu/PHhuAnOBZYTcvh4iXkTi1p
83n8BN6SmzZ9f7uaoKt25n+oewKa+z+Pcyr8xJ5/V0LCBDMw2vtC7eCcAMGM
HORivcyAnbaF9YlcYeLko/it+YNPYfNgb4eFlzgxF+a1lJ8rEykP+LuYatuJ
DIcjo1T5TPDpCXzetFyCWCL989mWoExodN3QtU2VJPJy9PdeXfcM6S7mGxy/
SROb6pfrmeo8R5NVmu+6xl3E2NS5wKmsFwi9/0t9SEaVYO/4VlbR9AIa30Pr
3ySqEkwrt2UxP1/gyYfcu3U8asRord2tXQdeYo1z1+m3E2pEf+LJJx4NL3Ey
cn/S/tf7iRbtHZ+Z7Gz45ERa/dLUIGyOe977cuc1TvqfU87N0yb6RmRU29Nf
Q10gVCfjizZhFcruKs1/jTMGBrlXpQ4RlrmO26K6X+Nre1obx/1DhPkWi+cy
4m+w5GhmUW3gYcL4h06565s3OH6ycOesig7x+b9ljgZVb/CTT8WZ6alDGEpV
Lldtf4PZbT/p6ek6hIHlQd0Vs2/AsLyeEr32KKFXo9SRrpmDcs8iJSb7KHE0
QXRyqCkHy6IrInZGHSce8ux9cnYoB+nZa41syo4T34OP2/ybyoFLlLWw3vfj
RKKNb7OwUC422gXv0zM5QXxririesSMXLrVC9pZXThCHtR5oK+/LRWyDptiW
tyeIr9ur8wyscmF2s3VFznpd4lAs3bPPMxdHS5fPhR/RJe6v+CLlHpYLnoln
tEF3XUJrbH1CRGourkcd/nY3T5e4l+168R07F/LcNQZVmnrE2LYQFd25XNh+
Ds0qc9AjNGJuf6Pz5qHa/8oSgyt6BOtckf0vhTzQCnZG7KnVI/bv49WR9c+D
QR/9puiRk8RgVTZfwtK3iM14teC3W5/Yu7eqTmrdW1IXIlao6OkTNzI6aXkS
b/Hk9eXaB676hNL1JT+bjr5FRnuazZlH+kSEvnHniui3cLkbfLFwmQEh1/U7
2U8kHztavBjDVQZE+AmeMxxy+bjzbj7CuduA6CjZKnD7YD7WZ15PfvjdgAhL
Onolyy4f9mezBIT4DIkWxwTKcEY+kuv7Vk6rGhIXvqorGioV4Pri+6/OVw2J
+Zg3DRY6BWh1fPn4xC1DImyvlJPzmQJI7atSWpVgSESErIkPCivAt1fPLki/
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
yVrqzdRjWRNbazDSgmDyvPx1IuY9Os4fnzgXZE4sqH5VUUt8j3qVFS3CFubE
BuddgZJp75EbstAcs8+cOEa8+beY9x4UlfTHHDOniefn8le8pb+Hz60Okx++
pwmvXkJ4m2gDoh7c+3mNYkb8edmi/jO7AS/7fW8Ga5oSK41mrjxo/IBulRs6
+KZP/Dfm1GLZ/gG5KYV6B5L1Cb5Ln7dt7v8As5XXv0/q6xPrc58XP/z2Acbp
H0f8npwkxNdbf38k0Ag7llui0XE9Qr2rwjLFvBEJ0tXzK68eJ3zs/9vzZLQR
z+7KXTvdd4j4NfsnzPlLI7K9eSukLh0iLtxx+ig53YhLIokbvpHvx9Cqg5QM
ro+ovzZS6+etTURJfn/0VOYjTpV8+xjPqUVkjJlyP/f+iJrX1Jkcc3Vi56UK
M7fAj/Dd21NZmHaAeCGikC5z6SPKf8asXfi6n8jV5ULW3Y+Quroy2iJiH1H+
ssjvRf5HOLRmaQ8XqhDdPlsHs+c/4kzvmXgXRUXCb3vJI/kVn7B0Wpq37dxu
Yk37acsXaz7B9yL9QpPnLuKwWkzHM/FPoEQtVVNtliNeLXB+TD/2CSlhMtuf
dO8grvw3VpR4j8Rrgn1/hGwmFJ7k3Y2Qa8Lri5IRlmKLGloeT7bvUmgGtzll
ZDZ8D7bvsZl8c/wzrm06lrzr4jH8EBEp4bjYghz3HvWlAadwonz8clF4C6YK
ps51JJ1CqnOJnndEC/YfW9aVWXcKpq+t+vtutSDc5OyI1kYz5B9JXlqU2oKY
sbbf8qVmCPKWOHa2vgXrS61+7V1ijmW1Cu0961rhdMDU73CwBazcFx/dEW7F
7rr+dztSLfCWv9nl+JZWRNyQY3+pt4CLpc9MvlQrxDvcYrcJWeL999xNd/a1
QsNsWH/pK0tEb9rncMy2Fb8fHxBb0W0FZjm37KJjK9pV3NvzFqwAl+6fbymt
+BNSeWjfdmt8fx18dbtvK0wPaC0vd7eGsU5Z5sKVVtw89W1D9pw1nk9E+7y9
3vr//x0Tfm6xAWeM7X6P6FZsl72svVLLBlYquzm3323Fa+3nmHC0QV7Pksau
+FZc7ewsexBhg9Xhn+/dftiKE4qpX4Sf2cBFKtX66ONWRDXl5NyotkHZB1+p
hSetEN44+Ollrw02+Bz6lve8FdfezeTe/GWD4hSKk8irVjRK/RiO5bGFVfPN
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
iyljU/7/AQEMUYM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.8999999820408163}, {-0.006, 0.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6883619657223263`*^9, 3.68836197971812*^9}, 
   3.688375331344199*^9, 3.688377099896475*^9, 3.688377184683628*^9, 
   3.6883827836393538`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Export", " ", "surface", " ", "Helium", " ", "abundance", " ", "and", " ", 
   "convective", " ", "radius", " ", "kernels", " ", "and", " ", "sound", " ",
    "speed", " ", "to", " ", "plot", " ", "in", " ", "gnuplot"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6648146084685793`*^9, 3.664814638802322*^9}, {
  3.664817353395941*^9, 3.664817366458837*^9}, {3.6649268623819313`*^9, 
  3.664926863208049*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", " ", "using", " ", "kyplotter"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664911554853187*^9, 3.664911599813284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ky", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/ky.dat\>\"", 
     ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.66481465696978*^9, 3.664814658664542*^9}, {
   3.66481486876189*^9, 3.6648148923303556`*^9}, 3.664925454753037*^9, 
   3.664925492583295*^9, 3.6649268862367268`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"ky", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"Fkys", "[", 
           RowBox[{"0.001", "*", "i"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6648149258209352`*^9, 3.664814944380313*^9}, {
  3.6648158611148367`*^9, 3.664815865700246*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "ky", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.664814949150188*^9, 3.664814952569682*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", " ", "using", " ", "krplotter"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6649116031990623`*^9, 3.6649116079907293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kr", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/kr.dat\>\"", 
     ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664814955582467*^9, 3.66481497007479*^9}, {
   3.664815188834478*^9, 3.6648151907280903`*^9}, 3.664925454754911*^9, 
   3.6649254926140614`*^9, 3.66492690555399*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"kr", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"Fkrb", "[", 
           RowBox[{"0.001", "*", "i"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664814978100362*^9, 3.664814981835747*^9}, {
  3.6648158742892437`*^9, 3.66481587944528*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "kr", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.664814985231674*^9, 3.664814997271022*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", " ", "using", " ", "soundplotter"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664911627804253*^9, 3.6649116318643208`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sound", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/sound.dat\>\"",
      ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.66481757300217*^9, 3.6648176057734118`*^9}, 
   3.664925454756915*^9, 3.664925492619051*^9, 3.664926927412196*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"sound", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"Fdu", "[", 
           RowBox[{"0.001", "*", "i"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.66481762058359*^9, 3.6648176320746098`*^9}, 
   3.664890205393031*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "sound", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.664817636055497*^9, 3.6648176390165033`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "opacity", " ", "change", " ", "due", " ", "to", " ", 
   "metallicity", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664899995330329*^9, 3.664900013440744*^9}, 
   3.6883625238329773`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dk", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fc", "[", "r", "]"}], "*", "dzc"}], "+", 
    RowBox[{
     RowBox[{"Fn", "[", "r", "]"}], "*", "dzn"}], "+", 
    RowBox[{
     RowBox[{"Fo", "[", "r", "]"}], "*", "dzo"}], "+", 
    RowBox[{
     RowBox[{"Fne", "[", "r", "]"}], "*", "dzne"}], "+", 
    RowBox[{
     RowBox[{"Fmg", "[", "r", "]"}], "*", "dzmg"}], "+", 
    RowBox[{
     RowBox[{"Fsi", "[", "r", "]"}], "*", "dzsi"}], "+", 
    RowBox[{
     RowBox[{"Fs", "[", "r", "]"}], "*", "dzs"}], "+", 
    RowBox[{
     RowBox[{"Ffe", "[", "r", "]"}], "*", "dzfe"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664899520145698*^9, 3.664899562732202*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"dk", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664899606532877*^9, 3.6648996219273977`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV13c8V98fB3AZiRbKViJUKpVKi17aoWQlK0RpqawUlcQ3hYZKqQiphKaV
Fdki2e5n+vjIx2dQEqVh/c7vHx7Px7n3fs4995z3eR0tj1M2h8TFxMR0yJ//
/0/pLQj4fMV6o/Xjli8RGQ2I0FXIzZq9HIvE5Xy/vmqAgvGZZzdnm6LQO4Gy
zGyAQ036nJDZVngYTq2WzW/AyLQKx9Oz3SGRb5zmXNWAz28af/vM9kH/unVn
vTsbYDSJqj45OxRJsYbJrvKN6F3k+PrE7BhIrtfrtTjRiOEjMzwWOsXgb4Hr
MxOfRoinVSh2J8XAtT82d4l/I1T1DC44LL6F/ouzBOJBjdipLbFry+bb2HFv
yvSY/xqRqvZKpOITi19yu51WxDfCY+ok3cpP9zF3x6zUN9WNOBHYtvt6WTIi
Qh4ur5/aBLfpN1uketIwXqh3smdPE16Jm39pPPUW6w8kNRrfbEKp06IfLyty
8L64NsiE3oTosdD0ttYcHFksZn6A0QT7ZPqB0e4cjN2LaLnMbMK3nistFpK5
kNXPm9XMboKaLz+7d2sugm/IR/p0NSHgypPAhdW5OFoz1tLW24SFOXNGn3x8
B+03O0Iw3oSY6QrS8Z/zQYlDWnxhM+rnl01odObDa3ND8sVFzZBe7/MncSAf
dh8dHo7rNyPEq0GUMqsAdKeod2IGzfD+EFWf4ViA7eFRrYqrmmHmK3G7sKcA
qgvtH182bYZ4+08N5lghUn623Yt2asbGvieKLjOLsP33ueR1Ls0ImmQ7gzOv
CMlsf1vR/mYMLM2c6NpShAnxSyW7DzSjM+LEF1FkEdY+3yDSP9KM92v5z/8q
vsfUgMUdhoHNOJ1AM1Q1KMablru+iXea4bfjwEkzFKOg7p7X+bvN8BnsTQ+y
KkaJ6QYTlzjS353j85h+xYizNL6vFd8Mj586M+PzipF5tWRzRUozrHb59Wls
KkH2slL7g1nN0B+d9nSe3QfsVUj8sqS1Gd+XPpadXVyKZZq/k16ot0BHKcBc
paoUklpT3f7MaYHD+PYojc+lmH9q/6od81pQ2vBVRrejFP9lBy/o02nB7VNr
ZYzGSrF8ddjLXQYtWJXZKO1gUoZapqV54KYWnF01LplQXIYdazz27DjaAvEN
zhPzS8rB5HhpLypqQT/b0a29uhxBe38tnFvSAlaIw4eIxnJwn689pFTWgpzy
vRdF3HJQGyyuy9W0wMvcauK1RAVenll7+GZzC+oct02sM6vA/J5jnh/4Lbh1
dtnEnrYKXKe2pt5XaMW8dxIT53orcWZ6LW2ebyvKj8ldejBYCb2q/QlSAa04
qDlHIu9fJT4MfLP5GtiKtKtG0oOyVRizrXr44XwrljsfnXlkcRXSNTLfXbja
Cog1atp5VyFze7i+Y3IrXM0fmi7pr8KWC9ud7ja3QmwitdxsuAqlijdfFba1
IiU7e+vh8Sr4PP2j8oXWCr7G550pM6rxzm7IeA2nFSe/T1ipLKtGfYuA+a+3
FRdiDx2Q9KnGAm9612apNiRwloexf1Qjpf+L7MiGNiR1ZOg2/63GM2H9u8No
Qwpbp7ZqUg2yvjReoTa3IY2pIvdGvgYZFW0JhWZtyKHEEi+tqMGirKqXCfva
UN/QVKDnWwMr2eSVtf5tGC3x+eEzUIP6GikovG2Dc9Jbd6nvHxGhdurOzNXt
0GmYax6o/AnCTOfjtGMULDLk876rfYbr15/3aA9ouPBz0CDTrBGOT3QereLS
EXR81qU5eU34Of/B0bAFTHhkn3rJf9eMo7Rb19y8WLAy3NJhW9+CvfNsfI7W
s/FNmrFnW2MrvJwVlc9O42CeccGz562tqNQ6fTJHngMbnwcjMvRWpHJv8fqV
OMinOz5v4LZi9iovDVctDsLSmeP7Blthnrp6u64RB0oW7FfHFNug5WrBtXHj
YOONzqkxzm2QC/3L5LzhwKf8w4FBtzY0+haWV+Zw8GQ4Kc/uYBs09YaN0go4
mOLm7ql6og2drmffHa7goGVZV2FKSBs86rtefqQ48Gr+cjT3cRtU/JWsZ45x
cHM2v4YpaIPrrDT/1zs6Mfjt/OuFX9twI3eD5pJdnbCvmXU3cKANv6SChlKt
OqERvMlD4W8bNkfGT4l17ERaZ8KomWw7NAxCxJ2Pd6I0w3ZFwZJ2eJm873K/
1okfpmUP43zb0aZ6tC7+UydsTyScsBtpx3Ue5R0+jws5q/WHHCbacXcVT0Jb
m4sGQ7qLiwSF41N5ph/mc2H+Z9aug1Mp3JHa9+KXHhebw6P1A9QpbFy1a63N
Ui6WPwgW3NlAYWtJOK92HRfTqhwOtJ6j4JeUrpRpzUXd82EH2kUKTwcCPsy3
5eJqVKwVK5zC3Eg5ibt2XEhYNaE7msLvHXaO/vu4+MfcMXconkKPx2jlvP1c
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
eWpYtw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.23},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66489962270848*^9, 3.664900015240946*^9, 
  3.6649261340253553`*^9, 3.664926258336108*^9, 3.664926935146469*^9, 
  3.664927356918728*^9, 3.664927785511396*^9, 3.664928023688284*^9, 
  3.664967636685676*^9, 3.665074641237705*^9, 3.665109378039671*^9, 
  3.6651097436764307`*^9, 3.665251098673648*^9, 3.6652608406781483`*^9, 
  3.674103638837696*^9, 3.674104122435059*^9, 3.688109793988792*^9, 
  3.688206664259362*^9, 3.6882080066375303`*^9, 3.688208049182671*^9, 
  3.6882943976611643`*^9, 3.688295285441407*^9, 3.688295543265375*^9, 
  3.6883606442921553`*^9, 3.688362527339759*^9, 3.688375331763422*^9, 
  3.6883771004740458`*^9, 3.688377185049177*^9, 3.68838278463239*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "error", " ", "on", " ", "opacity", " ", "change", " ", 
   "due", " ", "to", " ", "metallicity", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6649000220688763`*^9, 3.664900035323371*^9}, 
   3.688362554284226*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ddk", "[", "r_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Fc", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzc", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fn", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzn", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fo", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzo", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fne", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzne", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fmg", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzmg", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fsi", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzsi", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fs", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzs", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Ffe", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664900037321563*^9, 3.664900039567589*^9}, {
  3.6649001469079523`*^9, 3.6649002183090057`*^9}, {3.664900318732243*^9, 
  3.664900342525971*^9}, {3.664900552003001*^9, 3.664900570909026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"ddk", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664900219880905*^9, 3.664900239765698*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.032},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664900240578473*^9, 3.664900343882833*^9, 
  3.664900572534371*^9, 3.664926134068385*^9, 3.664926258523164*^9, 
  3.664926947286227*^9, 3.66492735700898*^9, 3.664927785745041*^9, 
  3.664928023771419*^9, 3.6649676367938643`*^9, 3.6650746413459053`*^9, 
  3.665109378421464*^9, 3.665109743776413*^9, 3.665251099312357*^9, 
  3.665260841029064*^9, 3.674103638921883*^9, 3.674104122568801*^9, 
  3.6881097945632467`*^9, 3.6882066645502577`*^9, 3.68820800678946*^9, 
  3.688208049319848*^9, 3.688294397751379*^9, 3.68829528552822*^9, 
  3.688295543347382*^9, 3.688360644507874*^9, 3.688362556151753*^9, 
  3.688375331875443*^9, 3.6883771005755787`*^9, 3.6883771851753817`*^9, 
  3.688382784830841*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", " ", "opacity", " ", "change"}], ",", " ", 
   RowBox[{"plot", " ", "using", " ", "opacityplotter"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6649016195400667`*^9, 3.664901632191577*^9}, {
  3.664911776949421*^9, 3.66491178455372*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"opacity", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and \
plots/Data/opacity.dat\>\"", ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664900925273679*^9, 3.6649009665922413`*^9}, {
   3.6649041184181747`*^9, 3.664904119188621*^9}, 3.664925454763975*^9, 
   3.66492549262374*^9, 3.664926983839666*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"opacity", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"dk", "[", 
           RowBox[{"0.001", "*", "i"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"dk", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"ddk", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "3"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"dk", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"ddk", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "3"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"dk", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"2", "*", 
            RowBox[{"ddk", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "3"}], "]"}],
        ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"dk", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"2", "*", 
            RowBox[{"ddk", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "3"}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6649011088955193`*^9, 3.664901191669466*^9}, {
  3.664904070999055*^9, 3.6649041155281076`*^9}, {3.664904229395982*^9, 
  3.664904258352436*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "opacity", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6649011963834543`*^9, 3.6649011993059187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "REPONSE", " ", "OF", " ", "HELIOSEISMOLOGICAL", " ", "OBSERVABLES"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Calculate", " ", "response", " ", "of", " ", "helioseismological", " ", 
     "observables"}], ",", " ", 
    RowBox[{"including", " ", "modelling", " ", "uncertainty"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6648164567652473`*^9, 3.664816511564846*^9}, {
  3.664818709878474*^9, 3.664818722032234*^9}, {3.664824637195595*^9, 
  3.664824663337352*^9}, {3.664906728737425*^9, 3.664906743865951*^9}, {
  3.688362803110471*^9, 3.688362822174157*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"REPONSE", " ", "OF", " ", "SOUND", " ", "SPEED"}], "*)"}]], "Input",\

 CellChangeTimes->{{3.664896852684535*^9, 3.664896857818025*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Response", " ", "of", " ", "sound", " ", "speed", " ", "using", " ", 
   "vSZ16", " ", "abundances"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664818458060111*^9, 3.6648184762691107`*^9}, {
  3.688362827165676*^9, 3.688362830670542*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"duz", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fuc", "[", "r", "]"}], "*", "dzc"}], "+", 
    RowBox[{
     RowBox[{"Fun", "[", "r", "]"}], "*", "dzn"}], "+", 
    RowBox[{
     RowBox[{"Fuo", "[", "r", "]"}], "*", "dzo"}], "+", 
    RowBox[{
     RowBox[{"Fune", "[", "r", "]"}], "*", "dzne"}], "+", 
    RowBox[{
     RowBox[{"Fumg", "[", "r", "]"}], "*", "dzmg"}], "+", 
    RowBox[{
     RowBox[{"Fusi", "[", "r", "]"}], "*", "dzsi"}], "+", 
    RowBox[{
     RowBox[{"Fus", "[", "r", "]"}], "*", "dzs"}], "+", 
    RowBox[{
     RowBox[{"Fufe", "[", "r", "]"}], "*", "dzfe"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664817550571046*^9, 3.6648175508033333`*^9}, 
   3.664818093045864*^9, {3.664818124065361*^9, 3.66481814964042*^9}, {
   3.664818205539877*^9, 3.664818277352985*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Plot", " ", "response", " ", "of", " ", "sound", " ", "speed"}], 
   ",", " ", 
   RowBox[{
   "after", " ", "also", " ", "including", " ", "change", " ", "in", " ", 
    "sound", " ", "speed", " ", "between", " ", "AGSS09", " ", "and", " ", 
    "Sun"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.664818479853282*^9, 3.664818498774537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"duz", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.006"}], ",", "0.01"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6648182619792747`*^9, 3.664818269588169*^9}, {
  3.664818502180258*^9, 3.664818529603765*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVV3k4VQ8TVlIULaKyZQ3ZsrfhRVTILkTZsl8kSbZwr1JECS22kkSp0EIq
XJWfJMm+XEvorkiSpKi+8/1z7/M+c2bOzDvvzDxH2uuYnc9SLi6uBuLn//8f
4weMjks24HdcYE14ZiRVqor7X8x4A/p3f42KND5FzRtWpwx+a0TumRB9wTMn
qK43Kzx4vjZBl+fhie/Lj1HlWjebR2x8j0OZ5+//XOtDtShd9+yr6AcIWbna
Puh2oJ6enVF7ZPYRpY1P2mIcdRBFWk+WeNYG44FfZsr6HvB6cuwBs6odTRtF
N7LWkGCjuWfIvqUDAaZhGmktYShOFrjt3tYBra2tWvGfwvBnpNef1NWBoip/
19CZMJReCpqlDHZg9OHPzFqRE1j25cqqx5Md0DcV000LOYFnJeydawU6wZ20
c/LcxnBslrh4tcWyE5yUlTdqvE8iPNz5cJ9tJyyvvckQizqJ9+9lZOgHO3H/
Q9f+E2knERn97OHCkU482TBsz191Eh29Iw1KIZ3YW17gObI8AkkZWt/PX+zE
qaIUvcniCHxZ0W9t+rETCk7P/jj2nIKU3vM7JZ2dMAyu8snnnIJdaPYCX18n
VphZL3QvnkJ136GS1pFOyGltN5KQjQTlHu2v00wnzizo6yw5FokNFoMPA4W7
EPFw073ly6JgcPHTqnTXLnSLpG3cJxON0NdUzxn3LgRtyviUrxWN23M3nzl4
d2E7+5T3Z5No8Lp7HBUJ7sLHwVbdXX7R6Ng2+qIwrgsSJrwL6+9Hw7d9LKDy
Vhc6sz7tEFSMwSUh5lsaqwtO1FWa3IKxmPkSW6Y42YVomR/PmiVj4fh2/ZWI
6S6wIo5dIqvGQjzayEvwVxfKcu4dq90fi7uf8hbNVnbjtrtu/rG4WNSX2ms8
V+nGavXPyS2sWHwzfJVz7Xg3NvueTXlXdhoOos5kxslu7GiLCq16cRrV36f8
tKK7MSf5Tyur8TTiisV1PlK60Th7kCwzfBor+SM/Ls/qhsZ6v/AL/HGQ6VVb
FlHVjVmJB5XXfeNgH5wX7LDQjadGAcen18Rjrc0uH+d/3QievPjCUyQerZp9
hw9z90BmVYbQW5l4mM+vP+C9qge/U3SlQnTiYZx4QSlcrAf5Y9LZai7xUM+O
ZmXu7oGGV4sS+VY8+P9z9uyM6QFna2Nl57oENJfMOffG92BfCB/fBeEEnE/J
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.7999999836734695}, {-0.006, 0.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6648182699660597`*^9, 3.664818281137476*^9}, {
   3.6648185174241858`*^9, 3.664818529887978*^9}, 3.6648246674671783`*^9, 
   3.6648798629133453`*^9, 3.664880020398306*^9, 3.664890417769418*^9, 
   3.6649261345611343`*^9, 3.664926259624283*^9, 3.6649269952170353`*^9, 
   3.664927357700281*^9, 3.664927787160233*^9, 3.664928024165888*^9, 
   3.664967637304859*^9, 3.665074642243607*^9, 3.665109379398325*^9, 
   3.665109744121829*^9, 3.665251100934799*^9, 3.665260842067931*^9, 
   3.674103639425066*^9, 3.674104123391981*^9, 3.688109796106092*^9, 
   3.688206666174795*^9, 3.68820800763618*^9, 3.688208049932029*^9, 
   3.688294398292633*^9, 3.6882952860692043`*^9, 3.688295543801955*^9, 
   3.688360645457016*^9, 3.688362867094575*^9, 3.6883753324961243`*^9, 
   3.688377101136601*^9, 3.688377185830686*^9, 3.688382785857637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"duz", "[", "r", "]"}], ",", 
      RowBox[{"Fdu", "[", "r", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.006"}], ",", "0.01"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6648185352175093`*^9, 3.6648185770011187`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3k4VQ8TVlIULaKyZQ3ZsrfhRVTILkTZsl8kSbZwr1JECS22kkSp0EIq
XJWfJMm+XEvorkiSpKi+8/1z7/M+c2bOzDvvzDxH2uuYnc9SLi6uBuLn//8f
4weMjks24HdcYE14ZiRVqor7X8x4A/p3f42KND5FzRtWpwx+a0TumRB9wTMn
qK43Kzx4vjZBl+fhie/Lj1HlWjebR2x8j0OZ5+//XOtDtShd9+yr6AcIWbna
Puh2oJ6enVF7ZPYRpY1P2mIcdRBFWk+WeNYG44FfZsr6HvB6cuwBs6odTRtF
N7LWkGCjuWfIvqUDAaZhGmktYShOFrjt3tYBra2tWvGfwvBnpNef1NWBoip/
19CZMJReCpqlDHZg9OHPzFqRE1j25cqqx5Md0DcV000LOYFnJeydawU6wZ20
c/LcxnBslrh4tcWyE5yUlTdqvE8iPNz5cJ9tJyyvvckQizqJ9+9lZOgHO3H/
Q9f+E2knERn97OHCkU482TBsz191Eh29Iw1KIZ3YW17gObI8AkkZWt/PX+zE
qaIUvcniCHxZ0W9t+rETCk7P/jj2nIKU3vM7JZ2dMAyu8snnnIJdaPYCX18n
VphZL3QvnkJ136GS1pFOyGltN5KQjQTlHu2v00wnzizo6yw5FokNFoMPA4W7
EPFw073ly6JgcPHTqnTXLnSLpG3cJxON0NdUzxn3LgRtyviUrxWN23M3nzl4
d2E7+5T3Z5No8Lp7HBUJ7sLHwVbdXX7R6Ng2+qIwrgsSJrwL6+9Hw7d9LKDy
Vhc6sz7tEFSMwSUh5lsaqwtO1FWa3IKxmPkSW6Y42YVomR/PmiVj4fh2/ZWI
6S6wIo5dIqvGQjzayEvwVxfKcu4dq90fi7uf8hbNVnbjtrtu/rG4WNSX2ms8
V+nGavXPyS2sWHwzfJVz7Xg3NvueTXlXdhoOos5kxslu7GiLCq16cRrV36f8
tKK7MSf5Tyur8TTiisV1PlK60Th7kCwzfBor+SM/Ls/qhsZ6v/AL/HGQ6VVb
FlHVjVmJB5XXfeNgH5wX7LDQjadGAcen18Rjrc0uH+d/3QievPjCUyQerZp9
hw9z90BmVYbQW5l4mM+vP+C9qge/U3SlQnTiYZx4QSlcrAf5Y9LZai7xUM+O
ZmXu7oGGV4sS+VY8+P9z9uyM6QFna2Nl57oENJfMOffG92BfCB/fBeEEnE/J
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Gm/zzMUW/VNGbeqqBFf4FROxiFz8e/hOaCVIlfBYrmjyuJuL251vX4jlqxJ7
fh/O5yzMRXsqB6+suBqR+3XnZe3FXMzjxvozS2pEXh/zrvrLb5C0rGKg/+oE
wWNy7AF/whsc1Dr7u3v8BOHd6c/l/JS0C7ylywlqEPKtc79Ym96geOCZj2ek
BlFQPVyvuiEP52KUAhuMThJFOW+p5ffzUDqr158xd4rgl/k5zPkiD6qlMWt/
iGsSvs/3GViX5iE9I2OZ1UiTOJz5VHFpJA+ztqs57Io1iZL78esUd+RjZJd+
TVugFiEo8DEs+mA+Tp1gFvmRrUUExK3/0aeRj4SGkfkPA1rEwMZTFEkz0i4c
V2a8VptQvH1pyI+aj4HHH37fVtAmHqwn9OoD8/Hs5836bQ7axGL0Yg1/TD7M
LvMl60dpE+8vn39VmJMPC8r5OacWbUKU5ZU4W0U+Hn30N9SZ1yaCw6bjjT7m
oyjx2sVGntOEUqBt6Pfv+TjmIPHukslpotxTR3e/QgH2ccjmCfefJiosdi+8
rC7AhMGb6icfdIgby+HPuzoLUHT5TOdZhg5hkt5nvzRRANZ0/diPTGeIr/Sr
HdqshWjfxreDOHCGED7PyJ9RL4TTSQfZ30lnCJ+rj30l6wpRGpry8KahLgGp
v3v0egpRv/X7nQyqLrG2xWDKj1GIM5+HAy6E6RKPeFjM6lcXISH678HT2bpE
60M7BeeTRdDslxiYXdIlJAs2Lz1uKEKRiLORgbYe8d3kYsGHviLMitp5uxrp
EeV/mt2+TxdhSv/oK2drPcIYwcOqa4rxZ4slC6enHhHZNFA+plmMqtJnUyJ3
9IghWmKE2AfSThDRSe16xNNLcwonB4sRQl0M3tqnR3jvOvnN43Mx1Jxlc++O
6hFr3H45lK8rgY+4qu3hWT3i0H9G6tanSxDDd/thzFp9IpaThz25pQTZrxav
lEKfaN5euSI6WoI0zVszDzX0CXZFr9+p8yWwk7rD4q6jT4Q6t37K2PQWSWmt
Kj0W+oQbcb052/wtpFNvPhr30SeedSvUypx7i9onTDoI0icmPk+X5QS/RUdp
0b2bEfqEheDJ13lpb5Hwr5vBdEuf0Dy/6u47+ltw8Wvo6mXpE5ev5l1X+u8t
IkYOhZ98qU9UPLS/VM7xDlwRygcO5OkTS/ncwSrC78DhZzrNX6JPHGkifKqk
36FWIVhovkyf8KF5uKsfe4d97X5U8Sp94vWvzc51Z96hbu27T2tr9YmZ9S02
p+zewWbdV+psvT6xa3uwadP5d3j8LHayuUmfcFCQ1jt96R3wdofR0xZ94qHu
wKnWuHcY2LQ7P7Rdn+ANPqLYUfwOhcyRuyV79AmW7h+iA8vvcFnRyzpiTJ9Q
/vyYz2rDe2TyRebYTOoTAcyGXCNb32PDPEu1ypQ+MS/7ZmVM7T3OLettFfiq
T4xGuY9/in6P6h9CPJJ/9Anhh6KD55Lfo1I9bVJjSZ8wyf/Q+fXlexhr3j3j
vaJPtI7url1oew96U0XHNzYDovQI4+kfvlLISB1lKdpkQPw+E58eJFEKh/u7
fxkJGBDyTur3l4+UIsD7sjGHiAGRfSfjOrNVKRZKQ1VytxkQSTM27msySnFL
NkJ2q7wB0cXE5XwjvxTGzq3jIYcNiA0CZTactaXQLI/q/e+oARGlJqK3cboU
VruOUNVPGBAXU3rlhPaUoUj//j1LcwPC+6S9hybKcK1ng+lDGwPC69vM8wC9
MpQNEIPMjgaE26l/Wwe8y2A199/QIU8DwuHHjg3JxWXok/7zwvWqAWGXlqP1
oaEMO2+5OQ/dNCBstI5E/e0vw8INLy3/OAPCPF172XKpDELTxmpyGQaE3mnv
z6LHy7GerZ7eQBgQZ/77u0vHoBwVO+f7n9QbENoZVxxCzpaD5x+TXUGbAaHx
O6l/+Eo5Us+y9VBpBsSxTKI+takcxGSjiR6rIaGoq7mqbbAcjZn29Z2chsSR
xQ7llS/luHXkiFysgCFxQI9RaLuBgCW1JbtY2pCQWlqfudWIgH1HA++giSEh
+TRhVM+JwGuea+oqDobEToOtIhG+BHpUh3vo7obE1mfyd8eSCJQzXez9ecWQ
EDCyCM8YJr/vvn5Q7a0hwbsy8b5jlgDNV8qlts6QWNNdFMTMVAGTHcVnb3cZ
EuzhKsX7N1bg8P7q8//mDYkoY7buRqEKPDc1s36yYkiwSjd9s99WATHB1Q2J
XEbEJabb3ItSFdhq0pvas9mIYOkx3HNXvgJ7fva0OsgaEREvBE9LKVUgX1s+
yl/ViGCKGKZWqVcg9PXY9hELI2JZ2uXJN+MKpJjEzO+PMSJ+RwSKGvpXoEZt
Z0b7vBExJ/toLW9ZBXrT6v7FVhgTO/h9tARrK/DV+KcC+o0Js38a10VbKrCi
cz+Q+ZsxUdH6Zc3O4QrEPyhcW7bdhLjreWTNoeUKvK7ytPx61YQ48KaN3exY
JYIPn6MIG5gSlPsZJ61OVGIhJ7HZ+5wpkRJx8aqdTiX2Va3b9+GyKcFmIMJO
ta5EiAG++xabEj3fnFcHhlTC7TCrXaKoGeF/4B9rSlklXvy9EjwxaUa8FP2o
nl5bCaGP3VlPls0IGmvm5cwWklPQZMhvTmh2a7K+Gq6ExvPuRY+T5oSwb/yq
8uVKOJUd/R3yzJwoK5ZhoR2rAs+0Q4aCiQXxLW3l+OSJKnT3HyhkUC2IXdc6
IqZ1qrCzc2uXR4gFccvMn3nBugqBW+4vbci0IOz+VDOxhFZBlKHlGDdnQbAc
tVzZXl6FQ9lv5pPCLInZIXPb7roqWGwLqnS8a0kMhpoRUW1VeLbuFBfrE0ui
oMo47BOtCvOB9h2ljZaEs5beSs6qapQ11zPzbbQimsxPrChoVsPo+Nop3UQr
ouivmu1n/Wq42jX2az21Ih4/VCVSLKoRxWe/TbDYiggeQ9jKuWow37h9bneP
FbGHqrhSc6saVx9vHtzBY03c8d+7ottVjclbWYKeEdZEqPAeW+bhahRmvGqK
umVNuJbKEHn0ajidd3jpmWxNqDJJhfH9V43Ua1qFBQXWxI+rO1YGhGrwJ1Vz
YA3dmjBLFFpxsq0Bx82Aj5HHbQh1BUFbAUoNwC61TlDHhtg/yE80eNVA9xdT
XaiZDbFWjDdMOrIGLrqUqXIPG6I0i2tlPrMGOQXs35eSbIhnpzhtM17VoDml
R3fjYxsifmYdYVhUg5dyZqHfX9oQHnvWhBXV10D08lt/sQobYmvRqpWgmRp8
uzy6xDFpQ1S5ckfc/1aDL2EGxPxnG8JRbPOq4sUa7BaPTHj+nTz/2iH2b2tr
cbBCc9VNFltC65ha9IZNtZj+tthXtMaW+LKgu05WpBZPDyar5XLbEvssqRso
0rXYYDxoyr3FlujY4HvninwtUp3jjvvusCV8aiI3PT5aC6ZvHirZUrZEiWyK
wIh2LdbS3i0HHrIlwNQmZuRWi9fLXL8LtG0JWsHgo/M+tbCsOrA+Qs+WiKRO
b78dXAv3LtpBQWNboq6DWbIpphbRWv80s6xtCcpVruypuFr4T1zzSbG3JdYq
iciwPaxFvHzzASsnW+LMkwP7VF7VYtvZ178OudkS8+bH86wLa+HrRzmi72lL
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
ikNIuCv5/hUPaYU/GKejWG6b8xW/cFT0fRyrmKRjn6blwnmvcDRvHsvk/ERH
9Fvq93J7sv6frkg9XSDzXbopUlw1HIJta+Offaejrj5n0lAxHNq/+Fae/yTz
+e7dHiuyH+Wpy3S+/EOH+5Y9T76Kk/1gzCwoj5kBd+aMF03LYSjgcKTnr2JA
ZpvLhObnMEzt9dQtZGOg5GLfkmdfGM6EXtlesoaBRTWxTblvwiAqkvehbCMD
bU4DEYu2YdBTLTtIbGJgC1tq0AutMFyiNqRV8DHA/7O5k/lgGGaKRy5UCzFQ
Ztw8/JAjDCVG60QbxRlIYpldf+tFKIxuObp17WfA6kxm8A5aCK4VevZ0yzOg
Vqz7krc2BO+HAlV6DzJw/eWk/NPnIdgmfYd3QIGBmSap6LzzIZivLysdPc5A
LlHDZL0cjB1zDbvG1BhIvWCeaTEaDFP+rtjxEww0fEwQ/VMRjHLHGUe6JgMh
IucaBS4FI4ZZgPOzPgMSLfyNPSzBqJDc5vfFkIH5dzfrusn5/F1XduyrMRmv
lxufT0UQLFLVCufNGQitrqDfDA7CrdozYt8sGaiWcF69xiIIlV/Mo79bM8A5
0VG07XAQJI96Wf+yZ8Dkqz3b/vlAWDkE1f93loEPqwpUdzYH4nZ01P4/TgzI
M8meKX4aiKrcO8mLLgwcqXP8jxEZiF+9KWxLVAbCFb5zFlgHYvfKU8/lcwzM
HvOy33KEPG9Xfv8/dwac80LoHv8CEKtTrsbkxcAlH7ddjpUBqPZpfMXszYBg
7LGC01cC4Hh91HaPDwNKngYb9p0IwOr0nxstfRn4FfdOcNvqAGh9EPctCGTg
2l3Bozw3/NEuHqjscomBuxT+EdV0Pwy1SrU1xzHAtNH7IWP+IkInVSL+JDCw
wW6Dy8+yixBbNJHfdZ+B1R66C3dvXITDzkuJYQ8ZMMzUPm0heRHTQYO2clkM
sN2EkqKLD35IxswnFjPgSHNnVfnujQTljIyatwxYiN+wD6r1xmGjEqOF9+T3
9x/cqU0k9+OwyRKtCgZWrd/h6azkDdH4RVe/KrK+fk5tecXljbJs7s2ZNWT8
P/ZnjdPIfb9HKWK5gYExri9YvHweGZ8N5KU+kPkTyjJqJvd7NWYq3aSFgT0C
gSfcJc9jkj8s8VIbA9YrMZu6/3ghSiZeM/cjqe/U7vMFY16QVH3xd6iTgfi7
RsuddV5oNK18taaHfC8XhL3dn3nB1b3X9lAfA72F5T1Poryw/tLXjWcHSH0v
XZbLsPdCTtKqmttDDCiueR1zlfx/RjdHyLd0hKwHr4gvgVxeuNt/YoBvggFi
p3EB7DxxYM4yRpXOAN/JDV8PLXqgm9Vb2XOKgXdX5M553/aA4L7UjIbPDPTn
tZwfeemOdycKjH5+ZSBTx0Dg8UF3WFo2rd42z4CHjblS1zs3pEb9cg36wUCz
Agcy35/DjuEz8nuWGZA98aCMN42KC37TXw+uMNByO/fMc1EqqjZGPjvGPAUj
gQbWrfcpsNMo3KzDNgWtBeYvmbddkPxahMONcwrONh2LjwOcMKNZWHVhwxQS
Nu/gGPvhiCOTZ0KCNk7hjOoVg3EvR/QIRn67zjeFk23B2dvczoIncnro+eYp
FEd5v9/vaw970cjEN2JTCF32YpP8Z4fcIhGDt+JTmGe+mVlzzQ4reoXrK7dP
4W8mX1K5hB3OfD5T37BzCrFezx7lxNni4ZXpiHaJKRiHuzHr0GzwRSxSqW/3
FBrPB1Fk5WwQbVT4Zkp2CiJD0bkc01bomz3jNrd3Cq9P3Kl+pW2FXdHTu/7b
T8Z34fvxTwWWqCkTSVl9aAryf3sn/RItwCQRGbVTmYxvNjZMNckMupUix2VV
pnApc/j5p+1mSLUs/HtAdQqnxzPZ2/NNoRQ77aWuMYUrvXmVOaMm8PtzxvLs
mSk0eMpedTMxRt29ab5zelP4cvWcf/1PI/DuiWz3NphCuBSqlxKNkOdQeCLS
ZArDWzkdnk0aYvaDyL5HNlO4Ycr1YizFAMecC2ee2U3B/kS17lc9A8Qw6T7J
dZgC30S/xmF2A0gdjBSucJ7ClMpdySOB+nBOnWYd9ZhCx5rF9A9+eig8Ekkw
vKagvBhFPD2qB9b/VWju8VCmbxinrXXoREQ5M2McZqaEJgkXGwrjlLYklG03
hyJhUmqjg6QTtaVFhBBCUklphXYLRaUWJSUd3udlZhxXOuD3/v6+vs99fe77
ue7nr+e5Zpw0ioJhnYMJR9YLeXKeAxO7mPq17jdj9T3RHXnzpVY8M/+ukWXe
Ce74O6DEX+MAhQ/rlH54oeuOUteLb9UPUQgbVb7sWS9EHDv547wkCg9muO7O
VhBCrdN/SD6FAiveYum5K65gHBX+y6ageF/zQa3qaizjfTk+nMPkw4E/crZh
FXQWSucM5lE48ufyEfXIVRAPd6j2F1I4i8aw003OSC68oveunEJ5xBa+e5QT
Gmb7WLXUUkhZXV92L+4nFH9dVdNcRyGWz3pjPO8npFI2do0NFM7nnusaLnRA
YD3H8f4Dxr9giY1aoz2cyjUf1jVSYPdn6XDW2oOXqeRa20xhhr99utwdQPXo
jJaaxxS+fjI+t15ih28xXz1vt1J43YHuw0F26A0aaKt6SuG9oxlLpdMWzR4f
fr7RRmGa3+sSGW9b/GncuvFqO4XKRYOnhl1sYPk6N7jgDYV7P99Xk/W1hmZT
Wl9eD4WMLvcO33fLMa3qeHhOL9P/toJx2fDleJoiis78xMzXzzHc4bgVwle6
xJ+WUuC5Th5zfC/AWjO7aSmDFJLHymrH9gtgo22ReGKYwt45NlFiLQEUP2sd
TxqjMGS+LyRz01IUlgym/T5J4ZSBy2T7lAW+JQ4GFcoQWJrnslMKLeAVNMh7
Mo0g7HpLX48no6sPNujJEVQ8ovesLjGH18jASRcFgpMr973YsNEcha0DvlEz
CYykxsPf5jB64oD0/lyClCy1DPr3JSjYPHBbrEzw7uDXm2bLl+DrioHD81UJ
gvztqqfGzJA/LNUIXkBgU8b9gxdnhi8t0o8pGgR2M3ZPJMIMHsXSimotgr/m
he0MlGP0TVJnRX2CLh1FCznbxfBYIVW2YBHU1ObWnu9ahHw16euNhgQzhUr5
qvGL8GVIcvmwEUHj5fGYPUaL4NEiiSozIdhROdFQ/4KPS0US23YuQYGwQZc+
wsf4IYn8FJ9AZT2t1W/LR561JNvLnECAPrvwOzx8ni8J3WNJsOKNQtKHeB6E
Q2LLPAHB/Ej1KrYrD3mPxVPNVgS+/94MMFnI8JfFzSPWhHl3kuZKxVwID4nP
adky88oyC4j4h4u8QPFmJxC8qlvTWZDHxeflYm6EA8Fd69PzUg8z/HzxWNpK
gs39p7KMt3GRO9hff8+JIOq6VHHbOi7GHvWfIKsI0qJ9xGucGf5y/3plV4Kd
szY/77Jm+IP9BtZCgpuBt7xlLRk+oF/yiwfBdLfv47VLGH55f/VxL4IfK5/5
KTF6rmr/oRtrmPuJeSU/xJwfG+jz6F5LUBt1+6w/U9/tUd/CH9cT3D+pnOrB
+OcU9n1YtIFgQWHiiYYwLv470Hd1/UaC3y5Ua944xIVrQF9cQgDBGm/3Jzq5
XFy06nMq3kRwpOCT1WQDF6MqfUptQQRFe4z63GmGH6C7vm4hEJVXxiio8nCx
mS5kbSWIYHPDeCt5GC2gdwpDCIR3Lfwrd/HgeoC2EYURtK3b8TqtnOH9abns
7QQxLxL2/dvH8MvotgcRBMPzZ7aGcvlwUaGzBiIJIitslUrc+MiWkpAF0QSK
qR8E+qp8jDQRCwcRwdv3Fy+UdvOwuoBMhsYSjOmuIquLeMhKIE1n9hCsrb5W
NxzNw/BGcrZmL8Gk3q3HhfaMPo+Yzk5g8mIxqKHXzcVwPLWu4ijBylmlT77o
M/2+DTO9cYygX2Nre9K4KT5DOnHrBEHouMmRT09M8X1qNP9eKsGukFlTigdM
8WPCtJHWP5n5qdEm+WITyPckPmjLIJiTli3c1mSCmfYKGe0XCDiizrWSQhMo
ySg5vMkhGEhXs1T/1QSaCdopkiImj7GhslWfjKHTk/PLUAmz72IpS77JGHr2
bMF/pUw97+iQqSvG4Mhwu79XEFSZV4naoo1hlmDFnXWbwMzrWUytojHMe2om
59Yw+bD7FicZMsJSe7Sp/EXwpTT77ZWXRrCWcd6jWU/Q6pPS+6jECI4JPg9N
m8j//6fnCX2M4NzTnrHoEYF1WXBkiZ0RXOz9IsxbGL/iyc4DpkbwkAmab/2M
2W9t5/QzPxjBNyFii8tLgn1iqnjgDgd+PUMC9y6Cwxs6DVqLOQiwFyl6dxNM
BC+LVkrn4BeZfdd83xHkX9tffXM3B+EJyVPBNMHWoTdFAhsOIntmPd/WTzC+
ZaiC4nMQZZ9auENCcEpe8viTLge7Zc67xw4R9C7uDvx7OgcHE/Izj3whsBpy
r614Zoi0hHvLChRo3J31Ul4iMsSmlyyFjzNpfC54KPoeaghj86Ov2HNoXL18
6bgg0BB33nv9nj+PxnmD76c0VxnirXNvwyVNGluKFkzaaTD87BkeeXwaMonu
LZkNbAz9Fqrbu5jGgb7QkpRbbNypbRnUN6dxuuLFpZ2lbLhHpv2RK6DheyG8
cfAcG1HPjV7mgEZ9flrvzmA2VvBOlPQ40HhaN7d0+0Y2picO7tVzpCG6neS2
zJONNMFtnZzVNI7uF9I8ARs16a6/XvSmQSmolCyWZePwcPnStz40mu9uZ5aB
BQ83FTnddTScGkX2Mh9ZUM+P7Qz0ZfgVv2rsaGeh53tXcbYfjf08TXfrf1go
/tl+7xt/Gh1/yY8uSGMhqjxfqLOJRj5/5tOOrSxM3xw+kLWFxrFpo0em5Fho
qX5W1/0bjQzVMuXwTgOkKQvOaIfQmLtJb8nfRQYwuT9pmbWdxsTYq5NWLgbw
4KTGXRDRkBYZ+u9N1od6/Kjb61gaZSNLTWM36KOnw1dbK45GhambcIeJPqKS
9esy99OIuWUiDmjSw3lx5YzMJBpb622sdinoYbOTeserZBqlD0eSeNd1YZq9
t0jjBI0S4ewHx3x0cdfT0S0jlUbVoxDRjbM6SCwq0np1hkayrpdz8lIdeMjO
li48RyMxWH/iVLs21P123ttwnkau11WX5lht9FT+m5qeTqM96XEXFmrjfygs
jNw=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 0.7999999836734695}, {-0.006, 0.01}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"duz", "(", "r", ")"}], 
       RowBox[{"Fdu", "(", "r", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.664818569645772*^9, 3.664818578570127*^9}, 
   3.664824669384171*^9, 3.6648798630008574`*^9, 3.664880020485265*^9, 
   3.66489041790114*^9, 3.6649261346151114`*^9, 3.66492625977848*^9, 
   3.664926996385812*^9, 3.6649273577913027`*^9, 3.664927787401332*^9, 
   3.664928024300638*^9, 3.664967637395701*^9, 3.6650746424965982`*^9, 
   3.665109379498983*^9, 3.665109744220635*^9, 3.665251101105641*^9, 
   3.6652608422451963`*^9, 3.674103639508443*^9, 3.674104123507769*^9, 
   3.6881097963826323`*^9, 3.688206666452648*^9, 3.6882080077771606`*^9, 
   3.68820805007578*^9, 3.688294398378874*^9, 3.6882952861569557`*^9, 
   3.688295543889655*^9, 3.688360645592866*^9, 3.688362888845408*^9, 
   3.688375332613817*^9, 3.688377101245216*^9, 3.688377185941271*^9, 
   3.68838278599454*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "error", " ", "on", " ", "vSZ16", " ", "sound", " ", 
   "speed", " ", "profile"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664818738940981*^9, 3.664818751031769*^9}, {
   3.664907315570244*^9, 3.664907317677142*^9}, 3.688362931948598*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dduz", "[", "r_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Fuc", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzc", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fun", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzn", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fuo", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzo", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fune", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzne", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fumg", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzmg", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fusi", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzsi", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fus", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzs", "^", "2"}]}], "+", 
     RowBox[{
      RowBox[{
       RowBox[{"Fufe", "[", "r", "]"}], "^", "2"}], "*", 
      RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664818926704767*^9, 3.664819048067452*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Export", " ", "sound", " ", "speed", " ", "response", " ", "with", " ", 
    "1", " ", "sigma", " ", "and", " ", "2", " ", "sigma", " ", "errorbars"}],
    ",", " ", 
   RowBox[{"plot", " ", "using", " ", "soundzplotter"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.664819292741666*^9, 3.664819312959733*^9}, {
  3.664911839222496*^9, 3.664911842302311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soundz", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and \
plots/Data/soundz.dat\>\"", ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6648193219288073`*^9, 3.664819365623274*^9}, 
   3.6648194222679453`*^9, 3.664925454784778*^9, 3.664925492630127*^9, 
   3.66492701886849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"soundz", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"duz", "[", 
           RowBox[{"0.001", "*", "i"}], "]"}], "]"}], ",", "5"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"duz", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"dduz", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "5"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"duz", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"dduz", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "5"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"duz", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"2", "*", 
            RowBox[{"dduz", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "5"}], "]"}],
        ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"duz", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"2", "*", 
            RowBox[{"dduz", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "5"}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.664819497365739*^9, 3.664819523539339*^9}, {
   3.6648196421875353`*^9, 3.664819689899868*^9}, 3.66481977477664*^9, 
   3.664820655943725*^9, {3.664820735531296*^9, 3.664820809699087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "soundz", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.66481969552273*^9, 3.6648196990936537`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Import", " ", "model", " ", "uncertainty"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688363099085688*^9, 3.688363101193986*^9}, {
  3.688363138705789*^9, 3.688363149402807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"modunc", "=", 
   RowBox[{
   "Import", "[", 
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and \
plots/Data/modunc.dat\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.688363923723268*^9, 3.68836397751201*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fmodunc", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"modunc", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.688363982490262*^9, 3.6883639905279837`*^9}, 
   3.68836402795203*^9, {3.688364296004335*^9, 3.688364297179594*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", " ", "model", " ", "uncertainty"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688364155309656*^9, 3.688364160157052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Fmodunc", "[", "r", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Fmodunc", "[", "r", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.005"}], ",", "0.015"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688364162856628*^9, 3.688364193437934*^9}, {
  3.688364226141486*^9, 3.688364283416395*^9}, {3.6883646358821898`*^9, 
  3.6883646480663633`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
ezLWZXc6vm+zMx4WfZf5zsmEx+jZvdw2WWDNyRfZ1RrFOOXbUvtKYYLj2h6y
qGopPLv491I18UHNuLU2CR3l+F2ld2HJdhFKgrQMuu+9APUJlhcCOkmga+td
GqB/C7o6SwN6RIrQGpwSF34wH8OrM+KVs03wOXrI3g23ZZDIOwZ9lkugOTb4
5Xr7Glh7rTBOuWWLy9frZGNdFOjX3OnT0KU20D2R1iAaGYoFS53HWwj3SVej
0q1oUCx26Rk9TW4TIXfZy2uH95XB68XK0zd07DHqRueMwzFy7Bqcb2XYzxO5
hh0SYlcl4VmKq8W8Yy7Y7umc8j61CgNTNa/lTJag7UOaapcMIc9mfp551Fjo
n7SZoVkFMugU79MsEebt1JJXlamyahSpOrzsUSaCq+uLToMa5dj9brbjVb/F
aHJVnH60TYGkjV9OlklsYBC+LarvkVro3tjW266/PX6cHF1+fWoyrpgVLuoX
4YxbJWqLz+pnYnL+/gTHsxaoGr123K12xfAT/3Y/I+S3yVV52r8KKXyVooZq
WvhA59TcG7fbqhHXOGRn4E0RovYauw5Zcx4vxeGy4B4SXFSaO/PVlTh01l/a
XF0ogvManLnnk4/H0i0LLwv7X1lGP7mDZQ38sh3HGkyyQ6Tt7ZaSK3LkRJ0a
tX2vJxSzEuzjM2VYde76uLByIQ8bFMv7bFBgtXXZrkgrG/z5NVTcf0gxmjJP
ZpRomiI8dNazQ7H5OCXv0Vci3G/bUMXDE0tq0PXXDntbA+H+HT2TYm18Fvmp
qtvEwnm9PlV/6E1oGVSava1Lx9vjbpvnEaN4OSaFd1nVescDfzK9z1jFJcFi
ROCzteNc8PPRiO2h2VUwqVwZ5Gsm3P9z6uodcqVIovx5C8yF8zFLLX/3VobE
ve1P/O//ZyrvDioo+i2H4bMhuvpiJ1i3U2/Q+a8WO7R/r3wywR77hmok3NMc
j9rTExZ0FfL/5/Ju3iOWhMDjyI6wcKH/s7xqxvWrugzZiAnBP3LFMNJfPLOx
QzR6Wjq91psmRrfAvU56QXcwt5248PkZbxxuC4wuKryPigJHr4PFHsgdnPZP
90MSDl/VV1kkd0a6b4+gc00Z+LQx7/X+Cda49C5m6Kvm5zgx/s49nc8W0HZ2
GnLjVxZMlZXPLDxrjtPnXo/bo5eDdM1V/+qDzLBx3NfHMYPzEPpmRr+TO0zR
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
TNvTvUiY/wb/MUtZLEG+mroi8I0U6wMWxvdb4IOd/fVX3PxVjZrmv+1THoiw
L2ug8feL53D1cFg/FeHvac2oVdaYG4cdWRny7rXC/Kt60mBjXBkMGz8fXuNg
j0tutZ3DVynQZ2vk+Y52Nni1cumdSb2L8WnOlcuF30wwpEtYvMvJfARXL154
IcMEoqx+hwMca9C2t6FDxFFb5D7u758UK8fE9AqHWCXhfAa7KfJeydBB9iRP
/kb4+X4fk6yb5Miw2/J39ZjFuPt2358jIzOh76jz4NR+C5h06qTd2rEYgwY+
HndPuE8LHi7sefdfNVZ/UT6sc0WE7ZqqEY/S4qCmd+Xc+Cyh37IVk+ZsUmCy
8ZzcMgsbZOr2yzFJyMf1Ud716kJ+XZoQvOmcWw06vg+I8NCxhX0vf6OVCXLY
XuzlNW+/B7QKK24+y6lCSHTadI0FEjTtv6zePl+KLks7dzIU7u/y6MrR0lIZ
0o+Ur92UK0Fw5vSgdi3CvNaypPtNYyf0XrKOXEJrsWhi77TSqfZgnouY5yLm
uYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5
iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmI
eS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5
LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHku
Yp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5i
nouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKe
i5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6L
mOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY
5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jn
Iua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci
5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLm
uYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5
iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmI
eS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5
LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHku
Yp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5i
nouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKe
i5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6L
mOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY
5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jn
Iua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci
5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLm
uYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5
iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmI
eS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5
LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHku
Yp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5i
nouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKe
i5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6L
mOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY
5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jn
Iua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci
5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLm
uYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5
iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmI
eS5inouY5yLmuYh5LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5
LmKei5jnIua5iHkuYp6LmOci5rmIeS5inouY5yLmuYh5LmKe6//5FaX/8/F/
fdf/72v+/f8DnRuT/Q==
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1nf8jWUcxvHzM0OZJSOErOw9s5XsTVmpCNmVVdmkVBSVTZkt2klIIRr2
KLvsFsom9P7qj8/ruq7v/Zz7Oc9939/nnLwP923RJ1kikUhC52T/68oUicQq
lOE7qn2jWJvWpu/gbn6PsaL8ZGSRn5dXI5M8BJfQQh6At3EZD6sdQmm+Ofpj
MS6hi/qvKMXXom+jiHl3y63pZ3IFejdtQF+lmel44xX42cgtfyVn5AfjIprJ
PyIXPxYpXdNPXoSLeEjtF5Tkn8MqZJAH4QKayn2xEBdijdQOogT/M4rwryCT
ecfJbekXcmVanjams2guutL4x3xZPj0diPNoov4D7uDHIIXxPvICnEcntQMo
zncw9jVfi9aM56OLaWH6k/HC/CRklMfKK3CL/BTOxfeR2xlbwVejVeL+9C2a
j35v/BO+HJ+TjkZyvrf6fJyLM6G2H8X4MfgSN8tP4iwayd8hBz8KyXy+l1yK
n4ps8jy5JV0aa0/PyvfSDvI+FJVr0EUopL5LLsRPRAZ5tLwc6eQncAYN5cfx
Fs6gvdreOK98A/TEm/gHD6rviTMW15lvNV+TVo89pwtpQbrT+Kd8eb4gfRnp
+VHq5fiZuCP2XE7LD8A/uF/egOz8SCS5poc8F3/jAbXdsW98faxHNnlENKBr
u5OS/Bu4XZ4jL4lzx5/m69F28s+xPvE8cfb5GvQeugAF+B3GCvAv4RZ5pLwM
aeT++Bv3yY9hNk7FGVb7KZ4/9gTdMAsnUdccbYztivnjOeRVfHVajc7HXfx2
Y3fxL+JmeYT8OW6S++E06sldMRN/RZ+r7YzP8/mRD3lxJ/Igd/Rx9El8DzyK
GfgTrXxuB3Lyw/EZUsc+uHdfegp14qzSqmqV6ZvIy3+rfjs/HNfxiDwdf8QZ
lbcjBz8szgJSyX1wErXjvYZp+B0t1LYhe+xnzIuseDb6CimN9cZf0cPyuhjn
h+EausQ60Yq+V4k40/R1mpVOjfnp+/EuoL/JzfmtuI3fFuvGT0A648/E+wYp
5F74M864/BDewAk0U9uCW/ksyIxM0XvojNdxHE1dszneK/zW2Bv+BaR1n6fl
NnSZXImWjXcAnRH7QT8y/hFfhk9OH8cfcWbU1+I2/llcRSf5NRxDE3lT9Ds/
FB9Ga8g98TvukTtiCo6isdrG6E++GjpgMo6gkfqP0QP8EHyAJLkHfoszIa/B
rfwz+Bft5eL0tVjf+M2J9abvycXoYbkh/0OccX5LnFf+eaQxPlhemkjc+FHt
jhOoEr2KV3AIDdS+j/3i00ZfRo+gcvQWihmbEvtjvknyu3xR/le+Dr1f/g6p
5ZWxJmpV6Tzk5zdH//DjcZM8SF6C69Hzasdjz/h2mIhfUF9tA1LxFdEWL+Mg
7lNfj5T8puhL/rm4v7kHymX46dEvcU6jL+mHcml6Leam3eRjqCBXonNxZ/zP
iDPIP40raCO/hAO4V/4W/pYknsJ7uIquakdRnm+NF7Ef9dTWITm/Ebn5cfFM
7vOkXJqfFn0qvxvngS/F/xvPSB+Vj6CcvDz2Ta0inYM88RscvcIPxWW0kidg
H+rKa5NuvMYTT+AdXMEjaodRlm+JF7A39lFtDf4DU+cVeA==
        "]]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1XfcjWUcx/HHQ2kpJaLIHtmkYZS998zeo0IiIyl771Wys0eK7JlVQpGi
lIgyQ6KUUdH79+qPz+v7+37u65znnHNf9/Vkbt2lziuJCQkJSdDCMA6bkiUk
bEZzcyb5XtKEhGdxVl+B8SjFb+MaIjkOJP7/+sz8HL0ozukf4QXusN4Fj+NN
/R85GVPMj2CCdaXldm6+bCTHyBS4y9xT/iXH4itr2+gnzX2QGy25LNxcczH8
oq/ERJThd3CNcTe+5lohKz9PL47z+io05L7TX0VGvKX/K9/GJNfL6jvNC2ST
+DzyfnyEe/Re8poch4PWt9VPxXdGHrTmsnHzzSVwQV+NyfGdkN21BfxzuKiv
wdsox3/CNcW9OMS1407HZ0Re9NcT8K55mnwUba3LIRdy78nn5fD4TfGra13l
FW4E1urvxPuiPTrgReS0ZpHrJXFJX4cpKM9/yjXDffgmXsedMfdFPrzE5eIW
m0vF3zHfjQ/xm2vd5O/8SKzXG+nfm7siE97lKnC7zM2RAt9yL+MJfoleGpf1
DZiKjsjt2lK+DK7oGzENFfnPuBa4H4e5TsjDv6+Xxe/xDKAxd0TvhsyYzlXi
dsd+i3tsfiAwvy6vyyVyfOwXmRqrYj/FbynP8v2QH525vNwyczn8oW/GDMQD
2QWvxv1BPus+sKY8rupbMBOV+T1cK6TE93G/uHOxF1AgPjuXP35vc4X4nWOf
Yjn+dO01+Qe/WI6KZ1I+jI9dayJ/4F5DFsziqnB7Yx/jQRyJ90B39EBPFIj3
d60i/tK3Yjaq8p9zbfAQfuB6oSC/Qq+Ea/o2NOWO6t2RNfaTfku+E3vCnDbO
JeuqyS+4hbHXZSoc5V9HoXgu9cq4rm/HHPTGG+iDN/EW+qIf+mMACnvtSq+r
ghv6DsxFdX4f1w4P4xj3EveLeQAKRupJMDX2jHwMazHQ2idjT/BzZFV5k9uJ
eRiEIvxqvhr+1j/BfNTg93PtkRo/xjPAnTcPRKFIPRHTzDNkeqzDYGufkmv4
ubK6HCXvjXM47p28yo3Gp3oz/Zi5B7LFWccNwdPxPfQa+Fffhebcj3pPZI/7
wNXkvjR3QBr01m/ICTgez6d+wTwIE80PoXB0mTSeCUzXZ8oMWI+hXvdMfB++
Jm7pn2ERhuHZWMfXwm19NxajFn+AexGP4EQ879xF82A8GaknwwzzcNeLmjeY
58na8bvI+2KPxvkav0s8O3IM9ljfQj9u7oUccQZwtbmv4vxDWvzEjUAxfqNe
B0mwl2vJnYgzJH4j84PIGWeFvC3fl1PkVJku7mOcbV5XR37Nv4x0+JnrHOe6
eQiKROp3xPmBmfEMy8fj+2Gk9cXlJr4uEvE514r7Ke4bcsXf5+pyB80dMd6c
Mv6/mN+QN+VSOTGeT5km9jBOxlkmL/FD8VTsO64Et9lcD0nxBbcM9fhDeic8
hlPcaDzHb9HrIxn2ca25n+Pv4wl8wNXnvjF3Rnr00f+Wk3A6ztT4n2NeJIeF
l6niOcfT8RnlnZgV99b65+McNDfAHdjPfYixKOnaVu4F3IkvueVowH+rv4IM
OBPnOHc59haewTA9OWabZ8uMsSfwH7ppPLE=
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwl1nfcTnUcBuBXNtmEZGVFJCtCVvYsIUmZKSQ7KntkFipkjwYhJLtssiqy
CQ1bVpOEur6f/rh87/t3nue873PO+T2vvG27Nn4lUUJCwnN3JSTE3OKfx/le
Hs1TlOKUtXb8Iy+gJ96SsNVadY7LY2jCTf11MrJJz+2Fs+SylJfXmqWtnzbb
U8vaLf1hc6m+UM4uT5FL0EtPpr8p5+IbPTHb5BqckMfSlDKcsfYCt+VF9CYJ
X1mryUn5LZrxj/4Gmdis5/FzZsvleEQ/a3agtvU7egnzM72J+al+rzlVL8mr
enJ9hJybb/WkbI/PyA/y2zxN2fhM7Ihz86M8juaU45y1F/lXXkwfUjj3SGt5
2KPn0z+QK/CYvM5Mbn2nWSfuo7Wf9AfNhfp4ObP8nlyUZ/RH47ykJBWp2eVY
XX6WJ9CC8py39lI8JCwx+sb7nG+Unpe9+t3slutxSi7q+CL5SfMdPYs5US/G
s/otsx+Z2aJX4ILckUQs1V8jDV/r9Tktv0tLKpKWb6w34Iz8XjzPPMZFa524
i8/010nHt3pDzsoTeZ7ben+ysFWvxC9yZxLHPfa7LzOXWc8hT4vfxywVz4u5
2mxmvhHX0hyt3893enr2yI04J0+iFZXJQEYyxf1hr9c8wXl5Mq2pwiVrL5OE
z/V+cb/8nDF6PvbF9eW7uN5ckIvFcyo3Nt/X7zEnxf0xH4o9aa4y2zh2xxzA
PWzTq3JZ7kJSluv94xxkJVvsU/bF+bkoT6Et1bhiLb5ckrFCHxD7hf36U/wi
T6Ud/+oDycpXel6/1xz50Xi+5S/iebZ+1ewaz7e15OZKawPjfnAg9iWX5Gm0
pzr3kZNc5I49Hufn/thD5Oeg9zXlsjydF6jBNWvdSMEqfVA84372WD0/++P9
+odyRSrJ62NvmQUcOxTPBNX1K/oMOlCTghx27GmuyjN5kVr8aq07KVmtD449
4Bxv6QU4oBfQP4q9T2V5g9nCLOTYEbk5NfRr+kPmYn1W3Dt5slw89rMeX+SD
5GxsV2vzAEfjc/CrPJuOsfW9drC17OzQ6/Cb3INUrInr7TXT5dIMif2pvy0X
pIy8wjwYn1/+OPaEWcmsYm6M7wWzsOPH4vPwmzyHTtSlCN/H6/hdnktn6vG7
tZ6kZq0+NPa7843TC3FIL6TPi2vGg/pxsyU1rf+hFzeXxDMa36/xnMfe0R+O
/ReXSx8i38tOvT5/yL24my/0YRTlhP4cf8of0oXE3j/UWo64RvJyc1c8j/Jc
uaFZPp4n88u4j2YDx/+Ue5OGL/Xh8b3i2Hj9AQ7HfdPnx/eHWcWsam6Kz2cW
c/yk/Dx/yR/xCkkcG2btPnbrDflLfpW0lHL8c3Nd7CN5htzALBP701wTz3D8
fXY8gzlBL8yReO74QW7FdfljutKI69b6kI71+oi49vyot+aGPI9uJHXe4dZy
8rX+BDfkvqRnQ+xvr5kpP8JIPWP8zZHrmkVi3VwZ+9w86nhh85O4RnFv9Z/M
Nvwtz6c7T1KCn6235ab8CT1ozN/WXiMDG/VRZHLed+PZ4lg8r/oCuVqQNyf6
//9bJR37D48RE/E=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuEhTZAOKUlJlVABCUEaDDoUCQEJ6U5pJJROQaRRQgxCAQkD
lVDaJkRJEQFJQe/vx3O93/vsNefMzF57Te7WXet1SZJIJJonTSRexAPJE4m3
kyUSpXFSX4NJeJLfyjXBHfiOa4Hc/AK9DE7p76Mxd1jvipwYpP8rp2GmOTMm
W1dJbuMWy6bydZkKd5r7yCvyDey19iX9N/NAFEZLLg+30FwWp/UPMAWV+e1c
M9yFfVwr5OUX6U/gjP4hmnDf692QC4P1W3I6prr+lP6ZeYl8Pt6PTI33cbfe
V16VE7Hf+jb6ifjMKILWXD5usbkczuofYVp8JuR3bQlfHuf0tZiOKvzn3Au4
Bwe4ttzv8R5RFEP1BGaZ58j70ca6AnIp97asIF+L7xR/utZd/s2NxTp9Rvxd
tMPLaI8HrVnmekWc19djJqryX3DNcS8Oxuu4P8xDUAwduILccvOT8X/Md2E1
/nKth7zIj8MGvan+g7k7HsAsrhr3pflFpMIhriMK8e/olXBB/xiz0QmFXXuX
r4y/9U8wB9X5HVwLpMZh7hUU4VfoT+GivhHNuB/1HsiNN7ka3Fex3+Iem+8L
zP3kNfmOnBT7RWbEh7Gf4ruUJ/lX8RA6c0W5leYquKRvwlx0QVd0i/uDYtat
sqYqLuubMQ81+a+5VkiDH+J+cadiL+DheO/cQ/F9m6vF9xz7FO/hH9d6ykv8
cjk+nkmZAZ+69rz8ieuJPHiLq8V9E/sYafFj/A30Qm/0wcPx912rjiv6FsxH
bX4n9xLS4SeuLx7h1+g1cFXfihe4n/VeyBv7Sb8tZ8SeMGeJc8m6OnIXtzT2
ukyPn/l+KB7PpV4T1/RtWID+GICBGITBGIJXMRTDUMJrP/C6Wriub8dCPM3v
5toiA37hOnCnzcPwSKSeBLNjz8hsWIfh1paMPcEvkLXlDe4zLMIIlOI/4uvg
pv45FuMZfg/XDhnxazwD3BnzcBSP1JNijnmuzI71GGnto3Itv1A+LcfLe+Ic
jnsnL3MT8IXeXP/F3Bv54qzjRuGx+Bz6M7ilfxm/Edyveh/kj/vAPct9a34Z
mdBfvy4n40g8n/pZ8whMMadDiegyWTwTeFOfJ3NgA0Z73ePxefhncVvfgWUY
g9Kxjn8O/+lfYTme47/j2iMzjsbzzp0zj0TJSD055ppfc72M+WPzIlk3vhd5
b+zROF/je4lnR76Or61voR8x90WBOAO4utzeOP+QBce4sSjLf6LXQxJ8w7Xk
jsYZEt+ROS0ejLNC/idXyJlytswa9zHONq+rJ/fxHZEVx7nOca6bR6FUpJ4i
zg/Mi2dY5ozPh3HWPyE38vWRFDu5VtyxuG8oGP+fq8/tN3fCJHOa+H0xD5A3
5LtySjyfMlPsYfwWZ5k8z4/Go7HvuHLcJnMDJMMubiUa8Af0V5ANJ7gJKM9v
1hsiOXZzrbnj8f9RCKu4htxBc2dkx0D9ppyK3+NMjd8c8zI5JrxMH885Hov3
KFPirbi31leIc9DcCCmwh1uNN1DRtS1cY6TEt9x7aMQf0rsgB/6Ic5y7EHsL
j2OMfgfmm+fLXLEnMNHa/wHZiDsu
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> True},
  PlotRange->{{0, 0.8}, {-0.005, 0.015}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688364283590014*^9, 3.68836430811309*^9}, {
   3.688364641954145*^9, 3.68836464845094*^9}, 3.688375333350607*^9, 
   3.6883771018589773`*^9, 3.688377186570797*^9, 3.688382787084372*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Export", " ", "sound", " ", "speed", " ", "variation", " ", "with", " ", 
   "1", " ", "and", " ", "2", " ", "sigma", " ", "correct", " ", 
   "uncertainty"}], "*)"}]], "Input",
 CellChangeTimes->{{3.68820757896878*^9, 3.688207590284912*^9}, {
  3.688364752376691*^9, 3.6883647793282948`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"soundnew", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and plots/Data/soundnew.dat\>\
\"", ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.688207592708156*^9, 3.6882076267087793`*^9}, {
  3.688364771208357*^9, 3.68836479275249*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"soundnew", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"Fdu", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"Fmodunc", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "4"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"Fdu", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"Fmodunc", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "4"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"Fdu", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"2", "*", 
            RowBox[{"Fmodunc", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "4"}], "]"}],
        ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"Fdu", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"2", "*", 
            RowBox[{"Fmodunc", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "4"}], 
        "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6882076769212637`*^9, 3.688207696565439*^9}, {
  3.688208963846271*^9, 3.688208977527746*^9}, {3.688294687754575*^9, 
  3.688294687861401*^9}, {3.688364797610758*^9, 3.688364833178166*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "soundnew", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.688207705608797*^9, 3.688207705749179*^9}, {
  3.688207765989469*^9, 3.688207766141384*^9}, {3.68836483800423*^9, 
  3.688364838524744*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "difference", " ", "between", " ", "vSZ16", " ", "sound", 
   " ", "speed", " ", "variation", " ", "and", " ", "variation", " ", 
   "required", " ", "to", " ", "fix", " ", "AGSS09"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883649406782293`*^9, 3.6883649613435717`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sounddiff", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"duz", "[", "r", "]"}], "-", 
    RowBox[{"Fdu", "[", "r", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664889325069586*^9, 3.6648893495870934`*^9}, {
  3.6648893829489098`*^9, 3.664889387431728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"sounddiff", "[", "r", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664889538394559*^9, 3.664889555423674*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
lKIuPxKHqbKBlEePMH2aVWT/ECTgf3HoBt8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.688364997639217*^9, 3.688375333678734*^9, 
  3.688377102135919*^9, 3.688377186852827*^9, 3.6883827875620813`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "on", " ", "difference", " ", 
   "between", " ", "vSZ16", " ", "sound", " ", "speed", " ", "variation", " ",
    "and", " ", "variation", " ", "required", " ", "to", " ", "fix", " ", 
   "AGSS09"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688365075646804*^9, 3.6883650920787783`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dsounddiff", "[", "r_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dduz", "[", "r", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"Fmodunc", "[", "r", "]"}], "^", "2"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6883650963447733`*^9, 3.688365157038247*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dsounddiff", "[", "r", "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"dsounddiff", "[", "r", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.005"}], ",", "0.015"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6883651617753277`*^9, 3.688365247190619*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx12nlQzX/0P/AsZY0iS8oSPpaQJdl5pkLdUreNUqi034vsZKvse7ZICgmJ
QkmFOtFKGy1UQup27y0U2Vv43d/M7/f948x8++dOM03zvq/365zzPDMPHbe1
Nh4dlZSUzisrKf3fz8iGlI0FB6znXTKbHrKnpzcaxjrGrdYIholouNb4+15Y
vbl08bEnlzFk+oxeKzW9sFL1RLFyXTTe66DqoIknYjsKaorW3sXToVseHTnu
jvRlY7/ezriPlE8uhp5rXRGs2qdLWEEyrE1Vu+01WY5NF19P0dRLhYXEeKa6
aBmaJlzprpGaDv2NDgd8wpei42ynfyPSnmL8xZXv7yjZY9iDTv+2N2Tig0nt
zVP6Nrj4blJQ1dds1A11cr5uZAWnS3ddlJtyEW2g33vfKwuMLBwi2DwgDyta
HdvO9jaHeYx6UtOgAogjnUx6TRFg5/dmvXtmRfh8wm5O9HMBton6Bg5OeoG4
WyGuOiMWwy1h7W3pg5dYn5Pxs9sWKwinGL+1zS9G6ar/XDw/CfG5S4XVgqIS
NI041C91kg1OaEhzKmWl+LQ/Y+7gWbawXX1xtV1rGYb+tdSS7rZDtnY/e5u2
Vxi2LVs74qA95nVSNvrepxwfxsWHrz63BB6GSX6DBlTgbEP/pTHxSxH7rE/B
yP6V+PokTFX1owNaD9Xplei+QcX2xgKL28vw+7J/sfKEKpy+sWn/D6kzWhr3
b68yeYscC/ttggcrMfjQHJtzS9/hcXFHwwYHV3zZdt/31dL3eLu+d/8Lj90g
eWGdWTWtGq+CXSvrLN0xJlh3Y3ByNXZ3Ms3Y9MgDO3+8nvVg+gf4TroUqaHj
Bbufhp3jnnzAlx1ufTSuemPP8CONXkY1UHcevCO2yQdTG4LffCuowSGfpN8b
Zogw9+2W+vnCWhwyWbpMXyLC0s36vTq+qEV5SIR3nbsY32JiDM4sk+DuS/Wy
SAMxZN077ZK/kUB+btPUbZkiLFcZ8KyXdx2SakNmj4v1heTGP90bX+twwGC7
jr/MGxkbn8V2WC/FH0eDR9ea3DHyraW+XrsUn48cKjohcMRbv8QK7d0ylBV2
7jJouxDXY76E7PwrQ2K4587epVZo3i1bcvegHKcWNbkduGuFkACafq1bPb5T
9s6jbUJUx5cFh4bW48mq7OOL19pgWodX2Ws0ApBvGT5zx3svuPXo8F9m3nlY
lvXpp33AC9Ink4PNSqJgE/fSe1acJ5wPncyzqbmN/JV2G/a+88CDuBSftNB4
BMYcup3R6oYx9we3Xc19gET1rkP9lV3Qsey7dmX7Qzhu3jPrRJ4TVgguGI5v
zELnfy8cesiEaEvz++r3JQddmzs/DKpcjPQHXmVzOz3HGv19zcvemWPGnPNK
+pr52BvitWzBbgHcrTpuEE4pRILTLJULivtetX5hz9YJL/Du5vYxq6vMMWTw
8ZD8xSV4L30cfOeENeYdf98j2KkUm04N2foo0wZfDZ9cOLeuDCN2rOrnWmGL
bsp1EZdCKhBasCHhhbkDSse2tW+/XAnbhAVaseGO8O93N+DTrTd4Wlh4uTLN
Cc4qveomHKyBod8x0/LzvkhetbdmUO9azFyRpXzwrAjPb5a16gTXon20T9Gx
UWJcU2vSMe8nQdfrqsbnlojxufKV47wwCUpVNm+40EmMyK7Hrrbq1GHzbHSr
WyDCsKU9Wipv1yHC9KfGiLc+sDvuLi6dLMW3lkcTj0zywvcxR7+cS5JiwO/U
hKDvrlAaHbT/v3kyqC9/s+WGri2eqtrOKEiTYaz9jXl7hwhh0e/TzxBjOQZO
U/++aL8VTAJsc3SfydHwvUfPlWIhHoUK3C9Z1+P6xdiHDuHWKLhT9MtPww/y
v0vvZ//wwvVBsfUD/c6g6WnCEPdwL+hqd1oreh6Jl8sLU6/UemKFuZrV7doY
LDL43i5U90R8eYdROXvv4fFh55Exmauw8cDVzWOyE0GN1cr3Ulxgtq7TqYd1
KXDPN9WZtd0ZUCoaaifOAmn+Sn531Br5hS9SRq3LgY3kwh1VD0v0GtczTGfb
M4yam2h8wt4Cevucrtmdz8PXVItnH9MFKG/r1u/y9QJcHJwyI3S0AIM+09WS
4iKE9sa3PebmSLohn6mmWoKFXt5Kh+ZYo795Vaxvv1KM+z3HYNsOG6TH2E5O
GV8G4+1WS1/uskXS8MIub5dU4N/CpwP9/y5F+rYDHkInRb9qfxBmb+KIh0XP
X68UvcHuwNp+4/Sd4Hcmv17gUYPRJ+YrvVnoi5/Xu6880FiDIyc232jzEmFv
xvXmyX61eFNUnrJeRYxdxurnrzfXoo84yOb3SjG+PE1fVO8vwboxvw8JhoiR
2S1XrfmvBH/TUoomBIqQpnfyw8bDdfA8HihrsvKFtlZ8Xqq6FF0fmJy/OcYb
VYW6RflnpPDrPG7KpeOr0CdIXnVzsAxnniYXHWmyhxCdu/2IkCHw1ob2Y0ZC
/FnZuLC7jhwqt69v1rhlBa2AwSc+R8uR1MWol/9wIcaoKltGTqjHp0VX8g6Y
W2Ofbqb6tSEHEV6VXxzxzAtD2uxc1o4OxyDtyYEmtl6I9HK5N7rqOkKzsj5M
3OYJp5w+pn+q4xD+pUHkZ+aBqupzgUPzkvDwS/8lo66vwM4zHq6d/bLRd55m
pkTxPOPvqI19tDYXL9IGOuvaL8Z6o4zey449R1lHx0NNfuYw+lbqpH4hH4ey
Fv06binAlystL5TSCiHcKllkukwA3abbC4+uf4EJ5hWpcf4W2H9K/9vB4yXY
0mXu5H011vB8WeOTeKUUQSFVZVmdbeEkazVwe1WBk/53bK5fcIC8wi/kRp2i
3ns3Ti0ZtgymW62q1W7V4K6FYXSRzBf+w/56xE2shcfxoguFaSKoBXdW7nNX
8f5q3Zt7LBQj/23+rabpEoS9jfy0x0yMhuZPotOPJLj3+qPHQrkIAV1spikv
qIPLld4PD/zzRdDufX3mF9Whes06zVJXHxztMED1o7UUuz/srHcc4omeez6r
r6qUwj/f5LbBkRVozNOadGWFDBZbB6QrvxViatUVr2vvZFgS+SfHsIMQl57X
Xx/hKUeg9MWHjp5WsBwV7H9xUz36ldZF//xjjdaeGY6bNFxwQ9zm2r+DN0yH
d7IwNjqF1s5n7ZKjvWDxTLSiLesKcn+Y9d38V1HPt4vUHCU38WpJYPl7XU/c
/fzfXvOWu/A63Ka5c6w7Bq2TJjSYJELP1++ps4YrxHQ4P8YxBWpbNStVSpwx
ycmnt/e4LKz8UzbctNoa918pRQROzsG3h70XX79liake73b2nfoMZya9iP5w
xgI3x6ZuqVuah8IbyaL7UgFOlahKc1wK8Gpr4J9ZugLk+zn6GB0vgu8yq+2V
Xc3R+fPZHvGfirHqZMC7QX2tEXSz8u/S5hLMWO6+v2WJDaLfX2wz616GSQ4r
PAfa2OL4PaPHrdMqsOy2xWq38qV4oLM49OGMSsQN8OjkO8ARleMd9miav8GO
I40Z/zUtg/+bceIK2xoczVbdVaLli7O5i8PnvqtBjf9OnWShCC7C3o0zXWrh
m61UG/pDhAbn4bZ2H2pRtGLv+OZVYjQ/SExL85Vg76aFP9frirHksMei1Z8l
eFXZ2rngsgjHB9mVzd9Wh2Sd3f+SA3wR8MFhe3wHKcakLdjb45I3Xuj4z/Pa
I0WzTueUXkbuCLuj1VWsKoPHo9GG7geWon+589euJ2So27n8pbeTEMJ9TY0Z
veWwvzR2dFmaFVQCOn4rPC+H1kJRTmiLFd4vrHl6VaseajMXF/8dYY13/RZ/
OqS5F+/m/9EMKPVCeqdbT0P/XECez3jpEj8vZGo8u5z8+hqczZuG3DytmPdj
irtd/xCLXTrVM0fe8EDQ88q0D2ZJaA8cMmisw0qsafonHDgxG847lbIfnRFC
I8lQtf+kXMS46FKPc4sRuuNss7npc2SkZe+ded0cqeem6UU65qOox9h7yasE
iNn698qYrYXYtaeheLKhAJ3ubbtpLHwBbeGOnmq6Fih+XZ2pu6YE0d72rQYp
1iie+OFh5K5SGJSOqpwps8GUzX4NAQ8qYLDfap7qBge8C5z2XD2jEjq7rx/f
V+UIG4pzuxRao8hdssqgdF9oGs2Pch9ai7CkC+9Vb4nwWXu10qDLtWhsEaTv
nCbGjF9vPcNHSRD91934pFCMT9IPNd63JIhQu6Sj9FME9YNN4gD9OsyrNV6n
N1IEa5GpSq+0Oiyusf1Ve8kHX3JSH7+fL0Vm0V70vOUJpVdzAttzpbj8slXs
eskFW/5YOq2ylEFVySz4p1RRnxtbrFIKZfAjmXRkbyF+NjVYvrWT437iseX+
m6zQ2WV1U/iqesxdM+/5uWfW6Nx36YHG8BD4OD98O/GUF5Y3CI/9q7mFg10O
tVT98oAk+3JZ3t0clO9cvGXDUEskVP8pzijPQ+vQeFX3CAGGjFIx2fqpAKmz
36xapaivmE9vnXfOKEVSjqzzoCs2KN/U3XOMVRkWRql1otu2eP7yyWTpzkqs
D8kv3LHOEX10ld7+7iTBx5qseaecxNA/pFu5Wa0Oji4rnZLcRWgyKvx8I6wO
NfdOnP45QJGP7HpoP9ORomHHnGX7Yr0g3/5m5ZTrUrjcut+Y99INh+wS78km
yKBiH5k8N9AOh67fGvYhToby+ysWn9cTInLW5wjhFDnW+O59Zn/eCutLRldc
Rj2CJAt+399gjWWetvstqu/AYd+qy7KP7pj2y85kuUUyeo2x9mj8vhxHZ+at
+3I3G0OiYpNn1loh23LDoYDKfLSc+SZSmSfAtLyf/8o7FSFq/sO1k4MFaFkv
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
l/VGrxT3Mf/x4M3Jt6Xo36PEfvtBN3iPcJYXvJTA/+Ser3WlItx7vb/l6Ngc
rDGYGh+fYgkfS73qng4FMF76a+xHXQEWqKj0b1Muw9l/owZOsLKFxcPF6vf+
1aG2KfjvgVhv7NDoHvnoSSzeOJx+/TbeAz8uj5qXWlsAScLqQ6mKfvntmVx/
/iY5DO2PbxA4WuHOFt3edeEF8JvcY3iU4vvnaGvlLUgshOe6gH7vbRXnMTlo
U6izDIY1GehWJ4RN383zRImK/uHU6b/7Q9zQr6TqVlZeDYqj+5911Beh+cBl
1U6Ftbi+TO9Rq5vi/d/8ML62QoJ353bqH8gVIShnRmCHVimGio3c6KAjBixb
R47n6vGi9/e2D542YD6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflk
Yj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRi
PpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+
mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6Z
mE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmY
Tybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhP
JuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m
5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybm
k4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaT
iflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ
+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5
ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflk
Yj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRi
PpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+
mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6Z
mE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmY
Tybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhP
JuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m
5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybm
k4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaT
iflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ
+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5
ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflk
Yj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRi
PpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+
mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6Z
mE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmY
Tybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhP
JuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m
5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybm
k4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaT
iflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ
+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5
ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflk
Yj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRi
PpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+
mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6Z
mE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmY
Tybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhP
JuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m
5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybm
k4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaT
iflkYj6ZmE8m5pOJ+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ
+WRiPpmYTybmk4n5ZGI+mZhPJuaTiflkYj6ZmE8m5pOJ+WRiPpmYT/4fj6n0
/37+v1f+337nf/9/AH8WVNE=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe8jmUcx/HTIXtmZoSs7L33KLIykh1OsnXMIhlZhezqUEr23hpWy4ok
FdGUBhUqtLT0/tUfn9fv+/lej/M8931f96VIUnL7BxITEhJuwNHE/2fKjQkJ
C1FZPqLLhHV4wOIPeEL+wVor+SgG8rm8h/wZxvJ3eBl5Pe7kHfjnqMv3oKtu
JN+KrHwOyukq8fYYgS3Iop+NstYq8iHyJczkl/gb5j98sdnS3G6+bQ4w51jv
Ln+Kh/lRXlpeh+a8Hf8MdfhudNEN55uRmc9CGV0FfhEt+BH0183m3eRPMCa+
k5eS16IZb8v7yF9jEv+U15Z3oTMfxjvIH2AY38Qzxb1FaV6eD5YvYga/wP+W
n5XvNA+jnzxLvz+eG5agq/5l82NztHnE+jU5Rb7NXIM75Lv0n6AW34lOuqF8
IzLG/UUpXTl+2MyItRikv4Dp8vfWmstvoS9/Ij6Lknw1bte14QfMG7Ec98X3
mV+Zj8bvtF5TfgX38GS+ARniunGbriyfibdQQrcKTfWt+UeoEdeMjrFHY//I
72MoX89fNX/m88305iZzulnSLGN9oPw9Huff8WbyIdzPZ/BDKM5XoomuFT+N
6vwl3K0bwtchXfwdlNCV5tNxEMV0K9A49ik/hWr8RXTQDeZrkZY/huK6UnHN
ZgaswYDYP/Eb4zPmt9b/kp+R7zAPoo/8uL6L/BEe4gd4UXk5GvEWfBDWII1u
GorF/uDncTs/gPt0j/HO8mk8yPfzW+VlaBh7kSfJX2Ii/5BXlXegPR/I28nv
IZmv5lflebEnzI3mVLOoWTLudTyj+Bz667+N3yefs9ZU3o8kPo3vQxG+FA10
zfkArEJq3RTcqi/Bp+JNFNa9gPr6Zrw/ViKVbjKK6IvHMzPTYRX66c9jqvyN
tSbyPvTmU+IMQiG+BPXiWfB+WIHEeP9RWF8snkPcv/jd8Vvi3+EWFESBuPfo
i+VxJsc7gkL+bX4+Ga/H53Vbdc+bdc2mcb3mMvTWncUE+aS+irwd7fj9fFnC
/4f9RNyiy0cn4bX4DbrnUEffJM4vLMV1TNAX1N8s50Ue5EZjnEBl69vQNt5x
3jb2tnzcjP9gXtDtNa/wuXFm8/FyATmX/HX8Lf4meukejfc27glfjNq6RvwD
VIrrx126JL4kzkaM0+XX5ZQnxvchf5yZqKVvyHvj+Xhv8Ig+nz6HfBOyx3Vi
D/LFe4Wa1hvwXngOf2Ks/mZ9NvkrNOJvoKdufOzLxHjwvged4owwT5mjzN2W
fpefjntpLkINuX7sQXMpesV5aH5hjjffj+du/sEXmhXjXptbzDZmz9jb5vV4
fnG2x/tnvmsOMRfHNZmX+Zz4O3yD+TDPa2aNc8dcib66c/HuyF/G9cZvjHtn
vo575XH6e+QPMZLv4r/JT8l54zeiulxP/x4q8M1orbuXP4trGKPLo8sSzwI7
Y1/pUlBNX5f3wDNxzzBan1ufOZ4BXok9GPcSVfV1+HGU55vQStedt5GPYTBf
xHebP/HZ5m/8ITmXnEk+iwb8NfSIe8RfRq64PlTR1ebdsBC/4kF9Tn1GOQPS
Ix1qoStaW38Hg3wmhf8oz5J/kdebo3gOMy1PY66Id1X3TZxJsQ/09eVX0Z2P
4S8hJ38SlXU1eRc8jZ8xUn+TPo1cA53xFK5ihLXscf7KZ1CP70U33WjeUT6J
EfzFOBvMX+O74l0xt5gLzEpmdes95TMYF3uOl5M3omXsf/4krmC4Lpsuddxz
7Ij3TjcfFfXVYl9hAS5jmD6rPlXcY9zNT2C4bjv/RV4gZ4/9Zc4zK5hV4/WL
Myf2m+5zPCIf05eVN6AF78jn4ycM1WVJ/O+1TRiFbcgWZxXKK6vE92NePD8k
6zPr/wUU91V5
        "]]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1nfcjlUcx/HbbhFlK3tEiYaVlcxCoaKM7JW995a9d4mm9qCiKIWyMkL2
ziqj7C16/1798Xl9xznXuM91rut5cjXrVKdj0kQikQTrmRuYniKRmIF1/I7k
iUQpLE6WSDRAdvyrv6Krj91yf5RP9v/xO3VPYIncEDmQ3rl66i7xs1BF/kh+
AK/y6+lNx16lDdBHt8e8RvQneQBfhp/LZ8eT8gbzd/Gl8X3MRU7c0l/TNcRe
eSAqYKN+t64MfpBfQS5kcN5eusv866gqfywXREK+Thuhr35fHEeXyaPpILks
fUvOgafkfPJIPhU+ln9z3T18WSyVGyM3kmCTsb36cvhRboI8SIobulewnx+M
isjv3KN0t+ETuab8JV8EHflNdLNz7qPl0SPWz7x6dLHclC/Gz+QzIa+cDFsc
8zu2Yhv2xxpjmbFm8ZuQPJ67rjEO8ENQCQWcb7Tudnwqb3f8Ab4ClssvGV/C
v0aby8XpLDkz8ssZ5d78Ff4NpMBNuQkO8kNRGTuc92CsMVbILeLaSBnPPH4b
/uCHxf7CTvP/0FXEz3JLPIBMrtdHd5WfjVRI6JrpDsXz4Zfzw/ly/Nt8TlSN
4+Ux/B1ozq+kn+mf5efzRdGJ30x3uf4hWgk9db+Y9zL9Xh5BW8kl6OvyQJqF
tqZr6Tha0Hhm2lfuT6/Fs4jzyGPom3I1+ok8lBai7eiG2B+xv2K9+cOxr/gV
8QziPeXf4QfTXLQN/ZWOp9WMF6Rj5Tvxubzb7zjMV8ZKuTUK4fbYp+a20B/h
R+Bp7Ik9HXsQR4xVwSp9GzyIO2LPOa6l/ig/Es9gv/lHY52xWm6Lh5DF3H66
6/wc3Bl7MdZPd4wfhepxT7pxurvwhXzA+Y7x1bBGrm/8B34kfVUuSd+QB9Gs
tLAuK9+fv8HPxV04GPsonmWsA/40/jTWGmuHh5E69q1jW+v/5EejBo6Y/5fu
Gfwqt0cRZDN3gO5f/q1YN/lT+UG05zfSNLG3+TZ8P/qXPCbeeRx13uP66lgn
d0BR3I1jcY9x3ZiDEziJU/gb/0TnuBpYb35HPIK08S64Tlv9cX5s7Ot4Zrrx
utT4Un5OXsA/gs78FjqJno7r8DWxwbxOeBTpcFusuf4EPy7OgTNxT7pnsVHu
jMdwT+wt89vpT/LjUSv2gm5CrAvmRyd/xT+KLvzvdDI9G7+Tfw695N/MbUCX
xjy+FD+bz4bH5fvkgfxN/u3Yi/Jn8kO4N/ar3J4/xU/Ak/K7cm7UlgvLE/m7
sUA+F2vM18ImuSuKIX3sXXM76P/mJ6KC/J6cB3ViL8mT+LRowa+iX+lr81/H
N4k+RrvSrXQKPe96p+NesNncbvGNxf3x90l3i38HGWI/6zrq/uEn4XlccPyZ
uD62yN3ju4Ts5g7WJfCunDH2ua6TfJqfjBdiP+sm69Lha7mO/E2sLS4691n6
PHrHMzLekP4oj6I95CfiWybfh5JyDnkInwTvyZmQRtdZPsNPwYu45NzndC9g
q9wzni1ymjtUlxTvx7dB/pwfRgvTDrEn6ESaOd4Z2kU+y09F3XiXdFN09+Cb
WCd5IV8M3fhtdCq97B7O8y9im3m94vcgl7FhumSYF9+weL90XeVzfFP+Z34a
/xT/Pj+E5qVt4/8uOoHWi3eTTo29iJb8arow1p5fxBfHFfdxgdbFdmO9Udr4
HPl+lJZzy8P55Pggvk/yF/zDyBrvqdyNP89PR0V5npwPL8W7LE/j02ORfNU1
L/L1sEPugzLIY95ruhT4ML518U7russX+BmoJH8g58fL8d7L0/kBNANtRdfQ
sfTbeN6hcglcc91LcU/YaawvysZ7jOvGLsc5sUvuh3LI6/gRupT4KN4N3Bv7
L/YoPxOV5Q/lAqgvPy7P4DPiu9gX8nexR9Gd3x7Pj/4HCmhnlg==
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwl1nfczlUcxvHHQxJKey+VRHaiqYjISjaJQkP2XmkblewVIW0NIysN7UE7
NLWHkbbQ7n29+uPTNc793OOc7/mpbNe+LfsUKSgoWFdYUBDdm/ZlfuQnozVO
QRX9JP2+eEweDFXBPv7TT/cTPwVt0Fj3iK4S3pSvkT/lO+MuvhA19VXpZN1i
uh+dSn+jy6wN4DfwrTFELooyuv7yz/xUtMWpqKafot8fy+WhKIZ99QN0v/DT
0A5NdI/qKuMteZT8Gd8FteTq8lR+CT2ATqM76TN0hfWBdKPcBsPki+Wn+bPx
mbwH9tMNlH/lp6M9aqM49rc2yNoOfgY64DTU0E/TH4iV8nB00q2R6+Bz+Sb5
G/5y3MsXx576A+hg3cPZP/l2+qM8k+/Jv8E3Q0f5dJTAXiiJUjjQa4ZY38nP
ym/CGTl3/XT9QVglj8Alumfkc/CFXBoH6YbKu/gJ/E/8k/QOuRd9U26OTnJT
eRFfBW/LZ6KmboZ8MB6XR2YOcbB+mG43PzufjbNy5vqZ+kOwOvOVOcQh+uG6
3/k56IxmusW6qnhHPhu1dLPkQzGd30Wf0A/i3+PbYlT+Xn6WPxd38H/SL/U3
89/yV+C+nAHK6A+lI3SP0D/kifRn+Sl6p9ybvpUZpRfSufRf+jztYr05XZL7
RavRWXkf+ix91/q19PPsEb2ULqBFUSfzlf3WHYYZ/O6cQe4p/35miraj8wr/
v7gv4Fq2C31OXxdf5c7gMN1I+U9+Li7FOZlT/Wz94flN8nWZ9cx0ZhCHW7/G
2l/8PFyGczNz+jn6I/C0fH1mDkfoR+n+5uejKy7ULdVVx3q5bmYx+ycfiTXy
DflOuuflevg6M4gj85vkf/hJ/C/5PHqX3Ie+La+gLWg3XQv+Mb4GNsj1MnOZ
o5xl9gFHec111v/lF6A7zsvc6ufqj8qzQb4xvx9H66/PgxR3k8txkW6ZfAo2
Zt/kL/jL8hq+GOpntuk83VJ6dM49dz77hGN0N+iK4B75CjTIb853zOfmNTgW
ZXEcjscJ6fztjf6uMM8N+Uqcn7ugn687Bs9lrnNmmQ35PHwjj5Y381fifr4E
Xka5fA69SV8090C+Cg1RJ3uuOzaznffAiflO+pt1xfJecg80ymzpF+jK4gV5
TGZB96JcH9+mk7fwV+EBfi+8gvL5nXS0/lG6B51Mf83rrPXl3+EvwtVyS3k5
XxPvZRblL/muuCDzKt/NH4cX5SHyB3x7jJW7yS/xDbBZPil7rBsjF8eDck80
zuzq79Edj5fkofKHfAeMyyxlL/nzMZv/i27Rj+W35plEe+Q9aUm8igrWy9Gx
+j2xUO6FVvn3ST4V78tNMs+6e+UT8LJ8CyrmLPTjdCXwUJ5LaK1bKdfCB3LT
zLnuPrkcXpFvzTxn3+WG2CqPk7dlb3GyXF6+hV+UM6JT6I7cW/qw9X55lskt
0UduI6/ia+NDuRnq6+6XT8Sr8m2olL3W36ormWdszhZtdY/Lp+GjPBvkr/jV
tFvuSmYiZ4bmuTP0AX15rJXH5y5lb+VG2JZ9kr/je2Z/+VJYi8rWKtDb9KUy
b/k9aKdbLZ+Oj/MMy/3SPSifhJn873Sdfhj/Eb+KdqTzaZHMOm7P3cxnZRYx
h/+bfpe957fzvVAl5yiP50tnr+X+8nq+FfrL7eUn+DOwKc8n+Wu+O1rknsoL
+Qp4TR4uf8xfjAm5y/I6vjG2y1Vxcr6jvDcWywPQQfekfCY+ybMud1r3kFwR
r8sj5E18J0zMvZdf45fRJvRO+k+eQfT7nHdU7o1qOXt5Ar8PlsgDc49RHZWt
TdSXwVJ5EDrqnpLPwqe5G7gg85cZxRvySPkT/hJMkq+WX+eb4ofMhfxDZjR3
hC9d+P//I9ew9h/koFQ8
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1XfcVnMYx/G7JVGENu2kqaKslnZJRpPKaO+hvffek8guaYeUlhHaQ6Vd
GrQQ7T14X398Xt/x+51z7uec65wnZ+MONdsnSSQSG5MmEpuwJ3ki8TSWJ0sk
GiAbbumv6upjv9wHZbFZv1f3DFbIDZEd6VIkEt10l/lpqCzPlvOhNb+Z3nbs
NdoAPXUH7HuNfi/35UvxH/LZ8Ky8xf59fEmsjL3Igf/013UNcVDuh3LYqt+v
K4VV8uvIifTO2113hX8XVeQ5cn4k5Bv0NfTS/xbH0R/kkbS/XJp+JGdHeflh
eTifEnPkX1z3AF8a38pvIBeSYJu1g/oy+E5+E7mRFDd1r+MQPwAVkNe5R+ju
xFy5hryIL4L2/Da63Tl/o2XRNe6fffXocrkRX4J/h8+IPHIy7HDMr9iJXTgU
9xg/WGscfxOSx3PXvYHD/EBUxCPON1KXCvPk3Y4/zJfDavkV6yv4obSJ/ASd
JmdCXjmD3IO/yr+HFLgtv4kj/CBUwh7nPRL3GD/KTePauCOeefxtOMoPjvnC
XvuP6irgJ7kZ8iGj6/XUXeOnIyUSusa63+P58Kv5IXwZ/mM+B6rE8fIo/i40
4dfQ+foX+C/4oujAb6f7XP93WhHddD/b9ypdKQ+jzeUn6btyP5qZtqAb6Bia
33om2kvuQ6/Hs4jzyKPo+3JVOlceRAvQNnRLzEfMV9xv/o+YK/7HeAbxnvKf
8ANoTtqSbqRjaVXr+elo+W4skPf7O/7gK2GN3AIFkCrm1N6m+mP8MFTDgZjp
mEEcs1YZa/UtURB3xcw5rpn+OD8cz+GQ/cfjPmOd3AqFkNne3rob/Ae4O2Yx
7p/uBD8C1eM36cboUmOhfNj5TvBVsV6ub30VP5y2lp+i78n9aRZaWJeF78Pf
5D9EahyJOYpnGfcBJ61XwwZrbfAo0sTcOraF/iQ/Es/jmP2ndM9ho9wWRfCg
vX11t/iP4r7J8+SCaMtvpffEbPMt+d70lDwq3nkcd94/9dWxSW6HorgXJ+I3
xnVjD/7C3ziNf/BvdI57Hpvtb49iSBvvguu00v/Jj465jmemG6tLg0Xyi/KX
fDF05HfQCfRMXIevgS32dcBjuA93xj3X/8WPiXPgbPwm3QvYKnfE47g/Zsv+
Nvq/+bF4KWZBNy7uC76ITv6Kfwxv8b/SifRc/J38i+gu/2JvA/pt7OOf5qfz
D6K4/JDcj7/NfxyzKM+XC+GBmFe5LX+aH4dn5U/lXHhZLiyP5+/Fl/L5uMf8
S9gmd0IJpIvZtbed/h9+PMrJM+TcqBmzJE/g06Ipv5Z+pX+ZXxzfJPo47UR3
0kn0guudid+C7fZ2jm8sssb/J91//CdIH/Osa6/7l5+AWrjo+LNxfeyQu8R3
CdnsHaBL4FM5Q8y5roN8hp+I2jHPuom6+7BYril/HfcWl5z7HK2FHvGMrDek
38kjaFf5mfiWyQ/hKTm7PJBPghlyRtyj6yif5SehDi4793ldbeyUu8WzRQ57
B+mSYmZ8G+QF/GBamLaLmaDjaaZ4Z+hb8jl+MurGu6SbpLsfX8d9kpfwJdCZ
30Un0yt+wwW+DnbZ1z3+HuS0NliXDJ/FNyzeL10n+TzfiP+Jn8KX52fyA2ke
2opuouNovXg36eSYRTTj19Elce/5pfwTuOp3XKR1sdtaD5S0/oGcFSXlXPIQ
PjlmxfdJXsg/iizxnsqd+Qv8VFSQP5MfxivxLstT+HRYKl9zzUt8PeyRe6IU
cts3VJcCn8e3Lt5pXRf5Iv82Ksqz5Lx4Nd57eSrfl6anzel6Opp+E887VH4S
1133cvwm7LXWC6XjPcYNa1finNgn90YZ5HH8MN0dmB3vBh6I+YsZ5d9BJflz
+RHUl4vLb/MZsCzmQl4WM4ou/O54fvSma/4PvYJmXQ==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> True},
  PlotRange->{{0, 0.8}, {-0.005, 0.015}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688365185007676*^9, 3.6883652475138693`*^9}, 
   3.688375333987183*^9, 3.688377102332685*^9, 3.688377187056055*^9, 
   3.688382788001031*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Export", " ", "sound", " ", "difference", " ", "with", " ", "1", " ", 
   "and", " ", "2", " ", "sigma", " ", "correct", " ", "uncertainties"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6882078089501038`*^9, 3.688207816261314*^9}, {
  3.68836545054114*^9, 3.688365455174391*^9}, {3.688365568894697*^9, 
  3.688365570162139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sounddiffnew", "=", 
   RowBox[{"OpenWrite", "[", 
    RowBox[{
    "\"\</home/sv/Dropbox/university/PhD/Stockholms \
Universitet/Projects/Revised DM abundances/Data and \
plots/Data/sounddiffnew.dat\>\"", ",", 
     RowBox[{"FormatType", "\[Rule]", "OutputForm"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.68820809972022*^9, 3.688208111493861*^9}, 
   3.688296572941588*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"Write", "[", 
      RowBox[{"sounddiffnew", ",", 
       RowBox[{"0.001", "*", "i"}], ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{"sounddiff", "[", 
           RowBox[{"0.001", "*", "i"}], "]"}], "]"}], ",", "4"}], "]"}], ",", 
       "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"sounddiff", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"dsounddiff", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "4"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"sounddiff", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"dsounddiff", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}]}], "]"}], ",", "4"}], "]"}], 
       ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"sounddiff", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "-", 
           RowBox[{"2", "*", 
            RowBox[{"dsounddiff", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "4"}], "]"}],
        ",", "\"\< \>\"", ",", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"FortranForm", "[", 
          RowBox[{
           RowBox[{"sounddiff", "[", 
            RowBox[{"0.001", "*", "i"}], "]"}], "+", 
           RowBox[{"2", "*", 
            RowBox[{"dsounddiff", "[", 
             RowBox[{"0.001", "*", "i"}], "]"}]}]}], "]"}], ",", "4"}], "]"}],
        ",", "\"\< \>\"", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "800"}], "}"}]}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.688208148961885*^9, 3.688208163054291*^9}, {
  3.68829659755694*^9, 3.688296598850081*^9}, {3.6883655440003138`*^9, 
  3.688365582246992*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "sounddiffnew", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6882081710412817`*^9, 3.688208172561151*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "average", " ", "discrepancy", " ", "between", " ", "two",
    " ", "profiles"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688365627975362*^9, 3.688365636473584*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sounddiff", "[", "r", "]"}], "/", 
        RowBox[{"dsounddiff", "[", "r", "]"}]}], ")"}], "^", "2"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.73"}], "}"}]}], "]"}], "/", 
  "0.73"}]], "Input",
 CellChangeTimes->{{3.6883659630487757`*^9, 3.688366006355629*^9}, {
  3.688366043931974*^9, 3.6883660523957443`*^9}, {3.688382907048212*^9, 
  3.688382915401063*^9}}],

Cell[BoxData["2.5008440527517073`"], "Output",
 CellChangeTimes->{
  3.688366007294544*^9, {3.688366046809657*^9, 3.688366053076405*^9}, 
   3.688375335038529*^9, 3.688377103343292*^9, 3.6883771880036993`*^9, 
   3.688382789261414*^9, {3.688382909522047*^9, 3.688382915924748*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", 
  RowBox[{
   RowBox[{"sounddiff", "[", "0.73", "]"}], "/", 
   RowBox[{"dsounddiff", "[", "0.73", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688366015818993*^9, 3.688366039005746*^9}}],

Cell[BoxData["0.6831242012642337`"], "Output",
 CellChangeTimes->{{3.68836602004103*^9, 3.688366039497839*^9}, 
   3.688375335183217*^9, 3.688377103458364*^9, 3.688377188079358*^9, 
   3.688382789358739*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"sounddiff", "[", "0.0", "]"}], "/", 
    RowBox[{"dsounddiff", "[", "0.0", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688384024166676*^9, 3.6883840332232237`*^9}}],

Cell[BoxData["4.213791473259519`"], "Output",
 CellChangeTimes->{3.68838403394184*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"sounddiff", "[", 
        RowBox[{"0.01", "*", "i"}], "]"}], "/", 
       RowBox[{"dsounddiff", "[", 
        RowBox[{"0.01", "*", "i"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "73"}], "}"}]}], "]"}], "/", "73"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.688384277592845*^9, 3.688384349481131*^9}, {
  3.688384870485835*^9, 3.688384876368001*^9}}],

Cell[BoxData["2.5328569109589365`"], "Output",
 CellChangeTimes->{{3.688384310706604*^9, 3.688384330847311*^9}, 
   3.6883862844179707`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "RESPONSE", " ", "OF", " ", "SOUND", " ", "SPEED", " ", "FINISHED"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664896835949442*^9, 3.664896843119969*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "RESPONSE", " ", "OF", " ", "SURFACE", " ", "HELIUM", " ", "ABUNDANCE"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.664896950777851*^9, 3.6648969584613647`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "surface", " ", "Helium", " ", 
    "abundance"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688366230007224*^9, 3.6883662384741917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ysc", "=", 
   RowBox[{"-", "0.003"}]}], ";", " ", 
  RowBox[{"Ysn", "=", "0.001"}], ";", " ", 
  RowBox[{"Yso", "=", "0.025"}], ";", " ", 
  RowBox[{"Ysne", "=", "0.030"}], ";", " ", 
  RowBox[{"Ysmg", "=", "0.032"}], ";", " ", 
  RowBox[{"Yssi", "=", "0.063"}], ";", " ", 
  RowBox[{"Yss", "=", "0.043"}], ";", " ", 
  RowBox[{"Ysfe", "=", "0.086"}], ";"}]], "Input",
 CellChangeTimes->{{3.688366346970469*^9, 3.6883663972565727`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Calculate", " ", "change", " ", "in", " ", "surface", " ", "Helium", " ", 
    "abundance", " ", "with", " ", "power"}], "-", 
   RowBox[{"law", " ", "exponents"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688366402939342*^9, 3.688366412848673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dyspl", "=", 
  RowBox[{
   RowBox[{"Ysc", "*", "dzc"}], "+", 
   RowBox[{"Ysn", "*", "dzn"}], "+", 
   RowBox[{"Yso", "*", "dzo"}], "+", 
   RowBox[{"Ysne", "*", "dzne"}], "+", 
   RowBox[{"Ysmg", "*", "dzmg"}], "+", 
   RowBox[{"Yssi", "*", "dzsi"}], "+", 
   RowBox[{"Yss", "*", "dzs"}], "+", 
   RowBox[{"Ysfe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.688366421035203*^9, 3.6883664655366173`*^9}}],

Cell[BoxData["0.22487399440000852`"], "Output",
 CellChangeTimes->{3.688366465705154*^9, 3.6883753352877617`*^9, 
  3.68837710353759*^9, 3.688377188175626*^9, 3.6883827896861897`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "surface", " ", "Helium", " ", 
   "abundance", " ", "integrating", " ", "kernel"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664896960928094*^9, 3.664896971282098*^9}, {
  3.68836672138553*^9, 3.688366723429618*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dys", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Fkys", "[", "r", "]"}], "*", 
     RowBox[{"dk", "[", "r", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.73"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6883665309551153`*^9, 3.6883665345430717`*^9}, {
  3.688366639526458*^9, 3.6883666876627607`*^9}}],

Cell[BoxData["0.05171198397658917`"], "Output",
 CellChangeTimes->{{3.688366667781567*^9, 3.688366688530169*^9}, 
   3.688375336018858*^9, 3.6883771041679688`*^9, 3.688377188837324*^9, 
   3.688382790454156*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Calculate", " ", "uncertainty", " ", "in", " ", "change", " ", "in", " ", 
    "surface", " ", "Helium", " ", "abundance", " ", "using", " ", "power"}], 
   "-", 
   RowBox[{"law", " ", "exponents"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688366714636283*^9, 3.68836673600532*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddys", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Ysc", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ysn", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Yso", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ysne", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ysmg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Yssi", "^", "2"}], "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Yss", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ysfe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6883667398071117`*^9, 3.688366788677092*^9}, {
  3.688366875212501*^9, 3.68836687567808*^9}, {3.688367029319537*^9, 
  3.6883670294354343`*^9}}],

Cell[BoxData["0.024624757866829876`"], "Output",
 CellChangeTimes->{3.6883668762338552`*^9, 3.688367029735695*^9, 
  3.688375336150189*^9, 3.6883771042112837`*^9, 3.688377188897366*^9, 
  3.688382790608242*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "new", " ", "surface", " ", "Helium", " ", "abundance"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.68837370342874*^9, 3.68837370877423*^9}, {
  3.6883738411583633`*^9, 3.688373843093937*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ysnew", "=", 
  RowBox[{"0.232", "+", "dys"}]}]], "Input",
 CellChangeTimes->{{3.688373825459301*^9, 3.688373829775837*^9}, {
  3.6883741097904663`*^9, 3.6883741110140944`*^9}}],

Cell[BoxData["0.2837119839765892`"], "Output",
 CellChangeTimes->{3.6883738312995872`*^9, 3.688374111876199*^9, 
  3.688375336207971*^9, 3.6883771042620296`*^9, 3.688377188957632*^9, 
  3.6883827908869658`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "on", " ", "new", " ", "surface", " ",
    "Helium", " ", "abundance"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688373832352776*^9, 3.688373846656104*^9}, {
  3.688374017846365*^9, 3.688374018638028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dysnew", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"0.003", "^", "2"}], "+", 
    RowBox[{"ddys", "^", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6883738484470577`*^9, 3.688373852814062*^9}, {
  3.688373890566909*^9, 3.688373898503852*^9}, {3.688374117358302*^9, 
  3.6883741186382847`*^9}}],

Cell[BoxData["0.024806827689166543`"], "Output",
 CellChangeTimes->{3.6883739004256763`*^9, 3.688374120513883*^9, 
  3.688375336274981*^9, 3.68837710431098*^9, 3.6883771890432*^9, 
  3.688382791036683*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Save", " ", "helioseismology", " ", "value", " ", "for", " ", "surface", 
   " ", "Helium", " ", "abundance"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688374001197987*^9, 3.688374027086557*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ysh", "=", "0.2485"}], ";", 
  RowBox[{"dysh", "=", "0.0034"}], ";"}]], "Input",
 CellChangeTimes->{{3.688374047907682*^9, 3.688374048942485*^9}, {
  3.6883741954378967`*^9, 3.688374196391075*^9}, {3.688374281519322*^9, 
  3.688374301677662*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "discrepancy", " ", "between", " ", "vSZ16", " ", "and", 
   " ", "helioseismology"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688374306319889*^9, 3.6883743209580727`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigmays", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"ysnew", "-", "ysh"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"dysnew", "^", "2"}], "+", 
      RowBox[{"dysh", "^", "2"}]}], "]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6883743266723146`*^9, 3.688374375714642*^9}}],

Cell[BoxData["1.406299932912399`"], "Output",
 CellChangeTimes->{{3.6883743545266237`*^9, 3.688374376077476*^9}, 
   3.688375336364667*^9, 3.688377104448882*^9, 3.688377189119515*^9, 
   3.688382791298819*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "RESPONSE", " ", "OF", " ", "SURFACE", " ", "HELIUM", " ", "ABUNDANCE", " ",
    "FINISHED"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688367071578491*^9, 3.6883670773003273`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "RESPONSE", " ", "OF", " ", "CONVECTIVE", " ", "ZONE", " ", "BOUNDARY"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.688367078901902*^9, 3.688367090149757*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "convective", " ", "zone", " ", 
    "boundary"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688366230007224*^9, 3.6883662384741917`*^9}, {
  3.688367275729431*^9, 3.688367279929329*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rbc", "=", 
   RowBox[{"-", "0.005"}]}], ";", " ", 
  RowBox[{"Rbn", "=", 
   RowBox[{"-", "0.003"}]}], ";", " ", 
  RowBox[{"Rbo", "=", 
   RowBox[{"-", "0.027"}]}], ";", " ", 
  RowBox[{"Rbne", "=", 
   RowBox[{"-", "0.011"}]}], ";", " ", 
  RowBox[{"Rbmg", "=", 
   RowBox[{"-", "0.004"}]}], ";", " ", 
  RowBox[{"Rbsi", "=", "0.002"}], ";", " ", 
  RowBox[{"Rbs", "=", "0.004"}], ";", " ", 
  RowBox[{"Rbfe", "=", 
   RowBox[{"-", "0.009"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.688366346970469*^9, 3.6883663972565727`*^9}, {
  3.688367117922902*^9, 3.6883671241308317`*^9}, {3.6883671784179487`*^9, 
  3.6883672219937763`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Calculate", " ", "change", " ", "in", " ", "convective", " ", "zone", " ",
     "boundary", " ", "with", " ", "power"}], "-", 
   RowBox[{"law", " ", "exponents"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688366402939342*^9, 3.688366412848673*^9}, {
  3.688367286137516*^9, 3.688367290625451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drbpl", "=", 
  RowBox[{
   RowBox[{"Rbc", "*", "dzc"}], "+", 
   RowBox[{"Rbn", "*", "dzn"}], "+", 
   RowBox[{"Rbo", "*", "dzo"}], "+", 
   RowBox[{"Rbne", "*", "dzne"}], "+", 
   RowBox[{"Rbmg", "*", "dzmg"}], "+", 
   RowBox[{"Rbsi", "*", "dzsi"}], "+", 
   RowBox[{"Rbs", "*", "dzs"}], "+", 
   RowBox[{"Rbfe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.688366421035203*^9, 3.6883664655366173`*^9}, {
  3.688367227753745*^9, 3.688367257121477*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.011126800531415763`"}]], "Output",
 CellChangeTimes->{
  3.688366465705154*^9, 3.688367257946918*^9, {3.688367301633842*^9, 
   3.6883673033885717`*^9}, 3.688375336464685*^9, 3.688377104532442*^9, 
   3.688377189199231*^9, 3.688382791635908*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "convective", " ", "zone", " ", 
   "boundary", " ", "integrating", " ", "kernel"}], "*)"}]], "Input",
 CellChangeTimes->{{3.664896960928094*^9, 3.664896971282098*^9}, {
  3.68836672138553*^9, 3.688366723429618*^9}, {3.688367294353001*^9, 
  3.688367299169207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drb", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Fkrb", "[", "r", "]"}], "*", 
     RowBox[{"dk", "[", "r", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "0.8"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6883665309551153`*^9, 3.6883665345430717`*^9}, {
  3.688366639526458*^9, 3.6883666876627607`*^9}, {3.6883675200326653`*^9, 
  3.6883675381462*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.008424945479408835`"}]], "Output",
 CellChangeTimes->{{3.688366667781567*^9, 3.688366688530169*^9}, {
   3.688367528926115*^9, 3.688367539157441*^9}, 3.6883753374416103`*^9, 
   3.688377105316268*^9, 3.6883771900344267`*^9, 3.688382792565688*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Calculate", " ", "uncertainty", " ", "in", " ", "change", " ", "in", " ", 
    "convective", " ", "zone", " ", "boundary", " ", "using", " ", "power"}], 
   "-", 
   RowBox[{"law", " ", "exponents"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688366714636283*^9, 3.68836673600532*^9}, {
  3.6883675005045633`*^9, 3.688367505816348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddrb", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Rbc", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbn", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbo", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbne", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbmg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbsi", "^", "2"}], "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbs", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Rbfe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6883667398071117`*^9, 3.688366788677092*^9}, {
  3.688366875212501*^9, 3.68836687567808*^9}, {3.688367029319537*^9, 
  3.6883670294354343`*^9}, {3.688367547984675*^9, 3.68836758925742*^9}}],

Cell[BoxData["0.003612893577176056`"], "Output",
 CellChangeTimes->{3.6883668762338552`*^9, 3.688367029735695*^9, 
  3.6883675907290077`*^9, 3.68837533760354*^9, 3.6883771053647833`*^9, 
  3.688377190114258*^9, 3.688382792668446*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "new", " ", "convective", " ", "zone", " ", "boundary"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.688374530152285*^9, 3.688374545581644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rbnew", "=", 
  RowBox[{"0.723", "*", 
   RowBox[{"(", 
    RowBox[{"1", "+", "drbpl"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.688374711207835*^9, 3.688374728980233*^9}}],

Cell[BoxData["0.7149553232157864`"], "Output",
 CellChangeTimes->{3.688374729228758*^9, 3.6883753376706247`*^9, 
  3.688377105489882*^9, 3.688377190177269*^9, 3.688382792926875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "on", " ", "new", " ", "convective", 
   " ", "zone", " ", "boundary"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688374751092739*^9, 3.6883747684042177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drbnew", "=", 
  RowBox[{"0.002", "*", 
   RowBox[{"(", 
    RowBox[{"1", "+", "drbpl"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6883747703827047`*^9, 3.688374782589446*^9}}],

Cell[BoxData["0.0019777463989371683`"], "Output",
 CellChangeTimes->{3.6883747830118933`*^9, 3.688375337736046*^9, 
  3.688377105531435*^9, 3.688377190234643*^9, 3.688382793082312*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Save", " ", "helioseismology", " ", "value", " ", "for", " ", "convective",
    " ", "zone", " ", "boundary"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883749387239037`*^9, 3.688374952017918*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rbh", "=", "0.713"}], ";", 
  RowBox[{"drbh", "=", "0.001"}], ";"}]], "Input",
 CellChangeTimes->{{3.688374992399776*^9, 3.688375005179902*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "discrepancy", " ", "between", " ", "vSZ16", " ", "and", 
   " ", "helioseismology"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883750075561037`*^9, 3.6883750208653297`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sigmarb", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"rbnew", "-", "rbh"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"drbnew", "^", "2"}], "+", 
      RowBox[{"drbh", "^", "2"}]}], "]"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.688375022985087*^9, 3.688375046289031*^9}}],

Cell[BoxData["0.8822919781152704`"], "Output",
 CellChangeTimes->{3.688375047120513*^9, 3.688375337808868*^9, 
  3.688377105600253*^9, 3.688377190313838*^9, 3.6883827933426313`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "RESPONSE", " ", "OF", " ", "CONVECTIVE", " ", "ZONE", " ", "BOUNDARY", " ",
    "FINISHED"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688367071578491*^9, 3.6883670773003273`*^9}, {
  3.6883675131605797`*^9, 3.688367515480465*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"RESPONSE", " ", "OF", " ", "NEUTRINO", " ", "FLUXES"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.688367746027638*^9, 3.688367754720254*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "Boron", " ", "neutrinos", " ", 
    "flux"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883677733696404`*^9, 3.6883677738642273`*^9}, {
  3.688367819001472*^9, 3.688367821344121*^9}, {3.688367895761137*^9, 
  3.688367918992586*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bc", "=", "0.026"}], ";", 
  RowBox[{"Bn", "=", "0.007"}], ";", 
  RowBox[{"Bo", "=", "0.112"}], ";", 
  RowBox[{"Bne", "=", "0.088"}], ";", 
  RowBox[{"Bmg", "=", "0.089"}], ";", 
  RowBox[{"Bsi", "=", "0.191"}], ";", 
  RowBox[{"Bs", "=", "0.134"}], ";", 
  RowBox[{"Bfe", "=", "0.501"}], ";"}]], "Input",
 CellChangeTimes->{{3.688367824788389*^9, 3.688367828128173*^9}, {
  3.688367904432912*^9, 3.688367955499498*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "Boron", " ", "neutrinos", " ", 
   "flux"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688367963536249*^9, 3.688367975664381*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dphib", "=", 
  RowBox[{
   RowBox[{"Bc", "*", "dzc"}], "+", 
   RowBox[{"Bn", "*", "dzn"}], "+", 
   RowBox[{"Bo", "*", "dzo"}], "+", 
   RowBox[{"Bne", "*", "dzne"}], "+", 
   RowBox[{"Bmg", "*", "dzmg"}], "+", 
   RowBox[{"Bsi", "*", "dzsi"}], "+", 
   RowBox[{"Bs", "*", "dzs"}], "+", 
   RowBox[{"Bfe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.688367977306341*^9, 3.688368018512454*^9}}],

Cell[BoxData["0.8877716878384547`"], "Output",
 CellChangeTimes->{3.6883680187883472`*^9, 3.68837533789504*^9, 
  3.688377105691512*^9, 3.688377190414358*^9, 3.688382793724976*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "in", " ", "Boron", " ", "neutrinos", 
   " ", "flux", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883680372247133`*^9, 3.688368044792418*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddphib", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Bc", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bn", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bo", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bne", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bmg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{"Bsi", "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bs", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bfe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688368048794202*^9, 3.6883681205363827`*^9}}],

Cell[BoxData["0.12908731657293057`"], "Output",
 CellChangeTimes->{3.688368087469543*^9, 3.688368121051835*^9, 
  3.688375337960822*^9, 3.688377105732592*^9, 3.688377190477909*^9, 
  3.688382794008634*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "pp", " ", "neutrinos", " ", 
    "flux"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.688368165881958*^9, 3.68836818831227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ppc", "=", 
   RowBox[{"-", "0.005"}]}], ";", 
  RowBox[{"ppn", "=", 
   RowBox[{"-", "0.001"}]}], ";", 
  RowBox[{"ppo", "=", 
   RowBox[{"-", "0.004"}]}], ";", 
  RowBox[{"ppne", "=", 
   RowBox[{"-", "0.004"}]}], ";", 
  RowBox[{"ppmg", "=", 
   RowBox[{"-", "0.004"}]}], ";", 
  RowBox[{"ppsi", "=", 
   RowBox[{"-", "0.008"}]}], ";", 
  RowBox[{"pps", "=", 
   RowBox[{"-", "0.006"}]}], ";", 
  RowBox[{"ppfe", "=", 
   RowBox[{"-", "0.017"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.688368191583931*^9, 3.6883681916882973`*^9}, {
  3.688368229951976*^9, 3.68836827752849*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "pp", " ", "neutrinos", " ", 
   "flux"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688368322618428*^9, 3.688368327953231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dphipp", "=", 
  RowBox[{
   RowBox[{"ppc", "*", "dzc"}], "+", 
   RowBox[{"ppn", "*", "dzn"}], "+", 
   RowBox[{"ppo", "*", "dzo"}], "+", 
   RowBox[{"ppne", "*", "dzne"}], "+", 
   RowBox[{"ppmg", "*", "dzmg"}], "+", 
   RowBox[{"ppsi", "*", "dzsi"}], "+", 
   RowBox[{"pps", "*", "dzs"}], "+", 
   RowBox[{"ppfe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.688368330337667*^9, 3.688368361184301*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.03781444968184789`"}]], "Output",
 CellChangeTimes->{3.688368362185521*^9, 3.688375338043166*^9, 
  3.688377105799653*^9, 3.6883771905513563`*^9, 3.688382794278654*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "in", " ", "pp", " ", "neutrinos", 
   " ", "flux", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883683737472563`*^9, 3.68836838021614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddphipp", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ppc", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"ppn", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"ppo", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"ppne", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"ppmg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"ppsi", "^", "2"}], "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"pps", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"ppfe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688368382265225*^9, 3.688368479256281*^9}}],

Cell[BoxData["0.003869857878527324`"], "Output",
 CellChangeTimes->{{3.688368471799755*^9, 3.688368479860791*^9}, 
   3.688375338109723*^9, 3.688377105843256*^9, 3.688377190609634*^9, 
   3.6883827944348516`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "Berillium", " ", "neutrinos", 
    " ", "flux", " ", "change"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883684954061337`*^9, 3.688368500088173*^9}, {
  3.688368569688385*^9, 3.688368576179274*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bec", "=", "0.004"}], ";", 
  RowBox[{"Ben", "=", "0.002"}], ";", 
  RowBox[{"Beo", "=", "0.052"}], ";", 
  RowBox[{"Bene", "=", "0.046"}], ";", 
  RowBox[{"Bemg", "=", "0.048"}], ";", 
  RowBox[{"Besi", "=", "0.103"}], ";", 
  RowBox[{"Bes", "=", "0.073"}], ";", 
  RowBox[{"Befe", "=", "0.204"}], ";"}]], "Input",
 CellChangeTimes->{{3.6883685845691357`*^9, 3.6883686357618504`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "Berillium", " ", "neutrinos", 
   " ", "flux"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688368659386039*^9, 3.6883686651213827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dphiBe", "=", 
  RowBox[{
   RowBox[{"Bec", "*", "dzc"}], "+", 
   RowBox[{"Ben", "*", "dzn"}], "+", 
   RowBox[{"Beo", "*", "dzo"}], "+", 
   RowBox[{"Bene", "*", "dzne"}], "+", 
   RowBox[{"Bemg", "*", "dzmg"}], "+", 
   RowBox[{"Besi", "*", "dzsi"}], "+", 
   RowBox[{"Bes", "*", "dzs"}], "+", 
   RowBox[{"Befe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.68836867562427*^9, 3.688368695081523*^9}}],

Cell[BoxData["0.42402606064588383`"], "Output",
 CellChangeTimes->{3.688368696200862*^9, 3.688375338191492*^9, 
  3.688377105906516*^9, 3.688377190691305*^9, 3.6883827947003803`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "in", " ", "Berillium", " ", 
   "neutrinos", " ", "flux", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883683737472563`*^9, 3.68836838021614*^9}, {
  3.6883687720721684`*^9, 3.6883687741369267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddphiBe", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Bec", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ben", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Beo", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bene", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bemg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Besi", "^", "2"}], "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Bes", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Befe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688368382265225*^9, 3.688368479256281*^9}, {
  3.688368796921381*^9, 3.6883688189799623`*^9}}],

Cell[BoxData["0.046443188951664376`"], "Output",
 CellChangeTimes->{3.688368820067079*^9, 3.6883753382583923`*^9, 
  3.6883771059652557`*^9, 3.688377190749319*^9, 3.6883827948679657`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "Nitrogen", " ", "neutrinos", 
    " ", "flux", " ", "change"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883684954061337`*^9, 3.688368500088173*^9}, {
  3.688368569688385*^9, 3.688368576179274*^9}, {3.688368933360301*^9, 
  3.6883689341460752`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nc", "=", "0.874"}], ";", 
  RowBox[{"Nn", "=", "0.147"}], ";", 
  RowBox[{"No", "=", "0.057"}], ";", 
  RowBox[{"Nne", "=", "0.042"}], ";", 
  RowBox[{"Nmg", "=", "0.044"}], ";", 
  RowBox[{"Nsi", "=", "0.102"}], ";", 
  RowBox[{"Ns", "=", "0.072"}], ";", 
  RowBox[{"Nfe", "=", "0.263"}], ";"}]], "Input",
 CellChangeTimes->{{3.6883685845691357`*^9, 3.6883686357618504`*^9}, {
  3.688368937081006*^9, 3.68836899669591*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "Nitrogen", " ", "neutrinos", 
   " ", "flux"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688368659386039*^9, 3.6883686651213827`*^9}, {
  3.688369023960063*^9, 3.6883690247277527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dphiN", "=", 
  RowBox[{
   RowBox[{"Nc", "*", "dzc"}], "+", 
   RowBox[{"Nn", "*", "dzn"}], "+", 
   RowBox[{"No", "*", "dzo"}], "+", 
   RowBox[{"Nne", "*", "dzne"}], "+", 
   RowBox[{"Nmg", "*", "dzmg"}], "+", 
   RowBox[{"Nsi", "*", "dzsi"}], "+", 
   RowBox[{"Ns", "*", "dzs"}], "+", 
   RowBox[{"Nfe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.68836867562427*^9, 3.688368695081523*^9}, {
  3.6883690277440042`*^9, 3.688369051591992*^9}}],

Cell[BoxData["1.0911567502637198`"], "Output",
 CellChangeTimes->{3.688369053113298*^9, 3.6883753383390837`*^9, 
  3.6883771060477*^9, 3.688377190827619*^9, 3.688382795290943*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "in", " ", "Nitrogen", " ", 
   "neutrinos", " ", "flux", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883683737472563`*^9, 3.68836838021614*^9}, {
  3.6883687720721684`*^9, 3.6883687741369267`*^9}, {3.6883690998559513`*^9, 
  3.6883691006078777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddphiN", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Nc", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Nn", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"No", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Nne", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Nmg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Nsi", "^", "2"}], "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ns", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Nfe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688368382265225*^9, 3.688368479256281*^9}, {
  3.688368796921381*^9, 3.6883688189799623`*^9}, {3.6883691048400583`*^9, 
  3.688369129815971*^9}}],

Cell[BoxData["0.14166512520730004`"], "Output",
 CellChangeTimes->{3.6883691309611053`*^9, 3.688375338402503*^9, 
  3.6883771061069813`*^9, 3.688377190888123*^9, 3.688382795449716*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Save", " ", "power"}], "-", 
   RowBox[{
   "law", " ", "exponents", " ", "for", " ", "Oxygen", " ", "neutrinos", " ", 
    "flux", " ", "change"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883684954061337`*^9, 3.688368500088173*^9}, {
  3.688368569688385*^9, 3.688368576179274*^9}, {3.688368933360301*^9, 
  3.6883689341460752`*^9}, {3.688369160299663*^9, 3.6883691610321302`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Oc", "=", "0.827"}], ";", 
  RowBox[{"Onnew", "=", "0.206"}], ";", 
  RowBox[{"Oo", "=", "0.084"}], ";", 
  RowBox[{"One", "=", "0.062"}], ";", 
  RowBox[{"Omg", "=", "0.065"}], ";", 
  RowBox[{"Osi", "=", "0.145"}], ";", 
  RowBox[{"Os", "=", "0.102"}], ";", 
  RowBox[{"Ofe", "=", "0.382"}], ";"}]], "Input",
 CellChangeTimes->{{3.6883685845691357`*^9, 3.6883686357618504`*^9}, {
  3.688368937081006*^9, 3.68836899669591*^9}, {3.688369418905465*^9, 
  3.688369492855907*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "change", " ", "in", " ", "Oxygen", " ", "neutrinos", " ",
    "flux"}], "*)"}]], "Input",
 CellChangeTimes->{{3.688368659386039*^9, 3.6883686651213827`*^9}, {
  3.688369023960063*^9, 3.6883690247277527`*^9}, {3.6883695024077873`*^9, 
  3.688369502969016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dphiO", "=", 
  RowBox[{
   RowBox[{"Oc", "*", "dzc"}], "+", 
   RowBox[{"Onnew", "*", "dzn"}], "+", 
   RowBox[{"Oo", "*", "dzo"}], "+", 
   RowBox[{"One", "*", "dzne"}], "+", 
   RowBox[{"Omg", "*", "dzmg"}], "+", 
   RowBox[{"Osi", "*", "dzsi"}], "+", 
   RowBox[{"Os", "*", "dzs"}], "+", 
   RowBox[{"Ofe", "*", "dzfe"}]}]}]], "Input",
 CellChangeTimes->{{3.68836867562427*^9, 3.688368695081523*^9}, {
  3.6883690277440042`*^9, 3.688369051591992*^9}, {3.688369505759742*^9, 
  3.6883695310812187`*^9}}],

Cell[BoxData["1.2833660092318988`"], "Output",
 CellChangeTimes->{3.688369534158499*^9, 3.68837533859011*^9, 
  3.688377106190789*^9, 3.688377190967914*^9, 3.688382795670857*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Calculate", " ", "uncertainty", " ", "in", " ", "Oxygen", " ", "neutrinos",
    " ", "flux", " ", "change"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6883683737472563`*^9, 3.68836838021614*^9}, {
  3.6883687720721684`*^9, 3.6883687741369267`*^9}, {3.6883690998559513`*^9, 
  3.6883691006078777`*^9}, {3.688373428902886*^9, 3.688373429509989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddphiO", "=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Oc", "^", "2"}], "*", 
     RowBox[{"ddzc", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Onnew", "^", "2"}], "*", 
     RowBox[{"ddzn", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Oo", "^", "2"}], "*", 
     RowBox[{"ddzo", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"One", "^", "2"}], "*", 
     RowBox[{"ddzne", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Omg", "^", "2"}], "*", 
     RowBox[{"ddzmg", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Osi", "^", "2"}], "*", 
     RowBox[{"ddzsi", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Os", "^", "2"}], "*", 
     RowBox[{"ddzs", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"Ofe", "^", "2"}], "*", 
     RowBox[{"ddzfe", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688368382265225*^9, 3.688368479256281*^9}, {
  3.688368796921381*^9, 3.6883688189799623`*^9}, {3.6883691048400583`*^9, 
  3.688369129815971*^9}, {3.688373495927331*^9, 3.688373501102133*^9}, {
  3.688373591479681*^9, 3.6883736110619993`*^9}}],

Cell[BoxData["0.14611056429977948`"], "Output",
 CellChangeTimes->{3.688373612076816*^9, 3.688375338650819*^9, 
  3.688377106275199*^9, 3.688377191029813*^9, 3.68838279583321*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "RESPONSE", " ", "OF", " ", "NEUTRINO", " ", "FLUXES", " ", "FINISHED"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.68837362910324*^9, 3.688373634894046*^9}}]
},
WindowSize->{1563, 924},
WindowMargins->{{201, Automatic}, {-10, Automatic}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 5945, 168, 99, "Input"],
Cell[6506, 190, 2287, 62, 187, "Input"],
Cell[8796, 254, 352, 7, 32, "Input"],
Cell[9151, 263, 1015, 29, 187, "Input"],
Cell[10169, 294, 654, 14, 32, "Input"],
Cell[CellGroupData[{
Cell[10848, 312, 894, 22, 32, "Input"],
Cell[11745, 336, 113753, 2015, 247, "Output"]
}, Open  ]],
Cell[125513, 2354, 393, 9, 32, "Input"],
Cell[125909, 2365, 563, 13, 32, "Input"],
Cell[126475, 2380, 2070, 58, 77, "Input"],
Cell[128548, 2440, 146, 3, 32, "Input"],
Cell[128697, 2445, 5680, 162, 99, "Input"],
Cell[134380, 2609, 2124, 59, 187, "Input"],
Cell[136507, 2670, 317, 7, 32, "Input"],
Cell[136827, 2679, 1186, 34, 187, "Input"],
Cell[138016, 2715, 397, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[138438, 2729, 977, 24, 32, "Input"],
Cell[139418, 2755, 150156, 2611, 237, "Output"]
}, Open  ]],
Cell[289589, 5369, 353, 8, 32, "Input"],
Cell[289945, 5379, 459, 11, 32, "Input"],
Cell[290407, 5392, 2044, 56, 77, "Input"],
Cell[292454, 5450, 144, 3, 32, "Input"],
Cell[292601, 5455, 5578, 162, 99, "Input"],
Cell[298182, 5619, 166, 3, 32, "Input"],
Cell[298351, 5624, 1089, 26, 209, "Input"],
Cell[299443, 5652, 165, 3, 32, "Input"],
Cell[299611, 5657, 1095, 26, 209, "Input"],
Cell[300709, 5685, 233, 5, 32, "Input"],
Cell[300945, 5692, 1606, 58, 187, "Input"],
Cell[302554, 5752, 233, 5, 32, "Input"],
Cell[302790, 5759, 2072, 61, 187, "Input"],
Cell[304865, 5822, 667, 17, 187, "Input"],
Cell[305535, 5841, 5907, 168, 99, "Input"],
Cell[311445, 6011, 1842, 45, 121, "Input"],
Cell[313290, 6058, 385, 10, 32, "Input"],
Cell[313678, 6070, 851, 21, 99, "Input"],
Cell[314532, 6093, 465, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[315022, 6108, 482, 12, 32, "Input"],
Cell[315507, 6122, 16289, 277, 245, "Output"]
}, Open  ]],
Cell[331811, 6402, 329, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[332165, 6414, 413, 11, 32, "Input"],
Cell[332581, 6427, 17720, 300, 243, "Output"]
}, Open  ]],
Cell[350316, 6730, 348, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[350689, 6743, 460, 12, 32, "Input"],
Cell[351152, 6757, 19191, 325, 248, "Output"]
}, Open  ]],
Cell[370358, 7085, 327, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[370710, 7097, 467, 12, 32, "Input"],
Cell[371180, 7111, 28392, 476, 236, "Output"]
}, Open  ]],
Cell[399587, 7590, 453, 9, 32, "Input"],
Cell[400043, 7601, 165, 3, 32, "Input"],
Cell[400211, 7606, 503, 12, 32, "Input"],
Cell[400717, 7620, 641, 18, 32, "Input"],
Cell[401361, 7640, 143, 3, 32, "Input"],
Cell[401507, 7645, 169, 3, 32, "Input"],
Cell[401679, 7650, 503, 12, 32, "Input"],
Cell[402185, 7664, 638, 18, 32, "Input"],
Cell[402826, 7684, 143, 3, 32, "Input"],
Cell[402972, 7689, 170, 3, 32, "Input"],
Cell[403145, 7694, 458, 11, 55, "Input"],
Cell[403606, 7707, 617, 18, 32, "Input"],
Cell[404226, 7727, 148, 3, 32, "Input"],
Cell[404377, 7732, 262, 6, 32, "Input"],
Cell[404642, 7740, 729, 21, 32, "Input"],
Cell[CellGroupData[{
Cell[405396, 7765, 374, 9, 32, "Input"],
Cell[405773, 7776, 12573, 217, 245, "Output"]
}, Open  ]],
Cell[418361, 7996, 287, 6, 32, "Input"],
Cell[418651, 8004, 1375, 40, 55, "Input"],
Cell[CellGroupData[{
Cell[420051, 8048, 373, 9, 32, "Input"],
Cell[420427, 8059, 16065, 275, 234, "Output"]
}, Open  ]],
Cell[436507, 8337, 299, 6, 32, "Input"],
Cell[436809, 8345, 510, 12, 55, "Input"],
Cell[437322, 8359, 2107, 57, 77, "Input"],
Cell[439432, 8418, 152, 3, 32, "Input"],
Cell[439587, 8423, 5698, 164, 99, "Input"],
Cell[445288, 8589, 177, 4, 32, "Input"],
Cell[445468, 8595, 281, 6, 32, "Input"],
Cell[445752, 8603, 861, 23, 32, "Input"],
Cell[446616, 8628, 394, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[447035, 8641, 505, 13, 32, "Input"],
Cell[447543, 8656, 16237, 274, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463817, 8935, 614, 16, 32, "Input"],
Cell[464434, 8953, 50632, 880, 237, "Output"]
}, Open  ]],
Cell[515081, 9836, 300, 6, 32, "Input"],
Cell[515384, 9844, 1236, 38, 55, "Input"],
Cell[516623, 9884, 415, 9, 32, "Input"],
Cell[517041, 9895, 484, 12, 55, "Input"],
Cell[517528, 9909, 2158, 57, 77, "Input"],
Cell[519689, 9968, 148, 3, 32, "Input"],
Cell[519840, 9973, 218, 4, 32, "Input"],
Cell[520061, 9979, 307, 8, 32, "Input"],
Cell[520371, 9989, 335, 8, 32, "Input"],
Cell[520709, 9999, 167, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[520901, 10006, 843, 23, 32, "Input"],
Cell[521747, 10031, 23087, 391, 231, "Output"]
}, Open  ]],
Cell[544849, 10425, 337, 7, 32, "Input"],
Cell[545189, 10434, 439, 11, 55, "Input"],
Cell[545631, 10447, 1945, 51, 77, "Input"],
Cell[547579, 10500, 246, 5, 32, "Input"],
Cell[547828, 10507, 333, 6, 32, "Input"],
Cell[548164, 10515, 313, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[548502, 10527, 379, 9, 32, "Input"],
Cell[548884, 10538, 20271, 344, 229, "Output"]
}, Open  ]],
Cell[569170, 10885, 366, 7, 32, "Input"],
Cell[569539, 10894, 360, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[569924, 10909, 749, 21, 32, "Input"],
Cell[570676, 10932, 26951, 455, 231, "Output"]
}, Open  ]],
Cell[597642, 11390, 374, 8, 32, "Input"],
Cell[598019, 11400, 422, 11, 55, "Input"],
Cell[598444, 11413, 2199, 57, 99, "Input"],
Cell[600646, 11472, 155, 3, 32, "Input"],
Cell[600804, 11477, 226, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[601055, 11486, 552, 16, 32, "Input"],
Cell[601610, 11504, 281, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601928, 11513, 226, 5, 32, "Input"],
Cell[602157, 11520, 207, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602401, 11528, 261, 6, 32, "Input"],
Cell[602665, 11536, 86, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602788, 11542, 527, 15, 32, "Input"],
Cell[603318, 11559, 140, 2, 32, "Output"]
}, Open  ]],
Cell[603473, 11564, 199, 5, 32, "Input"],
Cell[603675, 11571, 205, 5, 32, "Input"],
Cell[603883, 11578, 277, 7, 32, "Input"],
Cell[604163, 11587, 472, 11, 32, "Input"],
Cell[604638, 11600, 307, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[604970, 11611, 436, 11, 32, "Input"],
Cell[605409, 11624, 183, 2, 32, "Output"]
}, Open  ]],
Cell[605607, 11629, 303, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[605935, 11639, 388, 10, 32, "Input"],
Cell[606326, 11651, 211, 3, 32, "Output"]
}, Open  ]],
Cell[606552, 11657, 342, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[606919, 11669, 998, 30, 32, "Input"],
Cell[607920, 11701, 210, 3, 32, "Output"]
}, Open  ]],
Cell[608145, 11707, 254, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[608424, 11717, 201, 4, 32, "Input"],
Cell[608628, 11723, 210, 3, 32, "Output"]
}, Open  ]],
Cell[608853, 11729, 286, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[609164, 11739, 334, 8, 32, "Input"],
Cell[609501, 11749, 205, 3, 32, "Output"]
}, Open  ]],
Cell[609721, 11755, 239, 5, 32, "Input"],
Cell[609963, 11762, 281, 6, 32, "Input"],
Cell[610247, 11770, 233, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[610505, 11779, 346, 10, 32, "Input"],
Cell[610854, 11791, 209, 3, 32, "Output"]
}, Open  ]],
Cell[611078, 11797, 223, 5, 32, "Input"],
Cell[611304, 11804, 203, 5, 32, "Input"],
Cell[611510, 11811, 326, 8, 32, "Input"],
Cell[611839, 11821, 671, 18, 32, "Input"],
Cell[612513, 11841, 356, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[612894, 11853, 485, 12, 32, "Input"],
Cell[613382, 11867, 276, 5, 32, "Output"]
}, Open  ]],
Cell[613673, 11875, 352, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[614050, 11886, 436, 11, 32, "Input"],
Cell[614489, 11899, 277, 4, 32, "Output"]
}, Open  ]],
Cell[614781, 11906, 393, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[615199, 11919, 1043, 30, 32, "Input"],
Cell[616245, 11951, 233, 3, 32, "Output"]
}, Open  ]],
Cell[616493, 11957, 205, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[616723, 11966, 199, 5, 32, "Input"],
Cell[616925, 11973, 181, 2, 32, "Output"]
}, Open  ]],
Cell[617121, 11978, 239, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[617385, 11987, 202, 5, 32, "Input"],
Cell[617590, 11994, 184, 2, 32, "Output"]
}, Open  ]],
Cell[617789, 11999, 241, 5, 32, "Input"],
Cell[618033, 12006, 179, 4, 32, "Input"],
Cell[618215, 12012, 235, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[618475, 12021, 344, 10, 32, "Input"],
Cell[618822, 12033, 181, 2, 32, "Output"]
}, Open  ]],
Cell[619018, 12038, 274, 6, 32, "Input"],
Cell[619295, 12046, 183, 4, 32, "Input"],
Cell[619481, 12052, 373, 9, 32, "Input"],
Cell[619857, 12063, 457, 11, 32, "Input"],
Cell[620317, 12076, 216, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[620558, 12085, 426, 11, 32, "Input"],
Cell[620987, 12098, 180, 2, 32, "Output"]
}, Open  ]],
Cell[621182, 12103, 238, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[621445, 12112, 867, 27, 32, "Input"],
Cell[622315, 12141, 205, 3, 32, "Output"]
}, Open  ]],
Cell[622535, 12147, 267, 7, 32, "Input"],
Cell[622805, 12156, 618, 19, 32, "Input"],
Cell[623426, 12177, 213, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[623664, 12186, 435, 11, 32, "Input"],
Cell[624102, 12199, 199, 3, 32, "Output"]
}, Open  ]],
Cell[624316, 12205, 234, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[624575, 12214, 900, 28, 32, "Input"],
Cell[625478, 12244, 212, 3, 32, "Output"]
}, Open  ]],
Cell[625705, 12250, 341, 8, 32, "Input"],
Cell[626049, 12260, 420, 10, 32, "Input"],
Cell[626472, 12272, 222, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[626719, 12281, 434, 11, 32, "Input"],
Cell[627156, 12294, 182, 2, 32, "Output"]
}, Open  ]],
Cell[627353, 12299, 294, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[627672, 12309, 951, 29, 32, "Input"],
Cell[628626, 12340, 187, 2, 32, "Output"]
}, Open  ]],
Cell[628828, 12345, 391, 9, 32, "Input"],
Cell[629222, 12356, 460, 11, 32, "Input"],
Cell[629685, 12369, 272, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[629982, 12379, 476, 12, 32, "Input"],
Cell[630461, 12393, 179, 2, 32, "Output"]
}, Open  ]],
Cell[630655, 12398, 346, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[631026, 12409, 993, 30, 32, "Input"],
Cell[632022, 12441, 184, 2, 32, "Output"]
}, Open  ]],
Cell[632221, 12446, 437, 9, 32, "Input"],
Cell[632661, 12457, 512, 12, 32, "Input"],
Cell[633176, 12471, 321, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[633522, 12482, 530, 13, 32, "Input"],
Cell[634055, 12497, 178, 2, 32, "Output"]
}, Open  ]],
Cell[634248, 12502, 390, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[634663, 12513, 1093, 31, 32, "Input"],
Cell[635759, 12546, 179, 2, 32, "Output"]
}, Open  ]],
Cell[635953, 12551, 202, 5, 65, "Input"]
}
]
*)

(* End of internal cache information *)
